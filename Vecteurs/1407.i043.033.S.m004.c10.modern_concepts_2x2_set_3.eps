%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1407.i043.033.S.m004.c10.modern concepts 2x2 set 3.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: ivan
%%CreationDate: 7/25/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">blank template 450x450 RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-07-25T00:41:59+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-07-25T00:41:59+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-07-25T00:41:59+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AGZwUYmRocy+pzmIgk7AK&#xA;vpKPtNQnOvHs7p8MQNTl4Mkum36fv2fP5e12r1EpHR4PExQ6m9/l925WOhU+x6HNL2t2VPRzAJ4o&#xA;y5F6TsDt3H2jiMgOGcNpR7u74Fbmpd87FXYq7FXYq7FXYq7FXYq7FXYq7FXYqi89wfmVjl15wAuX&#xA;gsbY3IjBLScqA8etKA7ZjS1G9AW7CGh9NyNJjomu2+qxMUUxzR09SImtK9CD3GWYsom0ajTHEfJM&#xA;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&#xA;nYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0262ec43-e100-e94d-8df1-dccf0c56d99c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0262ec43-e100-e94d-8df1-dccf0c56d99c</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:361C93E55D13E411BBF1DFA5FE8BCE59</stRef:instanceID>
            <stRef:documentID>xmp.did:361C93E55D13E411BBF1DFA5FE8BCE59</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9122B9990013E4119AB999579F6D66E8</stEvt:instanceID>
                  <stEvt:when>2014-07-24T15:50:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:361C93E55D13E411BBF1DFA5FE8BCE59</stEvt:instanceID>
                  <stEvt:when>2014-07-24T21:12:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0262ec43-e100-e94d-8df1-dccf0c56d99c</stEvt:instanceID>
                  <stEvt:when>2014-07-25T00:41:59+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
0 0 mo
225 0 li
225 225 li
0 225 li
0 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.945098 .403922 .160784 rgb
f
202.065 66.9063 mo
202.065 72.0059 197.931 76.1396 192.831 76.1396 cv
187.731 76.1396 183.598 72.0059 183.598 66.9063 cv
183.598 61.8066 187.731 57.6729 192.831 57.6729 cv
197.931 57.6729 202.065 61.8066 202.065 66.9063 cv
cp
.92549 .533333 .505882 rgb
f
190.493 202.362 mo
185.393 202.362 181.259 198.228 181.259 193.129 cv
181.259 188.029 185.393 183.895 190.493 183.895 cv
195.592 183.895 199.726 188.029 199.726 193.129 cv
199.726 198.228 195.592 202.362 190.493 202.362 cv
.956863 .521569 .329412 rgb
f
58.1831 38.502 mo
53.0824 38.502 48.9497 34.3682 48.9497 29.2685 cv
48.9497 24.1689 53.0824 20.0352 58.1831 20.0352 cv
63.2827 20.0352 67.4165 24.1689 67.4165 29.2685 cv
67.4165 34.3682 63.2827 38.502 58.1831 38.502 cv
f
39.9341 158.091 mo
39.9341 163.21 35.7861 167.359 30.6685 167.359 cv
25.5498 167.359 21.4023 163.21 21.4023 158.091 cv
21.4023 152.975 25.5498 148.825 30.6685 148.825 cv
35.7861 148.825 39.9341 152.975 39.9341 158.091 cv
cp
.92549 .533333 .505882 rgb
f
165.423 51.4648 mo
159.671 51.4648 155.008 46.8027 155.008 41.0498 cv
155.008 35.2969 159.671 30.6348 165.423 30.6348 cv
171.175 30.6348 175.84 35.2969 175.84 41.0498 cv
175.84 46.8027 171.175 51.4648 165.423 51.4648 cv
.972549 .701961 .580392 rgb
f
77.2158 45.334 mo
74.3438 45.334 72.0151 43.0049 72.0151 40.1328 cv
72.0151 37.2617 74.3438 34.9326 77.2158 34.9326 cv
80.0873 34.9326 82.416 37.2617 82.416 40.1328 cv
82.416 43.0049 80.0873 45.334 77.2158 45.334 cv
f
203.048 148.049 mo
203.048 150.923 200.72 153.249 197.847 153.249 cv
194.975 153.249 192.646 150.923 192.646 148.049 cv
192.646 145.177 194.975 142.849 197.847 142.849 cv
200.72 142.849 203.048 145.177 203.048 148.049 cv
cp
.172549 .341176 .470588 rgb
f
203.598 31.8086 mo
203.598 33.5352 202.199 34.9326 200.474 34.9326 cv
198.748 34.9326 197.35 33.5352 197.35 31.8086 cv
197.35 30.084 198.748 28.6865 200.474 28.6865 cv
202.199 28.6865 203.598 30.084 203.598 31.8086 cv
cp
.92549 .533333 .505882 rgb
f
48.3115 62.7197 mo
48.3115 64.4453 46.9116 65.8428 45.187 65.8428 cv
43.4624 65.8428 42.063 64.4453 42.063 62.7197 cv
42.063 60.9932 43.4624 59.5957 45.187 59.5957 cv
46.9116 59.5957 48.3115 60.9932 48.3115 62.7197 cv
cp
.172549 .341176 .470588 rgb
f
73.0557 201.74 mo
71.3306 201.74 69.932 200.343 69.932 198.616 cv
69.932 196.892 71.3306 195.494 73.0557 195.494 cv
74.7822 195.494 76.1796 196.892 76.1796 198.616 cv
76.1796 200.343 74.7822 201.74 73.0557 201.74 cv
.921569 .654902 .533333 rgb
f
35.2002 204.964 mo
32.3271 204.964 29.999 202.636 29.999 199.764 cv
29.999 196.89 32.3271 194.561 35.2002 194.561 cv
38.0723 194.561 40.4019 196.89 40.4019 199.764 cv
40.4019 202.636 38.0723 204.964 35.2002 204.964 cv
.956863 .521569 .329412 rgb
f
114.196 193.803 mo
72.5005 193.803 38.6997 160.002 38.6997 118.307 cv
38.6997 76.6094 72.5005 42.8086 114.196 42.8086 cv
155.892 42.8086 189.693 76.6094 189.693 118.307 cv
189.693 160.002 155.892 193.803 114.196 193.803 cv
114.196 44.0293 mo
73.1743 44.0293 39.9185 77.2832 39.9185 118.307 cv
39.9185 159.328 73.1743 192.584 114.196 192.584 cv
155.218 192.584 188.474 159.328 188.474 118.307 cv
188.474 77.2832 155.218 44.0293 114.196 44.0293 cv
.972549 .701961 .580392 rgb
f
79.3325 172.914 mo
79.3325 182.525 71.5425 190.316 61.9312 190.316 cv
52.3218 190.316 44.5308 182.525 44.5308 172.914 cv
44.5308 163.305 52.3218 155.514 61.9312 155.514 cv
71.5425 155.514 79.3325 163.305 79.3325 172.914 cv
cp
.239216 .678431 .87451 rgb
f
205.154 98.8516 mo
205.154 109.58 196.456 118.279 185.727 118.279 cv
174.998 118.279 166.3 109.58 166.3 98.8516 cv
166.3 88.123 174.998 79.4258 185.727 79.4258 cv
196.456 79.4258 205.154 88.123 205.154 98.8516 cv
cp
f
184.345 174.686 mo
184.345 187.258 174.155 197.449 161.581 197.449 cv
149.011 197.449 138.82 187.258 138.82 174.686 cv
138.82 162.113 149.011 151.922 161.581 151.922 cv
174.155 151.922 184.345 162.113 184.345 174.686 cv
cp
f
64.5493 98.8516 mo
64.5493 111.197 54.5425 121.203 42.1978 121.203 cv
29.854 121.203 19.8462 111.197 19.8462 98.8516 cv
19.8462 86.5078 29.854 76.502 42.1978 76.502 cv
54.5425 76.502 64.5493 86.5078 64.5493 98.8516 cv
cp
f
139.367 48.627 mo
139.367 62.5859 128.05 73.9023 114.091 73.9023 cv
100.131 73.9023 88.8149 62.5859 88.8149 48.627 cv
88.8149 34.666 100.131 23.3516 114.091 23.3516 cv
128.05 23.3516 139.367 34.666 139.367 48.627 cv
cp
f
96.6714 208.408 mo
96.167 208.953 li
95.4668 208.324 94.8223 208.057 93.9399 208.057 cv
92.7632 208.057 91.9507 208.674 91.9507 209.682 cv
91.9507 210.662 92.4692 211.111 94.1919 211.629 cv
95.915 212.162 96.9653 212.777 96.9653 214.473 cv
96.9653 216.111 95.7188 217.246 93.7856 217.246 cv
92.4692 217.246 91.5024 216.783 90.7183 216.041 cv
91.2227 215.496 li
91.895 216.125 92.6514 216.531 93.772 216.531 cv
95.1167 216.531 96.1108 215.789 96.1108 214.5 cv
96.1108 213.338 95.5366 212.861 93.8276 212.33 cv
91.9229 211.742 91.0962 211.084 91.0962 209.697 cv
91.0962 208.338 92.231 207.344 93.9121 207.344 cv
95.1587 207.344 95.915 207.734 96.6714 208.408 cv
cp
1 1 1 rgb
f
102.537 216.783 mo
102.088 217.078 101.584 217.246 100.996 217.246 cv
99.8892 217.246 99.2026 216.588 99.2026 215.313 cv
99.2026 210.424 li
97.9697 210.424 li
97.9697 209.766 li
99.2026 209.766 li
99.2026 208.016 li
100.015 207.918 li
100.015 209.766 li
101.906 209.766 li
101.808 210.424 li
100.015 210.424 li
100.015 215.271 li
100.015 216.125 100.351 216.547 101.094 216.547 cv
101.5 216.547 101.85 216.434 102.214 216.209 cv
102.537 216.783 li
cp
f
107.716 215.299 mo
107.716 213.283 li
106.442 213.283 li
104.971 213.283 104.145 213.857 104.145 215.02 cv
104.145 216.027 104.719 216.588 105.686 216.588 cv
106.61 216.588 107.254 216.125 107.716 215.299 cv
cp
108.529 215.467 mo
108.529 216.279 108.753 216.518 109.146 216.672 cv
108.963 217.246 li
108.319 217.121 107.94 216.799 107.829 216.014 cv
107.31 216.854 106.526 217.246 105.545 217.246 cv
104.13 217.246 103.276 216.363 103.276 215.061 cv
103.276 213.52 104.439 212.68 106.316 212.68 cv
107.716 212.68 li
107.716 211.98 li
107.716 210.816 107.24 210.299 106.021 210.299 cv
105.433 210.299 104.761 210.453 104.033 210.719 cv
103.822 210.102 li
104.635 209.781 105.363 209.611 106.134 209.611 cv
107.801 209.611 108.529 210.439 108.529 211.938 cv
108.529 215.467 li
cp
f
115.052 209.697 mo
114.898 210.467 li
114.688 210.41 114.506 210.383 114.254 210.383 cv
113.231 210.383 112.685 211.111 112.293 212.609 cv
112.293 217.092 li
111.48 217.092 li
111.48 209.766 li
112.181 209.766 li
112.251 211.404 li
112.643 210.201 113.301 209.611 114.324 209.611 cv
114.604 209.611 114.856 209.641 115.052 209.697 cv
cp
f
120.176 216.783 mo
119.728 217.078 119.224 217.246 118.635 217.246 cv
117.529 217.246 116.842 216.588 116.842 215.313 cv
116.842 210.424 li
115.609 210.424 li
115.609 209.766 li
116.842 209.766 li
116.842 208.016 li
117.655 207.918 li
117.655 209.766 li
119.546 209.766 li
119.448 210.424 li
117.655 210.424 li
117.655 215.271 li
117.655 216.125 117.991 216.547 118.733 216.547 cv
119.14 216.547 119.49 216.434 119.854 216.209 cv
120.176 216.783 li
cp
f
126.057 217.092 mo
126.015 215.789 li
125.496 216.658 124.754 217.246 123.619 217.246 cv
122.303 217.246 121.546 216.447 121.546 215.006 cv
121.546 209.766 li
122.358 209.766 li
122.358 214.922 li
122.358 216.084 122.849 216.574 123.801 216.574 cv
124.768 216.574 125.44 215.943 125.944 215.076 cv
125.944 209.766 li
126.757 209.766 li
126.757 217.092 li
126.057 217.092 li
cp
f
134.54 213.395 mo
134.54 211.307 133.868 210.285 132.594 210.285 cv
131.655 210.285 131.039 210.846 130.535 211.545 cv
130.535 215.439 li
130.983 216.125 131.627 216.561 132.468 216.561 cv
133.813 216.561 134.54 215.496 134.54 213.395 cv
cp
135.409 213.395 mo
135.409 215.705 134.443 217.246 132.622 217.246 cv
131.697 217.246 130.997 216.826 130.535 216.238 cv
130.535 219.852 li
129.722 219.963 li
129.722 209.766 li
130.422 209.766 li
130.493 210.83 li
131.025 210.088 131.809 209.611 132.748 209.611 cv
134.555 209.611 135.409 211.027 135.409 213.395 cv
cp
f
25.354 24.3828 mo
25.354 19.0547 li
25.354 18.8301 25.4868 18.625 25.6929 18.5332 cv
26.6782 18.0918 li
27.0249 17.9375 27.2476 17.5918 27.2476 17.2109 cv
27.2476 15.7246 li
27.2339 15.0156 li
20.9204 15.041 li
20.9204 17.2109 li
20.9204 17.5918 21.144 17.9375 21.4907 18.0918 cv
22.479 18.5332 li
22.6841 18.625 22.8169 18.8301 22.8169 19.0547 cv
22.8169 24.3828 li
20.6646 24.3828 li
20.7378 23.2969 20.7983 23.0195 19.4575 21.5566 cv
19.4663 21.5566 li
18.4429 20.4395 17.814 18.9551 17.814 17.3223 cv
17.814 13.8594 20.6216 11.0508 24.0854 11.0508 cv
27.5474 11.0508 30.3569 13.8594 30.3569 17.3223 cv
30.3569 18.9551 29.7261 20.4395 28.7026 21.5566 cv
28.7114 21.5566 li
27.3706 23.0195 27.4312 23.2969 27.5063 24.3828 cv
25.354 24.3828 li
cp
21.4741 16.623 mo
21.5103 16.6914 21.5933 16.7695 21.77 16.7695 cv
21.9478 16.7695 22.0317 16.6914 22.0679 16.623 cv
22.1919 16.4063 22.0112 16.0039 21.9048 15.8027 cv
22.563 15.8027 li
22.4546 16.0039 22.2739 16.4063 22.3989 16.623 cv
22.436 16.6914 22.519 16.7695 22.6958 16.7695 cv
22.8745 16.7695 22.9556 16.6914 22.9956 16.623 cv
23.1177 16.4063 22.937 16.0039 22.8306 15.8027 cv
23.4868 15.8027 li
23.3804 16.0039 23.2017 16.4063 23.3247 16.623 cv
23.3618 16.6914 23.4438 16.7695 23.6216 16.7695 cv
23.8003 16.7695 23.8813 16.6914 23.9194 16.623 cv
24.0415 16.4063 23.8628 16.0039 23.7563 15.8027 cv
24.4126 15.8027 li
24.3062 16.0039 24.1274 16.4063 24.2505 16.623 cv
24.2876 16.6914 24.3696 16.7695 24.5474 16.7695 cv
24.7241 16.7695 24.8071 16.6914 24.8433 16.623 cv
24.9692 16.4063 24.7886 16.0039 24.6821 15.8027 cv
25.3384 15.8027 li
25.2319 16.0039 25.0542 16.4063 25.1753 16.623 cv
25.2134 16.6914 25.2954 16.7695 25.4731 16.7695 cv
25.6519 16.7695 25.7329 16.6914 25.769 16.623 cv
25.895 16.4063 25.7144 16.0039 25.6069 15.8027 cv
26.2642 15.8027 li
26.1577 16.0039 25.979 16.4063 26.1011 16.623 cv
26.1392 16.6914 26.2212 16.7695 26.3989 16.7695 cv
26.5757 16.7695 26.6587 16.6914 26.6968 16.623 cv
26.8188 16.4063 26.6401 16.0039 26.5327 15.8027 cv
26.8569 15.8027 li
26.8569 17.2109 li
26.8569 17.4355 26.7222 17.6406 26.5181 17.7344 cv
25.5308 18.1758 li
25.1841 18.3301 24.9614 18.6758 24.9614 19.0547 cv
24.9614 24.3828 li
23.2095 24.3828 li
23.2095 19.0547 li
23.2095 18.6758 22.9849 18.3301 22.6382 18.1758 cv
21.6509 17.7344 li
21.4458 17.6406 21.313 17.4355 21.313 17.2109 cv
21.313 15.8027 li
21.6353 15.8027 li
21.5288 16.0039 21.3501 16.4063 21.4741 16.623 cv
cp
27.4897 25.9688 mo
27.4224 26.1348 li
27.2544 26.2031 li
20.9146 26.1992 li
20.7847 26.1992 20.6792 26.0938 20.6792 25.9648 cv
20.6792 25.8203 li
20.7495 25.6543 li
20.9146 25.5859 li
27.2544 25.5898 li
27.3853 25.5898 27.4897 25.6953 27.4897 25.8242 cv
27.4897 25.9688 li
cp
26.8784 27.9941 mo
25.1567 27.9941 li
25.1567 28.334 24.8833 28.6094 24.5444 28.6094 cv
23.6265 28.6094 li
23.2866 28.6094 23.0122 28.334 23.0122 27.9941 cv
21.2954 27.9941 li
20.9575 27.9941 20.6821 27.7207 20.6821 27.3809 cv
27.4897 27.3809 li
27.4897 27.7207 27.2163 27.9941 26.8784 27.9941 cv
cp
28.2515 31.832 mo
28.2515 30.3633 29.0776 28.3379 30.9399 26.8828 cv
33.7798 24.6641 35.7534 21.332 35.7534 17.4512 cv
35.7534 11.0059 30.5288 5.7832 24.0845 5.7832 cv
17.6392 5.7832 12.4155 11.0059 12.4155 17.4512 cv
12.4155 21.332 14.3901 24.6641 17.23 26.8828 cv
19.0903 28.3379 19.9185 30.3633 19.9185 31.832 cv
12.104 33.6992 6.7876 37.4063 7.18506 38.1641 cv
9.84717 43.2188 18.2202 45.3867 24.0845 45.3867 cv
29.9487 45.3867 38.3228 43.2188 40.9839 38.1641 cv
41.3813 37.4063 36.0649 33.6992 28.2515 31.832 cv
cp
.239216 .678431 .87451 rgb
f
182.487 95.3008 mo
181.14 93.9551 181.142 91.7725 182.487 90.4258 cv
183.836 89.0771 186.019 89.0771 187.366 90.4248 cv
188.712 91.7705 188.712 93.9531 187.364 95.3027 cv
186.019 96.6484 183.834 96.6484 182.487 95.3008 cv
cp
189.218 97.1582 mo
189.593 96.7852 189.899 96.3711 190.157 95.9355 cv
192.242 96.0049 li
192.538 94.9023 li
192.831 93.7988 li
190.995 92.8174 li
190.988 91.7988 190.722 90.7832 190.203 89.8711 cv
191.303 88.1006 li
190.497 87.291 li
189.689 86.4844 li
187.919 87.5869 li
187.004 87.0684 185.99 86.8018 184.972 86.793 cv
183.992 84.958 li
182.887 85.252 li
181.785 85.5479 li
181.854 87.6328 li
181.419 87.8887 181.006 88.1982 180.634 88.5713 cv
180.262 88.9443 179.953 89.3545 179.698 89.7891 cv
177.613 89.7178 li
177.317 90.8223 li
177.021 91.9268 li
178.858 92.9072 li
178.863 93.9258 179.13 94.9424 179.65 95.8564 cv
178.548 97.625 li
179.356 98.4316 li
180.163 99.2402 li
181.933 98.1377 li
182.847 98.6582 183.86 98.9268 184.881 98.9326 cv
185.863 100.77 li
186.966 100.474 li
188.072 100.178 li
187.999 98.0918 li
188.433 97.8369 188.847 97.5293 189.218 97.1582 cv
cp
.172549 .341176 .470588 rgb
f
191.515 102.474 mo
191.188 101.086 192.048 99.7031 193.434 99.376 cv
194.822 99.0488 196.209 99.9092 196.532 101.295 cv
196.859 102.682 195.997 104.069 194.614 104.393 cv
193.227 104.718 191.838 103.86 191.515 102.474 cv
cp
195.061 106.303 mo
195.445 106.211 195.802 106.07 196.134 105.896 cv
197.434 106.762 li
198.057 106.176 li
198.68 105.593 li
197.898 104.246 li
198.294 103.595 198.523 102.846 198.553 102.06 cv
199.95 101.371 li
199.754 100.54 li
199.561 99.708 li
198.002 99.7119 li
197.63 99.0225 197.088 98.4521 196.443 98.0459 cv
196.543 96.4941 li
195.726 96.2461 li
194.91 96 li
194.129 97.3525 li
193.754 97.3438 193.373 97.375 192.987 97.4678 cv
192.604 97.5557 192.246 97.6953 191.913 97.873 cv
190.617 97.0059 li
189.993 97.5918 li
189.37 98.1787 li
190.151 99.5215 li
189.753 100.172 189.524 100.924 189.495 101.707 cv
188.096 102.396 li
188.293 103.228 li
188.485 104.059 li
190.044 104.059 li
190.42 104.747 190.961 105.314 191.605 105.722 cv
191.506 107.275 li
192.323 107.521 li
193.14 107.768 li
193.916 106.416 li
194.294 106.427 194.676 106.393 195.061 106.303 cv
cp
f
177.867 106.545 mo
177.547 104.926 178.604 103.358 180.223 103.042 cv
181.843 102.726 183.413 103.779 183.727 105.399 cv
184.044 107.02 182.987 108.588 181.37 108.902 cv
179.75 109.22 178.18 108.165 177.867 106.545 cv
cp
181.804 111.133 mo
182.253 111.046 182.672 110.897 183.066 110.71 cv
184.534 111.769 li
185.279 111.118 li
186.025 110.469 li
185.178 108.877 li
185.667 108.139 185.965 107.28 186.035 106.374 cv
187.681 105.638 li
187.492 104.666 li
187.304 103.693 li
185.496 103.629 li
185.096 102.815 184.492 102.132 183.764 101.634 cv
183.948 99.8408 li
183.011 99.5176 li
182.079 99.1973 li
181.116 100.73 li
180.682 100.703 180.238 100.724 179.79 100.813 cv
179.34 100.898 178.919 101.044 178.527 101.236 cv
177.063 100.176 li
176.314 100.827 li
175.568 101.478 li
176.415 103.069 li
175.926 103.803 175.626 104.662 175.558 105.57 cv
173.91 106.308 li
174.1 107.279 li
174.288 108.25 li
176.091 108.315 li
176.499 109.13 177.098 109.811 177.828 110.312 cv
177.645 112.104 li
178.58 112.428 li
179.517 112.747 li
180.475 111.216 li
180.91 111.243 181.355 111.221 181.804 111.133 cv
cp
f
128.091 117.067 mo
128.091 117.067 123.195 128.246 126.384 136.54 cv
115.105 139.468 94.8662 159.987 94.8662 159.987 cv
93.9365 158.902 li
100.952 151.996 113.539 140.934 110.843 127.807 cv
128.091 117.067 li
cp
f
118.405 105.763 mo
118.405 105.763 106.608 108.886 98.9014 104.463 cv
94.2803 115.158 70.8965 132.013 70.8965 132.013 cv
71.8242 133.096 li
79.7266 127.221 92.5889 116.481 105.149 121.16 cv
118.405 105.763 li
cp
f
118.699 102.974 mo
105.546 116.104 100.647 125.888 100.647 125.888 cv
103.063 128.707 li
105.479 131.53 li
105.479 131.53 115.898 128.189 130.893 117.208 cv
152.065 101.698 162.658 77.6543 162.658 77.6543 cv
162.658 77.6543 137.273 84.4326 118.699 102.974 cv
cp
.992157 .737255 .329412 rgb
f
102 129.688 mo
101.581 129.197 100.977 128.902 100.332 128.873 cv
98.251 128.776 93.4106 128.932 89.0557 131.861 cv
82.125 136.52 80.2813 142.641 80.2813 142.641 cv
83.0723 139.689 86.3105 137.494 88.8789 136.801 cv
86.6729 141.599 77.0938 145.811 74.1006 153.5 cv
82.0781 147.24 85.1924 150.588 94.7549 139.2 cv
95.252 140.533 93.6064 144.236 91.4053 146.125 cv
97.606 144.782 102.821 136.797 102.891 131.891 cv
102.902 131.155 102.644 130.44 102.165 129.881 cv
102 129.688 li
cp
.682353 .25098 .254902 rgb
f
139.432 97.5527 mo
141.695 100.195 141.389 104.174 138.746 106.438 cv
136.104 108.703 132.124 108.396 129.859 105.752 cv
127.594 103.109 127.9 99.1309 130.545 96.8672 cv
133.188 94.6016 137.168 94.9092 139.432 97.5527 cv
cp
.172549 .341176 .470588 rgb
f
137.968 98.8047 mo
139.539 100.641 139.326 103.403 137.492 104.976 cv
135.656 106.546 132.893 106.333 131.322 104.5 cv
129.751 102.664 129.964 99.9014 131.798 98.3291 cv
133.632 96.7578 136.395 96.9707 137.968 98.8047 cv
cp
1 1 1 rgb
f
166.896 183.042 mo
166.896 183.245 166.731 183.409 166.529 183.409 cv
156.637 183.409 li
156.435 183.409 156.27 183.245 156.27 183.042 cv
156.27 182.819 li
156.27 182.616 156.435 182.452 156.637 182.452 cv
166.529 182.452 li
166.731 182.452 166.896 182.616 166.896 182.819 cv
166.896 183.042 li
cp
f
166.896 184.958 mo
166.896 185.161 166.731 185.325 166.529 185.325 cv
156.64 185.325 li
156.438 185.325 156.273 185.161 156.273 184.958 cv
156.273 184.733 li
156.273 184.53 156.438 184.366 156.64 184.366 cv
166.529 184.366 li
166.731 184.366 166.896 184.53 166.896 184.733 cv
166.896 184.958 li
cp
f
166.896 186.284 mo
166.896 186.814 166.467 187.242 165.938 187.242 cv
157.227 187.242 li
156.698 187.242 156.269 186.814 156.269 186.284 cv
166.896 186.284 li
cp
f
168.802 177.195 mo
166.71 179.482 166.805 179.915 166.921 181.604 cv
156.244 181.604 li
156.36 179.915 156.455 179.482 154.363 177.195 cv
168.802 177.195 li
cp
.992157 .737255 .329412 rgb
f
171.369 170.59 mo
171.369 175.994 166.987 180.376 161.582 180.376 cv
156.178 180.376 151.796 175.994 151.796 170.59 cv
151.796 165.186 156.178 160.804 161.582 160.804 cv
166.987 160.804 171.369 165.186 171.369 170.59 cv
cp
f
163.256 187.242 mo
163.256 187.771 162.828 188.2 162.298 188.2 cv
160.867 188.2 li
160.337 188.2 159.909 187.771 159.909 187.242 cv
163.256 187.242 li
cp
.172549 .341176 .470588 rgb
f
163.562 181.604 mo
162.951 181.604 li
162.951 173.294 li
162.951 172.702 163.299 172.164 163.84 171.923 cv
165.379 171.232 li
165.699 171.089 165.907 170.769 165.907 170.418 cv
165.907 168.098 li
166.518 168.098 li
166.518 170.418 li
166.518 171.01 166.169 171.548 165.628 171.789 cv
164.09 172.48 li
163.769 172.623 163.562 172.943 163.562 173.294 cv
163.562 181.604 li
cp
.301961 .301961 .301961 rgb
f
160.214 181.604 mo
159.603 181.604 li
159.603 173.294 li
159.603 172.943 159.396 172.623 159.077 172.48 cv
157.536 171.789 li
156.996 171.548 156.647 171.01 156.647 170.418 cv
156.647 168.098 li
157.258 168.098 li
157.258 170.418 li
157.258 170.769 157.466 171.089 157.787 171.232 cv
159.326 171.923 li
159.866 172.164 160.214 172.702 160.214 173.294 cv
160.214 181.604 li
cp
f
157.972 168.347 mo
157.788 168.7 157.607 169.18 157.721 169.381 cv
157.736 169.407 157.779 169.484 157.972 169.484 cv
158.164 169.484 158.21 169.407 158.223 169.381 cv
158.335 169.18 158.157 168.7 157.972 168.347 cv
cp
157.972 169.73 mo
157.694 169.73 157.566 169.605 157.508 169.5 cv
157.259 169.06 157.805 168.138 157.868 168.033 cv
158.077 168.033 li
158.14 168.138 158.684 169.06 158.436 169.5 cv
158.377 169.605 158.249 169.73 157.972 169.73 cv
cp
f
159.415 168.347 mo
159.232 168.7 159.052 169.18 159.165 169.381 cv
159.179 169.407 159.224 169.484 159.415 169.484 cv
159.609 169.484 159.652 169.407 159.666 169.381 cv
159.781 169.18 159.601 168.7 159.415 168.347 cv
cp
159.415 169.73 mo
159.138 169.73 159.01 169.605 158.952 169.5 cv
158.704 169.06 159.248 168.138 159.312 168.033 cv
159.521 168.033 li
159.582 168.138 160.128 169.06 159.88 169.5 cv
159.822 169.605 159.694 169.73 159.415 169.73 cv
cp
f
160.861 168.347 mo
160.676 168.7 160.496 169.18 160.61 169.381 cv
160.624 169.407 160.667 169.484 160.861 169.484 cv
161.052 169.484 161.097 169.407 161.112 169.381 cv
161.224 169.18 161.045 168.7 160.861 168.347 cv
cp
160.861 169.73 mo
160.582 169.73 160.455 169.605 160.396 169.5 cv
160.148 169.06 160.694 168.138 160.756 168.033 cv
160.965 168.033 li
161.028 168.138 161.573 169.06 161.325 169.5 cv
161.266 169.605 161.138 169.73 160.861 169.73 cv
cp
f
162.304 168.347 mo
162.12 168.7 161.941 169.18 162.053 169.381 cv
162.068 169.407 162.113 169.484 162.304 169.484 cv
162.498 169.484 162.54 169.407 162.555 169.381 cv
162.669 169.18 162.489 168.7 162.304 168.347 cv
cp
162.304 169.73 mo
162.027 169.73 161.899 169.605 161.84 169.5 cv
161.592 169.06 162.137 168.138 162.2 168.033 cv
162.409 168.033 li
162.471 168.138 163.017 169.06 162.769 169.5 cv
162.71 169.605 162.582 169.73 162.304 169.73 cv
cp
f
163.749 168.347 mo
163.564 168.7 163.384 169.18 163.498 169.381 cv
163.513 169.407 163.556 169.484 163.749 169.484 cv
163.941 169.484 163.986 169.407 164 169.381 cv
164.113 169.18 163.933 168.7 163.749 168.347 cv
cp
163.749 169.73 mo
163.471 169.73 163.343 169.605 163.285 169.5 cv
163.037 169.06 163.582 168.138 163.644 168.033 cv
163.853 168.033 li
163.916 168.138 164.461 169.06 164.213 169.5 cv
164.155 169.605 164.027 169.73 163.749 169.73 cv
cp
f
165.193 168.347 mo
165.008 168.7 164.83 169.18 164.942 169.381 cv
164.956 169.407 165.001 169.484 165.193 169.484 cv
165.386 169.484 165.429 169.407 165.444 169.381 cv
165.558 169.18 165.377 168.7 165.193 168.347 cv
cp
165.193 169.73 mo
164.915 169.73 164.788 169.605 164.729 169.5 cv
164.481 169.06 165.025 168.138 165.088 168.033 cv
165.297 168.033 li
165.36 168.138 165.906 169.06 165.657 169.5 cv
165.599 169.605 165.471 169.73 165.193 169.73 cv
cp
f
166.497 168.22 mo
156.669 168.22 li
156.669 167.975 li
166.497 167.975 li
166.497 168.22 li
cp
f
104.799 57.9697 mo
105.321 58.4414 106.009 59.1709 106.667 60.2109 cv
107.301 54.1582 111.104 51.6758 111.28 51.5664 cv
111.812 52.4072 li
111.769 52.4346 107.575 55.1533 107.564 61.917 cv
107.989 62.9072 108.334 64.0781 108.523 65.4375 cv
109.728 63.043 111.304 61.8584 111.702 61.5869 cv
109.956 57.9346 117.994 58.1201 117.994 58.1201 cv
117.994 58.1201 114.927 65.7646 112.233 62.4287 cv
111.622 62.8682 108.084 65.667 108.084 71.8955 cv
107.087 71.8955 li
107.087 70.2422 107.325 68.8242 107.684 67.6006 cv
107.659 62.5186 105.323 59.7705 104.126 58.6934 cv
100.502 61.8799 98.3232 52.6934 98.3232 52.6934 cv
98.3232 52.6934 107.921 53.9033 104.799 57.9697 cv
cp
.329412 .639216 .27451 rgb
f
128.091 43.1982 mo
128.091 49.626 122.882 54.834 116.457 54.834 cv
110.031 54.834 104.821 49.626 104.821 43.1982 cv
104.821 36.7734 110.031 31.5645 116.457 31.5645 cv
122.882 31.5645 128.091 36.7734 128.091 43.1982 cv
cp
.301961 .301961 .301961 rgb
f
127.53 43.1982 mo
127.519 42.9756 li
127.815 42.9541 li
127.754 42.0176 li
127.468 42.0361 li
127.453 41.8857 127.422 41.7393 127.401 41.5918 cv
127.694 41.5303 li
127.517 40.6094 li
127.228 40.665 li
127.194 40.5195 127.155 40.375 127.116 40.2305 cv
127.396 40.1348 li
127.105 39.2441 li
126.824 39.3359 li
126.771 39.1963 126.727 39.0518 126.669 38.9141 cv
126.926 38.7881 li
126.526 37.9404 li
126.263 38.0654 li
126.193 37.9326 126.117 37.8027 126.042 37.6719 cv
126.291 37.5107 li
125.787 36.7197 li
125.541 36.877 li
125.455 36.7539 125.362 36.6357 125.272 36.5156 cv
125.5 36.3232 li
124.901 35.6006 li
124.672 35.793 li
124.573 35.6816 124.474 35.5674 124.369 35.459 cv
124.566 35.2441 li
123.882 34.6016 li
123.682 34.8193 li
123.568 34.7207 123.453 34.624 123.334 34.5303 cv
123.505 34.291 li
122.746 33.7383 li
122.578 33.9736 li
122.453 33.8906 122.321 33.8184 122.193 33.7402 cv
122.334 33.4775 li
121.51 33.0244 li
121.37 33.2861 li
121.236 33.2188 121.102 33.1523 120.965 33.0898 cv
121.069 32.8174 li
120.195 32.4717 li
120.088 32.7461 li
119.946 32.6973 119.808 32.6455 119.663 32.5996 cv
119.731 32.3213 li
118.822 32.0889 li
118.751 32.3672 li
118.606 32.3359 118.456 32.3174 118.309 32.291 cv
118.341 31.9961 li
117.409 31.8779 li
117.374 32.1719 li
117.228 32.1602 117.075 32.1553 116.926 32.1494 cv
116.926 31.8467 li
115.984 31.8467 li
115.984 32.1494 li
115.835 32.1553 115.685 32.1602 115.537 32.1719 cv
115.5 31.8789 li
114.566 31.9961 li
114.603 32.291 li
114.456 32.3174 114.306 32.335 114.161 32.3672 cv
114.089 32.0889 li
113.177 32.3213 li
113.247 32.5996 li
113.104 32.6426 112.965 32.6973 112.824 32.7461 cv
112.716 32.4707 li
111.839 32.8174 li
111.947 33.0898 li
111.81 33.1523 111.678 33.2188 111.543 33.2852 cv
111.402 33.0244 li
110.573 33.4795 li
110.718 33.7412 li
110.591 33.8184 110.459 33.8906 110.334 33.9727 cv
110.165 33.7383 li
109.402 34.293 li
109.576 34.5303 li
109.458 34.624 109.344 34.7207 109.23 34.8174 cv
109.029 34.6006 li
108.343 35.249 li
108.541 35.46 li
108.438 35.5654 108.341 35.6797 108.24 35.791 cv
108.01 35.5986 li
107.409 36.3271 li
107.64 36.5176 li
107.549 36.6357 107.456 36.7529 107.372 36.875 cv
107.124 36.7178 li
106.618 37.5156 li
106.87 37.6729 li
106.793 37.8018 106.719 37.9307 106.648 38.0635 cv
106.384 37.9375 li
105.983 38.793 li
106.242 38.915 li
106.185 39.0518 106.141 39.1953 106.089 39.334 cv
105.806 39.2412 li
105.513 40.1406 li
105.795 40.2314 li
105.756 40.374 105.718 40.5186 105.684 40.6641 cv
105.394 40.6084 li
105.217 41.5371 li
105.511 41.5918 li
105.489 41.7393 105.459 41.8838 105.444 42.0332 cv
105.157 42.0156 li
105.099 42.958 li
105.392 42.9746 li
105.381 43.1982 li
105.392 43.4219 li
105.099 43.4404 li
105.157 44.3818 li
105.444 44.3623 li
105.459 44.5137 105.489 44.6582 105.511 44.8066 cv
105.217 44.8604 li
105.394 45.7891 li
105.684 45.7334 li
105.718 45.8779 105.756 46.0234 105.795 46.166 cv
105.515 46.2578 li
105.806 47.1543 li
106.089 47.0625 li
106.141 47.2021 106.185 47.3467 106.242 47.4834 cv
105.985 47.6045 li
106.384 48.459 li
106.648 48.334 li
106.719 48.4668 106.793 48.5967 106.87 48.7266 cv
106.621 48.8828 li
107.124 49.6797 li
107.37 49.5225 li
107.456 49.6455 107.549 49.7617 107.64 49.8828 cv
107.411 50.0703 li
108.01 50.7979 li
108.239 50.6074 li
108.341 50.7168 108.438 50.832 108.541 50.9385 cv
108.344 51.1484 li
109.029 51.7969 li
109.23 51.5801 li
109.344 51.6777 109.458 51.7744 109.576 51.8672 cv
109.404 52.1045 li
110.165 52.6611 li
110.336 52.4258 li
110.459 52.5068 110.591 52.5811 110.718 52.6582 cv
110.576 52.917 li
111.402 53.375 li
111.543 53.1123 li
111.677 53.1807 111.81 53.2451 111.945 53.3076 cv
111.842 53.5781 li
112.716 53.9268 li
112.824 53.6523 li
112.965 53.7002 113.104 53.7539 113.247 53.7979 cv
113.179 54.0742 li
114.089 54.3105 li
114.161 54.0322 li
114.305 54.0625 114.455 54.0801 114.603 54.1064 cv
114.568 54.4004 li
115.5 54.5215 li
115.537 54.2266 li
115.684 54.2383 115.833 54.2422 115.983 54.248 cv
115.986 54.5479 li
116.928 54.5508 li
116.926 54.248 li
117.075 54.2422 117.225 54.2383 117.373 54.2266 cv
117.411 54.5176 li
118.348 54.4033 li
118.307 54.1064 li
118.454 54.0801 118.604 54.0625 118.748 54.0322 cv
118.823 54.3086 li
119.737 54.0781 li
119.661 53.7979 li
119.806 53.7539 119.944 53.7002 120.085 53.6523 cv
120.196 53.9248 li
121.074 53.5811 li
120.963 53.3076 li
121.1 53.2461 121.234 53.1807 121.367 53.1133 cv
121.512 53.3701 li
122.338 52.9209 li
122.191 52.6582 li
122.32 52.5811 122.45 52.5078 122.575 52.4258 cv
122.747 52.6563 li
123.509 52.1074 li
123.334 51.8682 li
123.451 51.7744 123.565 51.6797 123.68 51.582 cv
123.885 51.7939 li
124.571 51.1533 li
124.368 50.9395 li
124.474 50.832 124.571 50.7168 124.67 50.6074 cv
124.903 50.7949 li
125.502 50.0732 li
125.271 49.8828 li
125.362 49.7637 125.455 49.6455 125.539 49.5225 cv
125.79 49.6777 li
126.292 48.8857 li
126.042 48.7266 li
126.117 48.5967 126.193 48.4678 126.262 48.334 cv
126.527 48.4551 li
126.928 47.6064 li
126.667 47.4863 li
126.726 47.3477 126.771 47.2041 126.823 47.0635 cv
127.107 47.1514 li
127.396 46.2607 li
127.116 46.168 li
127.155 46.0234 127.192 45.8799 127.227 45.7344 cv
127.519 45.7861 li
127.694 44.8652 li
127.401 44.8086 li
127.422 44.6602 127.453 44.5146 127.468 44.3643 cv
127.757 44.3799 li
127.813 43.4434 li
127.519 43.4238 li
127.53 43.1982 li
cp
.992157 .737255 .329412 rgb
f
124.99 43.1982 mo
124.99 47.9131 121.169 51.7334 116.457 51.7334 cv
111.743 51.7334 107.922 47.9131 107.922 43.1982 cv
107.922 38.4863 111.743 34.666 116.457 34.666 cv
121.169 34.666 124.99 38.4863 124.99 43.1982 cv
cp
.301961 .301961 .301961 rgb
f
124.707 43.1982 mo
124.707 47.7559 121.014 51.4492 116.457 51.4492 cv
111.9 51.4492 108.206 47.7559 108.206 43.1982 cv
108.206 38.6426 111.9 34.9492 116.457 34.9492 cv
121.014 34.9492 124.707 38.6426 124.707 43.1982 cv
cp
1 1 1 rgb
f
117.102 48.7734 mo
117.102 51.1396 li
115.918 51.1396 li
115.918 48.8379 li
114.54 48.7568 113.454 48.2539 112.612 47.4424 cv
113.422 46.5684 li
114.152 47.2656 115.043 47.7031 116.227 47.7031 cv
117.556 47.7031 118.626 47.0225 118.626 45.6934 cv
118.626 44.5742 118.091 44.0879 116.227 43.5205 cv
114.103 42.8721 113.049 42.0781 113.049 40.4395 cv
113.049 38.9482 114.217 37.8301 115.918 37.668 cv
115.918 35.3008 li
117.102 35.3008 li
117.102 37.668 li
118.204 37.7969 118.967 38.2031 119.712 38.8838 cv
118.917 39.7432 li
118.172 39.0449 117.394 38.7705 116.47 38.7705 cv
115.319 38.7705 114.459 39.3213 114.459 40.375 cv
114.459 41.332 114.914 41.7861 116.859 42.3691 cv
118.642 42.9199 120.037 43.6182 120.037 45.6436 cv
120.037 47.2813 118.967 48.498 117.102 48.7734 cv
cp
.992157 .737255 .329412 rgb
f
145.962 77.8906 mo
145.328 77.8887 li
145.324 77.6875 li
145.225 77.6836 145.123 77.6797 145.025 77.6719 cv
145 77.8711 li
144.372 77.7891 li
144.396 77.5918 li
144.296 77.5742 144.196 77.5625 144.1 77.5409 cv
144.05 77.7285 li
143.438 77.5702 li
143.483 77.3828 li
143.385 77.3535 143.292 77.3183 143.198 77.2852 cv
143.126 77.4706 li
142.538 77.2363 li
142.606 77.0527 li
142.516 77.0117 142.426 76.9688 142.336 76.9238 cv
142.242 77.0996 li
141.685 76.791 li
141.78 76.6172 li
141.522 76.459 li
141.408 76.6191 li
140.897 76.2441 li
141.011 76.082 li
140.778 75.8906 li
140.644 76.0352 li
140.184 75.5996 li
140.315 75.459 li
140.112 75.2363 li
139.958 75.3652 li
139.555 74.873 li
139.709 74.7479 li
139.526 74.5039 li
139.361 74.6113 li
139.023 74.0742 li
139.19 73.9688 li
139.041 73.7051 li
138.863 73.791 li
138.595 73.2147 li
138.768 73.1328 li
138.729 73.041 138.699 72.9434 138.666 72.8496 cv
138.475 72.9102 li
138.278 72.3066 li
138.468 72.2462 li
138.442 72.1504 138.414 72.0527 138.393 71.9551 cv
138.196 71.9922 li
138.077 71.3691 li
138.275 71.332 li
138.261 71.2324 138.239 71.1348 138.229 71.0332 cv
138.037 71.0449 li
137.998 70.4121 li
138.196 70.4005 li
138.188 70.248 li
138.196 70.0977 li
137.998 70.088 li
138.037 69.4532 li
138.229 69.4628 li
138.239 69.3633 138.261 69.2656 138.275 69.168 cv
138.077 69.1309 li
138.196 68.5039 li
138.393 68.543 li
138.414 68.4434 138.442 68.3477 138.468 68.252 cv
138.277 68.1895 li
138.475 67.584 li
138.666 67.6483 li
138.699 67.5547 138.729 67.4569 138.768 67.3633 cv
138.593 67.2832 li
138.863 66.707 li
139.041 66.793 li
139.19 66.5293 li
139.021 66.4219 li
139.361 65.8867 li
139.529 65.9922 li
139.709 65.75 li
139.553 65.623 li
139.958 65.1328 li
140.112 65.2617 li
140.315 65.0391 li
140.181 64.8965 li
140.644 64.4609 li
140.778 64.6074 li
141.011 64.4141 li
140.897 64.2539 li
141.408 63.8809 li
141.522 64.0371 li
141.78 63.8828 li
141.683 63.707 li
142.242 63.4004 li
142.336 63.5741 li
142.426 63.5313 142.517 63.4863 142.608 63.4453 cv
142.536 63.2616 li
143.126 63.0273 li
143.198 63.2129 li
143.292 63.1797 143.385 63.1426 143.483 63.1152 cv
143.437 62.9277 li
144.05 62.7695 li
144.1 62.957 li
144.196 62.9355 144.297 62.9238 144.396 62.9063 cv
144.37 62.7071 li
145 62.6289 li
145.025 62.8262 li
145.125 62.8184 145.227 62.8145 145.327 62.8105 cv
145.327 62.6074 li
145.959 62.6074 li
145.959 62.8105 li
146.06 62.8145 146.162 62.8184 146.262 62.8262 cv
146.285 62.6289 li
146.911 62.7071 li
146.89 62.9063 li
146.99 62.9238 147.09 62.9355 147.188 62.957 cv
147.236 62.7695 li
147.849 62.9277 li
147.803 63.1152 li
147.9 63.1445 147.992 63.1797 148.089 63.2129 cv
148.16 63.0273 li
148.748 63.2616 li
148.679 63.4453 li
148.772 63.4863 148.861 63.5313 148.949 63.5762 cv
149.045 63.4004 li
149.601 63.7031 li
149.505 63.8828 li
149.765 64.0391 li
149.876 63.8809 li
150.387 64.252 li
150.273 64.4141 li
150.507 64.6074 li
150.643 64.4609 li
151.102 64.8926 li
150.971 65.0391 li
151.173 65.2637 li
151.329 65.1348 li
151.731 65.621 li
151.576 65.75 li
151.758 65.9941 li
151.925 65.8887 li
152.264 66.4199 li
152.097 66.5293 li
152.244 66.793 li
152.422 66.709 li
152.691 67.2793 li
152.518 67.3633 li
152.557 67.4569 152.587 67.5547 152.622 67.6483 cv
152.811 67.5859 li
153.007 68.1855 li
152.819 68.25 li
152.845 68.3477 152.871 68.4434 152.896 68.543 cv
153.089 68.5059 li
153.207 69.125 li
153.01 69.168 li
153.024 69.2656 153.046 69.3652 153.057 69.4648 cv
153.249 69.4532 li
153.29 70.084 li
153.089 70.0977 li
153.097 70.248 li
153.089 70.4005 li
153.288 70.4121 li
153.251 71.0449 li
153.057 71.0352 li
153.046 71.1348 153.024 71.2324 153.01 71.334 cv
153.207 71.3711 li
153.09 71.9902 li
152.894 71.9551 li
152.87 72.0546 152.845 72.1504 152.819 72.248 cv
153.007 72.3105 li
152.814 72.9102 li
152.621 72.8496 li
152.587 72.9453 152.557 73.041 152.517 73.1348 cv
152.691 73.2147 li
152.422 73.7871 li
152.244 73.7051 li
152.197 73.7969 152.146 73.8828 152.097 73.9688 cv
152.266 74.0781 li
151.927 74.6094 li
151.758 74.5039 li
151.576 74.7479 li
151.732 74.877 li
151.329 75.3633 li
151.172 75.2363 li
150.969 75.459 li
151.105 75.6035 li
150.645 76.0352 li
150.506 75.8906 li
150.273 76.084 li
150.391 76.2461 li
149.88 76.6152 li
149.763 76.459 li
149.504 76.6172 li
149.602 76.793 li
149.047 77.0957 li
148.949 76.9238 li
148.859 76.9688 148.77 77.0117 148.676 77.0527 cv
148.752 77.2383 li
148.16 77.4706 li
148.086 77.2852 li
147.991 77.3183 147.898 77.3535 147.802 77.3828 cv
147.852 77.5723 li
147.236 77.7266 li
147.187 77.5409 li
147.089 77.5625 146.988 77.5742 146.888 77.5918 cv
146.917 77.791 li
146.286 77.8691 li
146.26 77.6719 li
146.16 77.6797 146.06 77.6836 145.959 77.6875 cv
145.962 77.8906 li
145.644 64.6953 mo
142.576 64.6953 140.09 67.1816 140.09 70.248 cv
140.09 73.3164 142.576 75.8027 145.644 75.8027 cv
148.711 75.8027 151.198 73.3164 151.198 70.248 cv
151.198 67.1816 148.711 64.6953 145.644 64.6953 cv
.94902 .678431 .556863 rgb
f
146.077 75.5937 mo
145.282 75.5937 li
145.282 74.0449 li
144.353 73.9902 143.621 73.6504 143.056 73.1055 cv
143.602 72.5156 li
144.094 72.9883 144.692 73.2793 145.488 73.2793 cv
146.383 73.2793 147.102 72.8223 147.102 71.9277 cv
147.102 71.1738 146.743 70.8456 145.488 70.4648 cv
144.058 70.0273 143.349 69.4961 143.349 68.3926 cv
143.349 67.3867 144.137 66.6348 145.282 66.5254 cv
145.282 64.9316 li
146.077 64.9316 li
146.077 66.5254 li
146.819 66.6152 147.332 66.8848 147.836 67.3438 cv
147.3 67.9238 li
146.798 67.4531 146.274 67.2676 145.651 67.2676 cv
144.878 67.2676 144.299 67.6387 144.299 68.3477 cv
144.299 68.9922 144.605 69.2969 145.915 69.6914 cv
147.115 70.0625 148.053 70.5293 148.053 71.8944 cv
148.053 72.998 147.332 73.8145 146.077 74.002 cv
146.077 75.5937 li
f
51.5845 99.6406 mo
51.5845 96.5361 li
50.1504 95.0869 li
50.1426 95.0479 li
51.5293 95.4287 li
50.5908 92.4648 li
48.7349 91.6221 li
48.6685 91.5186 li
50.083 91.4492 li
48.2686 88.9248 li
46.3052 88.71 li
46.1885 88.6064 li
46.2158 88.6221 li
47.6001 88.0938 li
45.0928 86.2568 li
43.0439 86.6865 li
42.6313 86.1377 41.9805 85.248 41.6533 84.7031 cv
41.1567 83.875 40.4966 82.3857 40.3301 82.3857 cv
40.1851 82.3857 39.6934 84.1113 40.1689 86.5225 cv
38.4175 86.7822 36.9761 87.6504 36.4395 88.0938 cv
36.0181 88.4424 35.8213 88.8359 35.8213 88.8359 cv
35.8213 88.8359 31.2383 91.8828 31.2383 92.5801 cv
31.2383 93.0938 31.1353 94.0684 31.3501 94.4336 cv
31.5454 94.7646 32.9434 95.6279 33.5898 95.4639 cv
34.4307 95.249 33.9717 94.0518 35.8457 94.0518 cv
36.2456 94.0518 36.7886 94.583 37.8921 94.6816 cv
39.8267 94.8574 41.4214 93.207 41.4214 93.207 cv
42.0352 95.7793 36.6294 99.6104 36.0786 102.88 cv
35.7729 104.692 38.1592 107.464 38.1592 107.464 cv
47.6245 107.464 li
47.6245 107.464 48.9653 105.528 49.7866 102.404 cv
50.7954 103.465 li
51.5225 100.443 li
50.3701 98.7666 li
50.3701 98.7432 li
51.5845 99.6406 li
cp
.992157 .737255 .329412 rgb
f
38.7617 88.3711 mo
38.835 88.6299 38.167 89.1416 37.8325 89.2344 cv
37.4966 89.3301 36.647 89.4609 36.5742 89.2031 cv
36.5005 88.9434 37.2305 88.3877 37.5654 88.2939 cv
37.9009 88.1992 38.688 88.1113 38.7617 88.3711 cv
cp
.301961 .301961 .301961 rgb
f
46.5405 109.466 mo
39.2417 109.466 li
39.2417 107.464 li
46.5405 107.464 li
46.5405 109.466 li
cp
f
48.8882 110.662 mo
36.8955 110.662 li
36.8955 110.258 37.2222 109.466 37.625 109.466 cv
48.1587 109.466 li
48.5601 109.466 48.8882 110.258 48.8882 110.662 cv
cp
f
50.8779 114.942 mo
34.9053 114.942 li
34.9053 111.392 li
34.9053 110.989 35.2319 110.662 35.6353 110.662 cv
50.1479 110.662 li
50.5513 110.662 50.8779 110.989 50.8779 111.392 cv
50.8779 114.942 li
cp
f
156.066 134.559 mo
147.14 134.559 li
146.956 134.559 146.808 134.41 146.808 134.227 cv
146.808 134.027 li
146.808 133.845 146.956 133.696 147.14 133.696 cv
156.066 133.696 li
156.25 133.696 156.398 133.845 156.398 134.027 cv
156.398 134.227 li
156.398 134.41 156.25 134.559 156.066 134.559 cv
.972549 .701961 .580392 rgb
f
156.066 136.289 mo
147.135 136.289 li
146.952 136.289 146.803 136.141 146.803 135.957 cv
146.803 135.755 li
146.803 135.571 146.952 135.423 147.135 135.423 cv
156.066 135.423 li
156.25 135.423 156.398 135.571 156.398 135.755 cv
156.398 135.957 li
156.398 136.141 156.25 136.289 156.066 136.289 cv
f
155.533 138.021 mo
147.668 138.021 li
147.189 138.021 146.802 137.633 146.802 137.155 cv
156.398 137.155 li
156.398 137.633 156.011 138.021 155.533 138.021 cv
f
152.248 138.884 mo
150.956 138.884 li
150.478 138.884 150.09 138.497 150.09 138.021 cv
153.113 138.021 li
153.113 138.497 152.725 138.884 152.248 138.884 cv
f
149.25 128.002 mo
148.531 128.002 147.89 127.496 147.749 126.765 cv
147.585 125.933 148.126 125.13 148.958 124.968 cv
149.058 124.948 149.158 124.938 149.256 124.938 cv
149.973 124.938 150.613 125.445 150.755 126.175 cv
150.918 127.009 150.375 127.811 149.545 127.974 cv
149.446 127.993 149.347 128.002 149.25 128.002 cv
f
156.42 132.931 mo
146.783 132.931 li
146.887 131.405 146.973 131.015 145.085 128.95 cv
145.098 128.95 li
143.656 127.38 142.768 125.29 142.768 122.987 cv
142.768 118.11 146.723 114.155 151.601 114.155 cv
156.48 114.155 160.435 118.11 160.435 122.987 cv
160.435 125.29 159.547 127.38 158.105 128.95 cv
158.119 128.95 li
156.23 131.015 156.316 131.405 156.42 132.931 cv
147.336 123.495 mo
146.952 123.829 li
146.569 124.165 li
147.003 124.981 li
146.752 125.356 146.599 125.798 146.564 126.265 cv
145.718 126.642 li
145.816 127.142 li
145.912 127.64 li
146.837 127.673 li
147.046 128.091 147.354 128.438 147.728 128.696 cv
147.634 129.616 li
148.115 129.782 li
148.595 129.946 li
149.085 129.159 li
149.147 129.163 149.208 129.165 149.27 129.165 cv
149.434 129.165 149.601 129.151 149.768 129.118 cv
149.998 129.073 150.213 128.997 150.416 128.901 cv
151.169 129.444 li
151.551 129.11 li
151.935 128.776 li
151.5 127.96 li
151.751 127.581 151.904 127.142 151.939 126.677 cv
152.784 126.298 li
152.687 125.8 li
152.589 125.302 li
151.664 125.269 li
151.458 124.851 151.148 124.499 150.774 124.245 cv
150.869 123.325 li
150.388 123.159 li
149.909 122.995 li
149.415 123.78 li
149.355 123.777 149.294 123.775 149.233 123.775 cv
149.069 123.775 148.902 123.789 148.734 123.823 cv
148.504 123.866 148.288 123.942 148.087 124.04 cv
147.336 123.495 li
154.291 121.87 mo
153.969 122.171 li
153.651 122.472 li
154.051 123.161 li
153.847 123.493 153.729 123.88 153.714 124.282 cv
152.997 124.636 li
153.097 125.062 li
153.196 125.487 li
153.996 125.487 li
154.189 125.841 154.466 126.134 154.797 126.343 cv
154.746 127.14 li
155.165 127.265 li
155.585 127.392 li
155.983 126.698 li
156 126.699 156.017 126.699 156.035 126.699 cv
156.212 126.699 156.391 126.681 156.57 126.64 cv
156.767 126.593 156.951 126.52 157.122 126.431 cv
157.787 126.876 li
158.107 126.573 li
158.427 126.274 li
158.026 125.585 li
158.229 125.251 158.347 124.866 158.362 124.464 cv
159.079 124.11 li
158.978 123.685 li
158.879 123.257 li
158.079 123.259 li
157.887 122.905 157.61 122.612 157.279 122.403 cv
157.331 121.606 li
156.911 121.479 li
156.492 121.355 li
156.092 122.048 li
156.073 122.048 156.054 122.047 156.035 122.047 cv
155.861 122.047 155.684 122.064 155.506 122.106 cv
155.309 122.151 155.124 122.224 154.956 122.315 cv
154.291 121.87 li
149.835 122.45 mo
150.303 122.716 150.823 122.855 151.347 122.858 cv
151.851 123.802 li
152.417 123.649 li
152.984 123.497 li
152.948 122.427 li
153.168 122.296 153.381 122.138 153.573 121.946 cv
153.764 121.757 153.922 121.544 154.055 121.321 cv
155.124 121.356 li
155.275 120.79 li
155.426 120.224 li
154.484 119.722 li
154.481 119.198 154.344 118.677 154.077 118.208 cv
154.643 117.302 li
154.228 116.886 li
153.814 116.472 li
152.906 117.036 li
152.436 116.77 151.917 116.634 151.393 116.632 cv
150.891 115.688 li
150.325 115.839 li
149.759 115.991 li
149.794 117.06 li
149.572 117.192 149.359 117.351 149.168 117.542 cv
148.977 117.733 148.818 117.944 148.688 118.167 cv
147.618 118.132 li
147.466 118.696 li
147.314 119.265 li
148.257 119.767 li
148.26 120.29 148.396 120.811 148.664 121.28 cv
148.098 122.186 li
148.513 122.601 li
148.927 123.017 li
149.835 122.45 li
f
151.371 121.514 mo
150.918 121.514 150.465 121.341 150.119 120.995 cv
149.427 120.304 149.428 119.185 150.119 118.493 cv
150.465 118.147 150.918 117.975 151.371 117.975 cv
151.824 117.975 152.276 118.147 152.622 118.493 cv
153.313 119.185 153.313 120.304 152.622 120.995 cv
152.276 121.341 151.824 121.514 151.371 121.514 cv
f
156.038 125.694 mo
155.437 125.694 154.892 125.284 154.751 124.675 cv
154.584 123.964 155.025 123.255 155.736 123.085 cv
155.838 123.061 155.94 123.049 156.04 123.049 cv
156.64 123.049 157.183 123.461 157.325 124.069 cv
157.492 124.78 157.05 125.493 156.341 125.659 cv
156.24 125.683 156.138 125.694 156.038 125.694 cv
f
130.407 155.587 mo
111.59 155.587 li
111.59 153.584 115.166 151.929 119.794 151.681 cv
119.938 152.475 120.423 153.06 120.998 153.06 cv
121.575 153.06 122.059 152.475 122.204 151.681 cv
126.83 151.929 130.407 153.584 130.407 155.587 cv
.960784 .584314 .415686 rgb
f
120.999 187.677 mo
117.807 187.677 114.616 187.383 114.616 186.794 cv
114.616 185.759 116.823 184.895 119.749 184.702 cv
119.749 176.523 li
117.177 175.804 114.932 172.907 113.453 168.735 cv
111.648 168.554 109.55 168.087 107.754 167.013 cv
102.564 163.909 104.005 156.925 104.005 156.925 cv
110.477 156.925 li
110.477 156.925 109.664 159.751 110.915 161.003 cv
111.207 161.294 111.534 161.505 111.864 161.665 cv
111.686 160.146 111.59 158.56 111.59 156.925 cv
130.407 156.925 li
130.407 158.56 130.311 160.146 130.132 161.665 cv
130.463 161.505 130.79 161.294 131.081 161.003 cv
132.333 159.751 131.52 156.925 131.52 156.925 cv
137.992 156.925 li
137.992 156.925 139.432 163.909 134.244 167.013 cv
132.447 168.087 130.349 168.554 128.544 168.735 cv
127.064 172.907 124.821 175.804 122.248 176.521 cv
122.248 184.702 li
125.175 184.895 127.382 185.759 127.382 186.794 cv
127.382 187.383 124.191 187.677 120.999 187.677 cv
133.156 158.319 mo
133.23 159.493 133.073 160.981 132.067 161.989 cv
131.404 162.653 130.625 163.03 129.914 163.241 cv
129.685 164.667 129.382 166.02 129.015 167.278 cv
130.518 167.073 132.137 166.648 133.527 165.815 cv
136.708 163.913 136.893 160.187 136.763 158.319 cv
133.156 158.319 li
105.235 158.319 mo
105.105 160.187 105.289 163.913 108.47 165.815 cv
109.861 166.648 111.478 167.073 112.983 167.278 cv
112.615 166.02 112.312 164.667 112.083 163.241 cv
111.373 163.03 110.594 162.653 109.93 161.989 cv
108.924 160.981 108.767 159.493 108.84 158.319 cv
105.235 158.319 li
f
120.998 153.06 mo
120.423 153.06 119.938 152.475 119.794 151.681 cv
119.765 151.524 119.749 151.358 119.749 151.186 cv
119.749 150.149 120.308 149.311 120.998 149.311 cv
121.689 149.311 122.248 150.149 122.248 151.186 cv
122.248 151.358 122.233 151.524 122.204 151.681 cv
122.059 152.475 121.575 153.06 120.998 153.06 cv
f
61.9316 183.98 mo
56.083 183.98 51.3257 179.224 51.3257 173.375 cv
51.3257 169.969 52.9814 166.748 55.7554 164.758 cv
56.0093 164.576 56.3081 164.48 56.6206 164.48 cv
56.8535 164.48 57.0869 164.536 57.2939 164.644 cv
57.79 164.898 58.0986 165.401 58.0986 165.959 cv
58.0986 166.115 58.0181 166.253 57.8906 166.327 cv
55.3667 167.776 53.7998 170.477 53.7998 173.375 cv
53.7998 177.858 57.4478 181.507 61.9316 181.507 cv
66.4155 181.507 70.0635 177.858 70.0635 173.375 cv
70.0635 170.477 68.4966 167.776 65.9736 166.327 cv
65.8452 166.253 65.7646 166.114 65.7646 165.968 cv
65.7646 165.402 66.0732 164.899 66.5703 164.644 cv
66.7783 164.537 67.0112 164.48 67.2451 164.48 cv
67.5566 164.48 67.8545 164.577 68.1074 164.758 cv
70.8818 166.748 72.5376 169.969 72.5376 173.375 cv
72.5376 179.224 67.7803 183.98 61.9316 183.98 cv
cp
1 1 1 rgb
f
62.9326 167.665 mo
62.9326 168.123 62.5615 168.494 62.1035 168.494 cv
61.7588 168.494 li
61.3013 168.494 60.9302 168.123 60.9302 167.665 cv
60.9302 162.679 li
60.9302 162.221 61.3013 161.85 61.7588 161.85 cv
62.1035 161.85 li
62.5615 161.85 62.9326 162.221 62.9326 162.679 cv
62.9326 167.665 li
cp
f
173.911 138.053 mo
169.555 138.053 166.013 134.51 166.013 130.154 cv
166.013 127.619 167.246 125.222 169.312 123.738 cv
169.5 123.603 169.724 123.53 169.956 123.53 cv
170.129 123.53 170.303 123.572 170.457 123.653 cv
170.827 123.842 171.056 124.219 171.056 124.633 cv
171.056 124.749 170.997 124.852 170.901 124.904 cv
169.022 125.985 167.855 127.996 167.855 130.154 cv
167.855 133.494 170.572 136.211 173.911 136.211 cv
177.249 136.211 179.965 133.494 179.965 130.154 cv
179.965 127.996 178.799 125.985 176.921 124.904 cv
176.824 124.852 176.765 124.749 176.765 124.639 cv
176.765 124.219 176.995 123.842 177.365 123.653 cv
177.519 123.572 177.692 123.53 177.867 123.53 cv
178.1 123.53 178.322 123.603 178.509 123.738 cv
180.575 125.222 181.808 127.619 181.808 130.154 cv
181.808 134.51 178.266 138.053 173.911 138.053 cv
.921569 .654902 .533333 rgb
f
174.038 126.519 mo
173.782 126.519 li
173.441 126.519 173.165 126.242 173.165 125.902 cv
173.167 122.19 li
173.167 121.849 173.443 121.572 173.784 121.572 cv
174.04 121.572 li
174.204 121.572 174.361 121.638 174.477 121.753 cv
174.592 121.869 174.657 122.025 174.657 122.19 cv
174.656 125.902 li
174.656 126.066 174.591 126.224 174.475 126.339 cv
174.359 126.455 174.202 126.519 174.038 126.519 cv
f
49.7246 142.309 mo
48.9072 140.98 48.4033 139.443 48.3115 137.791 cv
57.4053 137.791 li
57.4053 141.053 li
54.8125 141.106 52.2266 141.522 49.7246 142.309 cv
.960784 .584314 .415686 rgb
f
57.4053 136.713 mo
48.3115 136.713 li
48.4033 135.06 48.9072 133.521 49.7246 132.195 cv
52.2266 132.981 54.8125 133.398 57.4053 133.451 cv
57.4053 136.713 li
f
57.4053 132.371 mo
55.0303 132.322 52.665 131.961 50.3662 131.271 cv
52.0322 129.166 54.5527 127.777 57.4053 127.617 cv
57.4053 132.371 li
f
66.1631 142.309 mo
63.6621 141.522 61.0762 141.106 58.4863 141.053 cv
58.4863 137.791 li
67.5801 137.791 li
67.4893 139.443 66.9844 140.98 66.1631 142.309 cv
f
67.5801 136.713 mo
58.4863 136.713 li
58.4863 133.451 li
61.0762 133.398 63.6621 132.981 66.1631 132.195 cv
66.9844 133.521 67.4893 135.06 67.5801 136.713 cv
f
58.4863 132.371 mo
58.4863 127.617 li
61.3358 127.777 63.8574 129.166 65.5215 131.271 cv
63.2266 131.961 60.8594 132.322 58.4863 132.371 cv
f
57.4053 146.887 mo
54.5527 146.727 52.0322 145.338 50.3662 143.234 cv
52.665 142.543 55.0303 142.182 57.4053 142.133 cv
57.4053 146.887 li
f
58.4863 146.887 mo
58.4863 142.133 li
60.8594 142.182 63.2266 142.543 65.5215 143.234 cv
63.8574 145.338 61.3358 146.727 58.4863 146.887 cv
f
99.8237 96.7725 mo
69.932 96.7725 li
69.932 73.1435 li
99.8237 73.1435 li
99.8237 96.7725 li
83.6646 81.0127 mo
86.4116 81.0127 88.6382 83.2393 88.6382 85.9854 cv
88.6382 86.4561 88.5688 86.9092 88.4468 87.3408 cv
92.3052 88.4346 li
90.9312 89.6475 li
96.6997 96.1749 li
98.5591 96.1749 li
98.5591 77.6299 li
71.1665 77.6299 li
71.1665 96.1749 li
88.6372 96.1749 li
86.4028 93.6475 li
85.0288 94.8623 li
84.4194 90.8955 li
84.1724 90.9346 83.9214 90.96 83.6646 90.96 cv
80.9175 90.96 78.6909 88.7333 78.6909 85.9854 cv
78.6909 83.2393 80.9175 81.0127 83.6646 81.0127 cv
83.6646 83.0986 mo
82.0698 83.0986 80.7778 84.3916 80.7778 85.9854 cv
80.7778 87.5811 82.0698 88.874 83.6646 88.874 cv
83.8149 88.874 83.9575 88.8525 84.1021 88.8291 cv
83.6646 85.9854 li
86.4302 86.7686 li
86.5024 86.5186 86.5513 86.2607 86.5513 85.9854 cv
86.5513 84.3916 85.2592 83.0986 83.6646 83.0986 cv
80.1421 74.1787 mo
79.4213 74.1787 78.8403 74.7627 78.8403 75.4833 cv
78.8403 76.2021 79.4213 76.7861 80.1421 76.7861 cv
80.8599 76.7861 81.4458 76.2021 81.4458 75.4833 cv
81.4458 74.7627 80.8599 74.1787 80.1421 74.1787 cv
76.4907 74.1787 mo
75.771 74.1787 75.189 74.7627 75.189 75.4833 cv
75.189 76.2021 75.771 76.7861 76.4907 76.7861 cv
77.2114 76.7861 77.7944 76.2021 77.7944 75.4833 cv
77.7944 74.7627 77.2114 74.1787 76.4907 74.1787 cv
72.8394 74.1787 mo
72.1205 74.1787 71.5366 74.7627 71.5366 75.4833 cv
71.5366 76.2021 72.1205 76.7861 72.8394 76.7861 cv
73.5591 76.7861 74.1431 76.2021 74.1431 75.4833 cv
74.1431 74.7627 73.5591 74.1787 72.8394 74.1787 cv
.972549 .701961 .580392 rgb
f
225.001 225 mo
450 225 li
450 450 li
225.001 450 li
225.001 225 li
.988235 .717647 .180392 rgb
f
391.567 434.412 mo
386.636 434.412 382.638 430.414 382.638 425.482 cv
382.638 420.553 386.636 416.553 391.567 416.553 cv
396.499 416.553 400.497 420.553 400.497 425.482 cv
400.497 430.414 396.499 434.412 391.567 434.412 cv
.792157 .658823 .392157 rgb
f
250.991 424.375 mo
246.06 424.375 242.061 420.377 242.061 415.445 cv
242.061 410.514 246.06 406.516 250.991 406.516 cv
255.923 406.516 259.921 410.514 259.921 415.445 cv
259.921 420.377 255.923 424.375 250.991 424.375 cv
.996078 .858823 .592157 rgb
f
406.759 284.582 mo
401.827 284.582 397.829 280.584 397.829 275.652 cv
397.829 270.721 401.827 266.723 406.759 266.723 cv
411.69 266.723 415.688 270.721 415.688 275.652 cv
415.688 280.584 411.69 284.582 406.759 284.582 cv
cp
.239216 .678431 .87451 rgb
f
298.188 264.334 mo
291.624 264.334 286.304 259.014 286.304 252.449 cv
286.304 245.887 291.624 240.565 298.188 240.565 cv
304.753 240.565 310.073 245.887 310.073 252.449 cv
310.073 259.014 304.753 264.334 298.188 264.334 cv
.996078 .858823 .592157 rgb
f
420.761 396.818 mo
414.198 396.818 408.876 391.498 408.876 384.934 cv
408.876 378.369 414.198 373.049 420.761 373.049 cv
427.325 373.049 432.647 378.369 432.647 384.934 cv
432.647 391.498 427.325 396.818 420.761 396.818 cv
f
427.907 258.539 mo
425.13 258.539 422.878 256.287 422.878 253.51 cv
422.878 250.73 425.13 248.479 427.907 248.479 cv
430.686 248.479 432.938 250.73 432.938 253.51 cv
432.938 256.287 430.686 258.539 427.907 258.539 cv
cp
.945098 .647059 .360784 rgb
f
286.304 434.436 mo
283.524 434.436 281.272 432.184 281.272 429.404 cv
281.272 426.627 283.524 424.375 286.304 424.375 cv
289.081 424.375 291.333 426.627 291.333 429.404 cv
291.333 432.184 289.081 434.436 286.304 434.436 cv
cp
.172549 .341176 .470588 rgb
f
424.354 431.525 mo
422.686 431.525 421.333 430.174 421.333 428.504 cv
421.333 426.836 422.686 425.482 424.354 425.482 cv
426.024 425.482 427.376 426.836 427.376 428.504 cv
427.376 430.174 426.024 431.525 424.354 431.525 cv
cp
.945098 .647059 .360784 rgb
f
376.44 251.5 mo
374.77 251.5 373.419 250.148 373.419 248.479 cv
373.419 246.811 374.77 245.457 376.44 245.457 cv
378.108 245.457 379.462 246.811 379.462 248.479 cv
379.462 250.148 378.108 251.5 376.44 251.5 cv
cp
.92549 .533333 .505882 rgb
f
247.97 360.855 mo
246.3 360.855 244.948 359.502 244.948 357.834 cv
244.948 356.164 246.3 354.813 247.97 354.813 cv
249.64 354.813 250.991 356.164 250.991 357.834 cv
250.991 359.502 249.64 360.855 247.97 360.855 cv
cp
.945098 .647059 .360784 rgb
f
247.97 298.141 mo
245.192 298.141 242.94 295.889 242.94 293.111 cv
242.94 290.334 245.192 288.082 247.97 288.082 cv
250.747 288.082 252.999 290.334 252.999 293.111 cv
252.999 295.889 250.747 298.141 247.97 298.141 cv
.996078 .858823 .592157 rgb
f
341.166 420.706 mo
299.471 420.706 265.67 386.905 265.67 345.208 cv
265.67 303.513 299.471 269.712 341.166 269.712 cv
357.519 269.712 372.658 274.911 385.02 283.747 cv
384.911 283.777 384.8 283.813 384.688 283.855 cv
384.376 283.97 384.058 284.132 383.739 284.336 cv
371.683 275.888 357.005 270.933 341.166 270.933 cv
300.144 270.933 266.889 304.186 266.889 345.208 cv
266.889 386.231 300.144 419.485 341.166 419.485 cv
382.187 419.485 415.443 386.231 415.443 345.208 cv
415.443 321.953 404.756 301.194 388.025 287.575 cv
388.176 287.204 388.276 286.839 388.313 286.484 cv
388.321 286.406 388.326 286.328 388.328 286.252 cv
405.603 300.087 416.664 321.355 416.664 345.208 cv
416.664 386.905 382.861 420.706 341.166 420.706 cv
387.295 286.989 mo
386.389 286.27 385.47 285.575 384.53 284.898 cv
384.687 284.815 384.843 284.745 384.998 284.687 cv
385.299 284.576 385.579 284.52 385.837 284.52 cv
385.932 284.52 386.023 284.527 386.112 284.542 cv
386.497 284.828 386.879 285.117 387.259 285.41 cv
387.411 285.701 387.466 286.026 387.429 286.394 cv
387.409 286.585 387.363 286.784 387.295 286.989 cv
f
288.189 325.755 mo
288.189 336.261 279.674 344.776 269.168 344.776 cv
258.662 344.776 250.146 336.261 250.146 325.755 cv
250.146 315.249 258.662 306.733 269.168 306.733 cv
279.674 306.733 288.189 315.249 288.189 325.755 cv
cp
.945098 .403922 .160784 rgb
f
311.48 399.817 mo
311.48 412.288 301.371 422.396 288.9 422.396 cv
276.434 422.396 266.324 412.288 266.324 399.817 cv
266.324 387.349 276.434 377.241 288.9 377.241 cv
301.371 377.241 311.48 387.349 311.48 399.817 cv
cp
f
434.373 325.755 mo
434.373 337.728 424.67 347.433 412.697 347.433 cv
400.727 347.433 391.021 337.728 391.021 325.755 cv
391.021 313.784 400.727 304.079 412.697 304.079 cv
424.67 304.079 434.373 313.784 434.373 325.755 cv
cp
f
363.781 275.528 mo
363.781 288.078 353.61 298.249 341.06 298.249 cv
328.513 298.249 318.342 288.078 318.342 275.528 cv
318.342 262.98 328.513 252.81 341.06 252.81 cv
353.61 252.81 363.781 262.98 363.781 275.528 cv
cp
f
406.266 401.589 mo
406.266 411.37 398.336 419.3 388.553 419.3 cv
378.771 419.3 370.84 411.37 370.84 401.589 cv
370.84 391.806 378.771 383.876 388.553 383.876 cv
398.336 383.876 406.266 391.806 406.266 401.589 cv
cp
f
353.506 365.01 mo
353.399 365.284 353.406 365.59 353.525 365.859 cv
353.644 366.129 353.865 366.34 354.14 366.446 cv
383.318 377.767 li
383.891 377.988 384.533 377.705 384.755 377.133 cv
396.076 347.955 li
396.183 347.681 396.176 347.375 396.057 347.105 cv
395.938 346.836 395.717 346.625 395.442 346.519 cv
366.264 335.197 li
365.691 334.976 365.049 335.259 364.827 335.831 cv
353.506 365.01 li
cp
.776471 .129412 .152941 rgb
f
364.828 335.825 mo
359.166 350.42 li
353.504 365.014 li
319.156 360.877 li
327.917 338.297 li
336.679 315.713 li
364.828 335.825 li
cp
.239216 .678431 .87451 rgb
f
316.723 355.359 mo
315.87 357.555 316.96 360.025 319.155 360.878 cv
336.678 315.718 li
335.623 315.309 334.449 315.335 333.414 315.791 cv
332.379 316.247 331.567 317.096 331.158 318.15 cv
316.723 355.359 li
cp
.776471 .129412 .152941 rgb
f
396.539 374.983 mo
396.147 375.993 395.012 376.494 394.002 376.103 cv
386.31 373.118 li
394.515 351.973 li
402.206 354.957 li
403.216 355.349 403.717 356.484 403.325 357.494 cv
396.539 374.983 li
cp
.239216 .678431 .87451 rgb
f
361.173 369.173 mo
377.236 375.405 li
361.438 399.476 li
360.93 400.248 359.951 400.561 359.089 400.228 cv
346.763 395.444 li
346.211 395.23 345.785 394.778 345.605 394.215 cv
345.425 393.65 345.509 393.036 345.833 392.541 cv
361.173 369.173 li
cp
f
391.57 363.805 mo
398.23 366.39 li
398.778 364.975 li
392.119 362.392 li
391.57 363.805 li
cp
.301961 .301961 .301961 rgb
f
392.543 361.298 mo
399.203 363.882 li
399.751 362.469 li
393.091 359.886 li
392.543 361.298 li
cp
f
393.515 358.793 mo
400.175 361.377 li
400.723 359.963 li
394.063 357.38 li
393.515 358.793 li
cp
f
394.487 356.285 mo
401.147 358.869 li
401.696 357.456 li
395.036 354.872 li
394.487 356.285 li
cp
f
252.276 241.918 mo
252.276 238.754 li
258.263 237.021 li
258.263 241.918 li
258.263 246.813 li
252.276 245.08 li
252.276 241.918 li
cp
251.183 245.08 mo
251.183 245.205 251.083 245.305 250.96 245.305 cv
244.634 245.305 li
244.511 245.305 244.409 245.205 244.409 245.08 cv
244.409 238.756 li
244.409 238.633 244.511 238.531 244.634 238.531 cv
250.96 238.531 li
251.083 238.531 251.183 238.633 251.183 238.756 cv
251.183 245.08 li
cp
250.536 251.4 mo
250.46 251.492 250.347 251.547 250.226 251.547 cv
247.556 251.547 li
247.368 251.547 247.208 251.416 247.167 251.234 cv
246.097 246.123 li
249.579 246.123 li
250.614 251.068 li
250.64 251.186 250.612 251.307 250.536 251.4 cv
cp
243.362 244.209 mo
242.501 244.209 li
242.284 244.209 242.104 244.031 242.104 243.814 cv
242.104 240.021 li
242.104 239.803 242.284 239.625 242.501 239.625 cv
243.362 239.625 li
243.362 244.209 li
cp
254.311 256.826 mo
254.311 255.359 255.14 253.336 256.997 251.881 cv
259.837 249.662 261.81 246.336 261.81 242.457 cv
261.81 236.018 256.589 230.797 250.149 230.797 cv
243.708 230.797 238.485 236.018 238.485 242.457 cv
238.485 246.336 240.46 249.662 243.298 251.881 cv
245.157 253.336 245.983 255.359 245.983 256.826 cv
238.173 258.691 232.86 262.397 233.261 263.154 cv
235.919 268.207 244.288 270.373 250.149 270.373 cv
256.009 270.373 264.374 268.207 267.034 263.154 cv
267.435 262.397 262.122 258.691 254.311 256.826 cv
cp
.945098 .403922 .160784 rgb
f
308.111 353.747 mo
308.027 350.23 li
305.084 348.306 li
308.403 347.138 li
309.328 343.744 li
311.463 346.54 li
314.977 346.367 li
312.976 349.264 li
314.225 352.553 li
310.854 351.545 li
308.111 353.747 li
.968627 .835294 .564706 rgb
f
289.724 334.585 mo
295.292 334.129 li
298.07 329.282 li
300.227 334.434 li
305.694 335.578 li
301.461 339.222 li
302.064 344.778 li
297.289 341.876 li
292.192 344.165 li
293.475 338.727 li
289.724 334.585 li
cp
.172549 .341176 .470588 rgb
f
281.398 356.164 mo
286.399 352.723 li
286.4 346.647 li
291.222 350.34 li
296.996 348.463 li
294.973 354.19 li
298.545 359.103 li
292.473 358.949 li
288.904 363.862 li
287.175 358.041 li
281.398 356.164 li
cp
.776471 .129412 .152941 rgb
f
414.593 315.629 mo
408.689 315.629 403.903 319.696 403.903 324.714 cv
403.903 326.669 404.638 328.475 405.873 329.958 cv
405.568 330.76 405.056 331.832 404.247 332.826 cv
402.546 334.919 400.638 335.205 400.638 335.638 cv
400.638 336.07 403.383 336.001 406.262 334.854 cv
407.863 334.216 408.983 333.444 409.73 332.798 cv
411.19 333.435 412.84 333.799 414.593 333.799 cv
420.496 333.799 425.281 329.731 425.281 324.714 cv
425.281 319.696 420.496 315.629 414.593 315.629 cv
cp
.239216 .678431 .87451 rgb
f
410.148 325.756 mo
410.148 326.473 409.568 327.054 408.851 327.054 cv
408.135 327.054 407.554 326.473 407.554 325.756 cv
407.554 325.039 408.135 324.459 408.851 324.459 cv
409.568 324.459 410.148 325.039 410.148 325.756 cv
cp
1 1 1 rgb
f
416.104 325.756 mo
416.104 326.473 415.522 327.054 414.806 327.054 cv
414.089 327.054 413.508 326.473 413.508 325.756 cv
413.508 325.039 414.089 324.459 414.806 324.459 cv
415.522 324.459 416.104 325.039 416.104 325.756 cv
cp
f
422.06 325.756 mo
422.06 326.473 421.477 327.054 420.762 327.054 cv
420.044 327.054 419.463 326.473 419.463 325.756 cv
419.463 325.039 420.044 324.459 420.762 324.459 cv
421.477 324.459 422.06 325.039 422.06 325.756 cv
cp
f
303.949 290.459 mo
313.756 290.459 321.704 297.215 321.704 305.547 cv
321.704 308.794 320.486 311.794 318.433 314.256 cv
318.939 315.587 319.789 317.369 321.133 319.021 cv
323.958 322.495 327.129 322.971 327.129 323.689 cv
327.129 324.409 322.566 324.293 317.787 322.388 cv
315.127 321.328 313.266 320.046 312.025 318.973 cv
309.602 320.029 306.863 320.637 303.949 320.637 cv
294.146 320.637 286.197 313.882 286.197 305.547 cv
286.197 297.215 294.146 290.459 303.949 290.459 cv
cp
f
300.084 399.818 mo
300.084 405.988 295.076 411 288.904 411 cv
282.732 411 277.725 405.988 277.725 399.818 cv
277.725 393.647 282.732 388.639 288.904 388.639 cv
295.076 388.639 300.084 393.647 300.084 399.818 cv
cp
.101961 .101961 .101961 rgb
f
302.332 395.453 mo
301.535 392.998 298.904 391.66 296.449 392.459 cv
293.996 393.254 292.656 395.887 293.451 398.342 cv
294.254 400.791 296.887 402.137 299.338 401.336 cv
301.787 400.539 303.129 397.908 302.332 395.453 cv
cp
297.205 411.24 mo
299.295 409.725 299.754 406.807 298.234 404.721 cv
296.723 402.633 293.803 402.172 291.717 403.686 cv
289.635 405.207 289.166 408.127 290.684 410.211 cv
292.201 412.293 295.117 412.76 297.205 411.24 cv
cp
280.607 411.242 mo
282.693 412.762 285.609 412.299 287.125 410.209 cv
288.643 408.123 288.18 405.207 286.096 403.688 cv
284.004 402.178 281.084 402.635 279.57 404.723 cv
278.059 406.811 278.518 409.725 280.607 411.242 cv
cp
275.477 395.455 mo
274.676 397.91 276.018 400.541 278.475 401.336 cv
280.926 402.137 283.557 400.795 284.355 398.342 cv
285.146 395.889 283.809 393.254 281.357 392.457 cv
278.904 391.664 276.271 393.002 275.477 395.455 cv
cp
288.902 385.697 mo
286.322 385.697 284.234 387.787 284.236 390.367 cv
284.234 392.945 286.322 395.035 288.902 395.035 cv
291.48 395.033 293.574 392.943 293.572 390.365 cv
293.57 387.787 291.482 385.697 288.902 385.697 cv
cp
288.904 396.918 mo
287.303 396.918 286.004 398.217 286.004 399.818 cv
286.004 401.42 287.303 402.719 288.904 402.719 cv
290.506 402.719 291.805 401.42 291.805 399.818 cv
291.805 398.217 290.506 396.918 288.904 396.918 cv
cp
304.693 399.818 mo
304.693 408.539 297.625 415.607 288.904 415.607 cv
280.184 415.607 273.113 408.539 273.113 399.818 cv
273.113 391.098 280.184 384.029 288.904 384.029 cv
297.625 384.029 304.693 391.098 304.693 399.818 cv
cp
1 1 1 rgb
f
398.085 393.268 mo
396.094 390.599 390.121 391.08 390.115 391.08 cv
390.113 391.08 li
390.113 404.472 li
389.031 403.566 387.486 402.995 385.763 402.995 cv
382.494 402.995 379.846 405.04 379.846 407.561 cv
379.846 410.084 382.494 412.129 385.763 412.129 cv
389.031 412.129 391.682 410.084 391.682 407.561 cv
391.682 396.273 li
392.709 396.097 395.612 396.147 396.765 397.785 cv
398.068 399.639 397.419 401.588 397.419 401.588 cv
397.419 401.588 400.935 397.087 398.085 393.268 cv
cp
.172549 .341176 .470588 rgb
f
349.02 313.59 mo
346.475 313.59 344.41 311.997 344.41 310.031 cv
344.41 308.067 346.475 306.475 349.02 306.475 cv
350.362 306.475 351.567 306.919 352.408 307.625 cv
352.408 297.19 li
352.411 297.19 li
352.412 297.19 352.74 297.164 353.251 297.164 cv
354.665 297.164 357.479 297.367 358.619 298.894 cv
360.841 301.87 358.101 305.377 358.101 305.377 cv
358.101 305.377 358.606 303.857 357.593 302.414 cv
356.901 301.432 355.4 301.182 354.381 301.182 cv
354.077 301.182 353.816 301.205 353.632 301.236 cv
353.632 310.031 li
353.632 311.997 351.567 313.59 349.02 313.59 cv
.996078 .858823 .592157 rgb
f
264.712 342.455 mo
253.808 331.551 li
266.091 319.27 li
276.993 330.172 li
264.712 342.455 li
cp
.172549 .341176 .470588 rgb
f
274.608 321.655 mo
273.921 320.967 272.808 320.967 272.118 321.655 cv
271.433 322.343 271.433 323.457 272.12 324.145 cv
272.808 324.832 273.921 324.832 274.606 324.145 cv
275.296 323.457 275.296 322.343 274.608 321.655 cv
cp
276.993 330.173 mo
271.542 324.722 li
266.091 319.27 li
271.528 317.42 li
275.186 321.078 li
278.843 324.735 li
276.993 330.173 li
cp
.996078 .807843 .407843 rgb
f
274.372 321.893 mo
273.815 321.336 272.913 321.334 272.354 321.893 cv
271.8 322.447 271.8 323.352 272.356 323.908 cv
272.913 324.464 273.815 324.465 274.372 323.908 cv
274.929 323.352 274.927 322.447 274.372 321.893 cv
cp
274.708 324.244 mo
273.966 324.987 272.763 324.987 272.021 324.244 cv
271.276 323.502 271.276 322.297 272.019 321.555 cv
272.761 320.813 273.966 320.813 274.708 321.555 cv
275.452 322.299 275.452 323.502 274.708 324.244 cv
cp
.984314 .690196 .231373 rgb
f
274.106 322.218 mo
273.487 321.686 li
276.724 317.928 277.62 313.183 276.591 310.94 cv
276.267 310.231 275.782 309.873 275.151 309.873 cv
274.644 309.873 274.237 310.068 273.909 310.471 cv
272.577 312.111 272.925 316.815 273.456 319.348 cv
272.46 318.352 li
272.054 315.746 271.854 311.707 273.276 309.957 cv
273.761 309.359 274.392 309.057 275.151 309.057 cv
276.102 309.057 276.876 309.604 277.333 310.601 cv
278.466 313.07 277.554 318.216 274.106 322.218 cv
cp
1 1 1 rgb
f
274.106 322.218 mo
273.819 322.506 273.03 322.639 273.03 321.514 cv
273.419 321.365 273.698 321.514 273.698 321.514 cv
274.106 322.218 li
cp
.780392 .698039 .6 rgb
f
266.239 336.922 mo
266.239 339.47 li
264.966 339.47 li
264.966 336.992 li
263.481 336.904 262.314 336.363 261.405 335.49 cv
262.278 334.549 li
263.064 335.299 264.022 335.77 265.298 335.77 cv
266.729 335.77 267.88 335.036 267.88 333.606 cv
267.88 332.4 267.304 331.879 265.298 331.268 cv
263.011 330.568 261.876 329.713 261.876 327.951 cv
261.876 326.346 263.134 325.141 264.966 324.967 cv
264.966 322.418 li
266.239 322.418 li
266.239 324.967 li
267.427 325.105 268.247 325.541 269.05 326.275 cv
268.196 327.201 li
267.392 326.449 266.554 326.152 265.56 326.152 cv
264.319 326.152 263.396 326.747 263.396 327.881 cv
263.396 328.91 263.884 329.398 265.977 330.027 cv
267.897 330.621 269.399 331.373 269.399 333.555 cv
269.399 335.316 268.247 336.625 266.239 336.922 cv
cp
.992157 .737255 .329412 rgb
f
386.674 324.491 mo
369.857 324.489 li
369.857 299.208 li
372.626 293.591 li
378.266 293.59 li
378.439 293.591 li
379.202 289.266 381.504 285.764 383.739 284.336 cv
384.002 284.52 384.269 284.71 384.53 284.898 cv
382.411 286.01 380.116 289.353 379.34 293.59 cv
380.934 293.589 li
383.098 292.174 386.55 289.235 387.295 286.989 cv
387.539 287.182 387.783 287.379 388.025 287.575 cv
387.132 289.763 384.455 292.138 382.469 293.589 cv
383.906 293.589 li
386.672 299.21 li
386.674 324.491 li
378.266 294.845 mo
377.408 294.845 376.709 295.541 376.709 296.4 cv
376.709 297.258 377.408 297.953 378.266 297.953 cv
379.124 297.953 379.82 297.257 379.82 296.4 cv
379.82 296.102 379.73 295.827 379.588 295.59 cv
379.291 295.886 379.036 295.997 378.83 295.997 cv
378.436 295.997 378.219 295.592 378.219 295.302 cv
378.228 295.148 378.252 294.997 378.266 294.845 cv
388.328 286.252 mo
387.975 285.968 387.618 285.688 387.259 285.41 cv
387.178 285.256 387.069 285.111 386.932 284.975 cv
386.697 284.739 386.423 284.595 386.112 284.542 cv
385.751 284.275 385.386 284.009 385.02 283.747 cv
385.302 283.671 385.576 283.633 385.839 283.633 cv
386.499 283.633 387.089 283.873 387.56 284.345 cv
388.091 284.876 388.35 285.517 388.328 286.252 cv
.992157 .803922 .427451 rgb
f
388.025 287.575 mo
387.783 287.379 387.539 287.182 387.295 286.989 cv
387.363 286.784 387.409 286.585 387.429 286.394 cv
387.466 286.026 387.411 285.701 387.259 285.41 cv
387.618 285.688 387.975 285.968 388.328 286.252 cv
388.326 286.328 388.321 286.406 388.313 286.484 cv
388.276 286.839 388.176 287.204 388.025 287.575 cv
384.53 284.898 mo
384.269 284.71 384.002 284.52 383.739 284.336 cv
384.058 284.132 384.376 283.97 384.688 283.855 cv
384.8 283.813 384.911 283.777 385.02 283.747 cv
385.386 284.009 385.751 284.275 386.112 284.542 cv
386.023 284.527 385.932 284.52 385.837 284.52 cv
385.579 284.52 385.299 284.576 384.998 284.687 cv
384.843 284.745 384.687 284.815 384.53 284.898 cv
.996078 .901961 .713725 rgb
f
333.816 396.732 mo
328.909 392.441 li
328.909 392.44 li
314.638 379.96 li
337.921 387.941 li
333.816 396.732 li
.992157 .772549 .345098 rgb
f
318.307 397.317 mo
314.638 379.96 li
328.909 392.441 li
318.307 397.317 li
.996078 .858823 .592157 rgb
f
328.909 392.441 mo
314.638 379.96 li
328.909 392.44 li
328.909 392.441 li
.996078 .886274 .67451 rgb
f
337.921 387.941 mo
337.921 387.941 li
314.638 379.96 li
345.962 384.328 li
337.921 387.941 li
.996078 .858823 .592157 rgb
f
338.214 258.755 mo
338.963 257.987 339.99 257.556 341.063 257.556 cv
342.135 257.556 343.161 257.988 343.91 258.756 cv
344.003 258.851 li
344.121 258.794 li
345.087 258.329 346.2 258.273 347.208 258.64 cv
348.216 259.007 349.033 259.765 349.475 260.742 cv
349.529 260.862 li
349.659 260.85 li
350.727 260.742 351.793 261.071 352.614 261.761 cv
353.436 262.45 353.945 263.442 354.025 264.513 cv
354.035 264.644 li
354.162 264.676 li
355.201 264.94 356.09 265.614 356.626 266.543 cv
357.162 267.472 357.301 268.577 357.011 269.61 cv
356.976 269.736 li
357.086 269.811 li
357.972 270.416 358.576 271.353 358.763 272.408 cv
358.948 273.465 358.7 274.552 358.075 275.422 cv
357.998 275.529 li
358.074 275.636 li
358.7 276.507 358.948 277.594 358.762 278.649 cv
358.575 279.706 357.971 280.643 357.085 281.247 cv
356.976 281.321 li
357.012 281.448 li
357.302 282.481 357.162 283.587 356.626 284.516 cv
356.09 285.444 355.201 286.117 354.162 286.383 cv
354.035 286.415 li
354.025 286.545 li
353.945 287.614 353.436 288.606 352.614 289.296 cv
351.792 289.985 350.727 290.315 349.659 290.207 cv
349.529 290.194 li
349.475 290.315 li
349.033 291.293 348.216 292.051 347.208 292.418 cv
346.2 292.785 345.087 292.729 344.12 292.265 cv
344.003 292.208 li
343.91 292.303 li
343.161 293.07 342.135 293.503 341.063 293.503 cv
339.99 293.503 338.963 293.071 338.214 292.304 cv
338.12 292.208 li
338.003 292.265 li
337.036 292.729 335.923 292.784 334.915 292.417 cv
333.907 292.05 333.09 291.292 332.648 290.314 cv
332.595 290.194 li
332.465 290.207 li
331.397 290.315 330.332 289.985 329.51 289.296 cv
328.688 288.606 328.179 287.614 328.099 286.545 cv
328.089 286.415 li
327.962 286.383 li
326.923 286.118 326.034 285.444 325.497 284.516 cv
324.961 283.586 324.822 282.479 325.113 281.447 cv
325.148 281.321 li
325.04 281.247 li
324.153 280.643 323.549 279.706 323.363 278.649 cv
323.177 277.594 323.425 276.507 324.051 275.636 cv
324.127 275.529 li
324.05 275.423 li
323.424 274.552 323.176 273.465 323.362 272.408 cv
323.549 271.353 324.153 270.416 325.039 269.811 cv
325.148 269.736 li
325.113 269.612 li
324.822 268.579 324.961 267.473 325.498 266.543 cv
326.034 265.614 326.923 264.94 327.962 264.676 cv
328.089 264.644 li
328.099 264.513 li
328.179 263.442 328.688 262.45 329.51 261.761 cv
330.332 261.071 331.396 260.742 332.465 260.85 cv
332.595 260.862 li
332.648 260.744 li
333.09 259.767 333.906 259.008 334.914 258.641 cv
335.923 258.273 337.036 258.329 338.003 258.794 cv
338.12 258.851 li
338.214 258.755 li
cp
.172549 .341176 .470588 rgb
f
341.06 259.748 mo
332.347 259.748 325.281 266.814 325.281 275.531 cv
325.281 284.247 332.347 291.313 341.06 291.313 cv
349.775 291.313 356.842 284.247 356.842 275.531 cv
356.842 266.814 349.775 259.748 341.06 259.748 cv
cp
357.439 275.531 mo
357.439 284.573 350.106 291.906 341.06 291.906 cv
332.019 291.906 324.685 284.573 324.685 275.531 cv
324.685 266.485 332.019 259.152 341.06 259.152 cv
350.106 259.152 357.439 266.485 357.439 275.531 cv
cp
.945098 .403922 .160784 rgb
f
334.259 272.468 mo
333.575 273.521 li
332.974 273.11 332.399 272.905 331.798 272.905 cv
331.06 272.905 330.663 273.192 330.663 273.63 cv
330.663 274.108 330.95 274.327 332.181 274.669 cv
333.657 275.065 334.491 275.667 334.491 276.952 cv
334.491 278.456 333.097 279.249 331.442 279.249 cv
330.198 279.249 329.227 278.825 328.558 278.224 cv
329.446 277.226 li
329.993 277.663 330.663 277.95 331.388 277.95 cv
332.181 277.95 332.686 277.608 332.686 277.103 cv
332.686 276.474 332.399 276.282 331.046 275.899 cv
329.556 275.489 328.899 274.778 328.899 273.712 cv
328.899 272.509 330.007 271.606 331.688 271.606 cv
332.727 271.606 333.575 271.935 334.259 272.468 cv
cp
1 1 1 rgb
f
339.537 277.089 mo
339.537 275.626 li
338.813 275.626 li
337.678 275.626 337.117 276.036 337.117 276.884 cv
337.117 277.581 337.473 277.978 338.143 277.978 cv
338.758 277.978 339.209 277.663 339.537 277.089 cv
cp
341.26 277.13 mo
341.26 277.718 341.451 277.923 341.807 278.06 cv
341.438 279.222 li
340.645 279.153 340.125 278.866 339.838 278.169 cv
339.332 278.935 338.539 279.249 337.678 279.249 cv
336.228 279.249 335.34 278.333 335.34 277.021 cv
335.34 275.448 336.529 274.601 338.635 274.601 cv
339.537 274.601 li
339.537 274.19 li
339.537 273.247 339.113 272.933 338.184 272.933 cv
337.691 272.933 336.994 273.069 336.27 273.315 cv
335.859 272.126 li
336.748 271.784 337.664 271.606 338.484 271.606 cv
340.412 271.606 341.26 272.495 341.26 274.095 cv
341.26 277.13 li
cp
f
345.061 277.28 mo
345.061 277.677 345.185 277.841 345.472 277.841 cv
345.608 277.841 345.759 277.814 345.882 277.772 cv
346.251 279.003 li
345.895 279.153 345.458 279.249 345.007 279.249 cv
343.927 279.249 343.311 278.606 343.311 277.403 cv
343.311 268.913 li
345.061 268.722 li
345.061 277.28 li
cp
f
351.475 274.751 mo
351.475 273.561 351.051 272.851 350.066 272.851 cv
349.246 272.851 348.74 273.397 348.631 274.833 cv
351.475 274.833 li
351.475 274.751 li
cp
353.17 275.968 mo
348.631 275.968 li
348.754 277.444 349.451 277.923 350.408 277.923 cv
351.051 277.923 351.584 277.718 352.213 277.28 cv
352.938 278.278 li
352.227 278.853 351.352 279.249 350.258 279.249 cv
348.016 279.249 346.813 277.759 346.813 275.476 cv
346.813 273.274 347.975 271.606 350.025 271.606 cv
352.049 271.606 353.211 272.974 353.211 275.257 cv
353.211 275.489 353.184 275.776 353.17 275.968 cv
cp
f
306.602 435.992 mo
308.433 435.992 309.7 435.398 309.7 433.375 cv
309.7 431.514 308.56 430.855 306.635 430.855 cv
305.029 430.855 li
305.029 435.992 li
306.602 435.992 li
cp
306.65 430.068 mo
309.203 430.068 310.712 431.08 310.712 433.359 cv
310.712 435.83 308.994 436.777 306.602 436.777 cv
305.029 436.777 li
305.029 441.065 li
304.066 441.065 li
304.066 430.068 li
306.65 430.068 li
cp
f
317.231 432.588 mo
317.055 433.471 li
316.814 433.406 316.605 433.375 316.316 433.375 cv
315.145 433.375 314.519 434.209 314.069 435.928 cv
314.069 441.065 li
313.138 441.065 li
313.138 432.668 li
313.94 432.668 li
314.02 434.547 li
314.471 433.166 315.225 432.492 316.396 432.492 cv
316.718 432.492 317.007 432.523 317.231 432.588 cv
cp
f
319.288 436.875 mo
319.288 439.234 320.235 440.453 321.841 440.453 cv
323.445 440.453 324.425 439.25 324.425 436.842 cv
324.425 434.482 323.477 433.279 321.856 433.279 cv
320.268 433.279 319.288 434.467 319.288 436.875 cv
cp
325.404 436.842 mo
325.404 439.555 324.056 441.24 321.841 441.24 cv
319.609 441.24 318.293 439.57 318.293 436.875 cv
318.293 434.178 319.657 432.492 321.856 432.492 cv
324.088 432.492 325.404 434.098 325.404 436.842 cv
cp
f
338.506 435.061 mo
338.506 441.065 li
337.575 441.065 li
337.575 435.19 li
337.575 433.824 337.013 433.246 336.146 433.246 cv
335.135 433.246 334.429 433.953 333.786 434.98 cv
333.786 441.065 li
332.855 441.065 li
332.855 435.19 li
332.855 433.824 332.294 433.246 331.427 433.246 cv
330.415 433.246 329.693 433.953 329.067 434.98 cv
329.067 441.065 li
328.136 441.065 li
328.136 432.668 li
328.938 432.668 li
329.019 434.098 li
329.645 433.135 330.528 432.492 331.603 432.492 cv
332.679 432.492 333.434 433.117 333.69 434.162 cv
334.316 433.166 335.215 432.492 336.323 432.492 cv
337.671 432.492 338.506 433.471 338.506 435.061 cv
cp
f
342.153 436.875 mo
342.153 439.234 343.101 440.453 344.706 440.453 cv
346.31 440.453 347.29 439.25 347.29 436.842 cv
347.29 434.482 346.343 433.279 344.722 433.279 cv
343.133 433.279 342.153 434.467 342.153 436.875 cv
cp
348.27 436.842 mo
348.27 439.555 346.921 441.24 344.706 441.24 cv
342.475 441.24 341.158 439.57 341.158 436.875 cv
341.158 434.178 342.522 432.492 344.722 432.492 cv
346.953 432.492 348.27 434.098 348.27 436.842 cv
cp
f
354.821 440.711 mo
354.308 441.049 353.73 441.24 353.056 441.24 cv
351.788 441.24 351.001 440.486 351.001 439.025 cv
351.001 433.424 li
349.589 433.424 li
349.589 432.668 li
351.001 432.668 li
351.001 430.662 li
351.933 430.549 li
351.933 432.668 li
354.1 432.668 li
353.987 433.424 li
351.933 433.424 li
351.933 438.977 li
351.933 439.957 352.317 440.438 353.168 440.438 cv
353.634 440.438 354.035 440.309 354.452 440.053 cv
354.821 440.711 li
cp
f
356.477 441.065 mo
356.477 432.668 li
357.408 432.668 li
357.408 441.065 li
356.477 441.065 li
cp
357.633 429.65 mo
357.633 430.02 357.359 430.324 356.927 430.324 cv
356.509 430.324 356.236 430.02 356.236 429.65 cv
356.236 429.281 356.509 428.977 356.927 428.977 cv
357.359 428.977 357.633 429.281 357.633 429.65 cv
cp
f
361.133 436.875 mo
361.133 439.234 362.08 440.453 363.685 440.453 cv
365.29 440.453 366.27 439.25 366.27 436.842 cv
366.27 434.482 365.322 433.279 363.701 433.279 cv
362.112 433.279 361.133 434.467 361.133 436.875 cv
cp
367.249 436.842 mo
367.249 439.555 365.9 441.24 363.685 441.24 cv
361.454 441.24 360.138 439.57 360.138 436.875 cv
360.138 434.178 361.502 432.492 363.701 432.492 cv
365.933 432.492 367.249 434.098 367.249 436.842 cv
cp
f
376.032 435.061 mo
376.032 441.065 li
375.102 441.065 li
375.102 435.19 li
375.102 433.809 374.54 433.246 373.513 433.246 cv
372.373 433.246 371.602 433.953 370.912 434.98 cv
370.912 441.065 li
369.98 441.065 li
369.98 432.668 li
370.783 432.668 li
370.88 434.098 li
371.538 433.135 372.469 432.492 373.688 432.492 cv
375.214 432.492 376.032 433.44 376.032 435.061 cv
cp
f
225 0 mo
450 0 li
450 225.001 li
225 225.001 li
225 0 li
.239216 .678431 .87451 rgb
f
288.658 25.2095 mo
293.59 25.2095 297.588 29.2085 297.588 34.1392 cv
297.588 39.0708 293.59 43.0688 288.658 43.0688 cv
283.727 43.0688 279.728 39.0708 279.728 34.1392 cv
279.728 29.2085 283.727 25.2095 288.658 25.2095 cv
cp
.945098 .403922 .160784 rgb
f
419.165 51.2432 mo
414.233 51.2432 410.235 47.2451 410.235 42.3135 cv
410.235 37.3818 414.233 33.3838 419.165 33.3838 cv
424.097 33.3838 428.095 37.3818 428.095 42.3135 cv
428.095 47.2451 424.097 51.2432 419.165 51.2432 cv
.356863 .72549 .894118 rgb
f
373.419 30.4439 mo
368.487 30.4439 364.489 26.4458 364.489 21.5142 cv
364.489 16.5825 368.487 12.5846 373.419 12.5846 cv
378.351 12.5846 382.349 16.5825 382.349 21.5142 cv
382.349 26.4458 378.351 30.4439 373.419 30.4439 cv
f
403.297 212.814 mo
398.365 212.814 394.367 208.817 394.367 203.884 cv
394.367 198.954 398.365 194.954 403.297 194.954 cv
408.229 194.954 412.227 198.954 412.227 203.884 cv
412.227 208.817 408.229 212.814 403.297 212.814 cv
.392157 .741176 .898039 rgb
f
272.135 210.868 mo
265.57 210.868 260.249 205.547 260.249 198.984 cv
260.249 192.42 265.57 187.099 272.135 187.099 cv
278.697 187.099 284.019 192.42 284.019 198.984 cv
284.019 205.547 278.697 210.868 272.135 210.868 cv
f
252.679 125.588 mo
257.604 125.588 261.597 129.581 261.597 134.506 cv
261.597 139.432 257.604 143.425 252.679 143.425 cv
247.753 143.425 243.761 139.432 243.761 134.506 cv
243.761 129.581 247.753 125.588 252.679 125.588 cv
cp
.988235 .717647 .180392 rgb
f
250.405 167.6 mo
247.628 167.6 245.376 165.349 245.376 162.57 cv
245.376 159.792 247.628 157.541 250.405 157.541 cv
253.185 157.541 255.435 159.792 255.435 162.57 cv
255.435 165.349 253.185 167.6 250.405 167.6 cv
.619608 .839216 .937255 rgb
f
384.491 47.3434 mo
381.714 47.3434 379.462 45.0913 379.462 42.314 cv
379.462 39.5347 381.714 37.2837 384.491 37.2837 cv
387.27 37.2837 389.523 39.5347 389.523 42.314 cv
389.523 45.0913 387.27 47.3434 384.491 47.3434 cv
f
248.419 70.7251 mo
246.749 70.7251 245.397 69.3735 245.397 67.7046 cv
245.397 66.0356 246.749 64.6841 248.419 64.6841 cv
250.087 64.6841 251.438 66.0356 251.438 67.7046 cv
251.438 69.3735 250.087 70.7251 248.419 70.7251 cv
.572549 .792157 .890196 rgb
f
391.576 211.754 mo
389.908 211.754 388.556 210.403 388.556 208.734 cv
388.556 207.065 389.908 205.713 391.576 205.713 cv
393.246 205.713 394.598 207.065 394.598 208.734 cv
394.598 210.403 393.246 211.754 391.576 211.754 cv
.239216 .678431 .87451 rgb
f
370.555 193.308 mo
372.224 193.308 373.575 194.66 373.575 196.328 cv
373.575 197.998 372.224 199.35 370.555 199.35 cv
368.886 199.35 367.534 197.998 367.534 196.328 cv
367.534 194.66 368.886 193.308 370.555 193.308 cv
cp
.945098 .403922 .160784 rgb
f
422.31 137.489 mo
426.745 137.489 430.34 141.084 430.34 145.518 cv
430.34 149.954 426.745 153.548 422.31 153.548 cv
417.874 153.548 414.28 149.954 414.28 145.518 cv
414.28 141.084 417.874 137.489 422.31 137.489 cv
cp
f
300.947 215.872 mo
302.502 215.872 303.523 215.34 303.523 213.911 cv
303.523 212.454 302.502 211.866 301.199 211.866 cv
299.168 211.866 li
299.168 215.872 li
300.947 215.872 li
cp
299.168 211.193 mo
301.101 211.193 li
302.264 211.193 303.09 210.549 303.09 209.429 cv
303.09 208.14 302.166 207.678 300.555 207.678 cv
299.168 207.678 li
299.168 211.193 li
cp
304.393 213.911 mo
304.393 215.746 303.048 216.572 300.947 216.572 cv
298.327 216.572 li
298.327 206.978 li
300.471 206.978 li
302.656 206.978 303.944 207.747 303.944 209.372 cv
303.944 210.605 303.188 211.306 302.18 211.487 cv
303.342 211.613 304.393 212.258 304.393 213.911 cv
cp
1 1 1 rgb
f
311.07 216.572 mo
311.027 215.27 li
310.51 216.138 309.768 216.727 308.633 216.727 cv
307.316 216.727 306.559 215.928 306.559 214.485 cv
306.559 209.246 li
307.371 209.246 li
307.371 214.401 li
307.371 215.564 307.861 216.054 308.814 216.054 cv
309.781 216.054 310.453 215.424 310.957 214.556 cv
310.957 209.246 li
311.77 209.246 li
311.77 216.572 li
311.07 216.572 li
cp
f
318.867 209.904 mo
318.475 210.451 li
317.846 209.988 317.299 209.765 316.557 209.765 cv
315.59 209.765 314.932 210.241 314.932 210.997 cv
314.932 211.726 315.394 212.034 316.711 212.384 cv
318.307 212.805 319.064 213.351 319.064 214.598 cv
319.064 215.956 317.873 216.727 316.416 216.727 cv
315.226 216.727 314.428 216.32 313.797 215.788 cv
314.26 215.256 li
314.861 215.76 315.506 216.04 316.402 216.04 cv
317.467 216.04 318.209 215.536 318.209 214.653 cv
318.209 213.757 317.803 213.435 316.275 213.015 cv
314.721 212.608 314.091 212.034 314.091 210.997 cv
314.091 209.891 315.142 209.092 316.528 209.092 cv
317.467 209.092 318.182 209.372 318.867 209.904 cv
cp
f
321.231 216.572 mo
321.231 209.246 li
322.044 209.246 li
322.044 216.572 li
321.231 216.572 li
cp
322.24 206.613 mo
322.24 206.935 322.002 207.201 321.623 207.201 cv
321.26 207.201 321.021 206.935 321.021 206.613 cv
321.021 206.291 321.26 206.024 321.623 206.024 cv
322.002 206.024 322.24 206.291 322.24 206.613 cv
cp
f
330.292 211.333 mo
330.292 216.572 li
329.479 216.572 li
329.479 211.445 li
329.479 210.241 328.989 209.751 328.093 209.751 cv
327.098 209.751 326.426 210.367 325.824 211.264 cv
325.824 216.572 li
325.012 216.572 li
325.012 209.246 li
325.711 209.246 li
325.795 210.493 li
326.37 209.652 327.182 209.092 328.247 209.092 cv
329.578 209.092 330.292 209.919 330.292 211.333 cv
cp
f
337.586 212.384 mo
337.586 210.787 336.941 209.765 335.555 209.765 cv
334.42 209.765 333.551 210.605 333.467 212.594 cv
337.586 212.594 li
337.586 212.384 li
cp
338.355 213.225 mo
333.467 213.225 li
333.564 215.214 334.49 216.04 335.75 216.04 cv
336.549 216.04 337.081 215.788 337.726 215.312 cv
338.103 215.83 li
337.418 216.391 336.675 216.727 335.709 216.727 cv
333.775 216.727 332.599 215.325 332.599 212.973 cv
332.599 210.633 333.733 209.092 335.526 209.092 cv
337.432 209.092 338.384 210.479 338.384 212.636 cv
338.384 212.86 338.369 213.084 338.355 213.225 cv
cp
f
344.852 209.904 mo
344.459 210.451 li
343.828 209.988 343.282 209.765 342.539 209.765 cv
341.573 209.765 340.914 210.241 340.914 210.997 cv
340.914 211.726 341.377 212.034 342.693 212.384 cv
344.291 212.805 345.047 213.351 345.047 214.598 cv
345.047 215.956 343.856 216.727 342.399 216.727 cv
341.209 216.727 340.41 216.32 339.78 215.788 cv
340.242 215.256 li
340.845 215.76 341.489 216.04 342.386 216.04 cv
343.45 216.04 344.192 215.536 344.192 214.653 cv
344.192 213.757 343.786 213.435 342.26 213.015 cv
340.705 212.608 340.074 212.034 340.074 210.997 cv
340.074 209.891 341.125 209.092 342.512 209.092 cv
343.45 209.092 344.164 209.372 344.852 209.904 cv
cp
f
351.348 209.904 mo
350.955 210.451 li
350.324 209.988 349.778 209.765 349.035 209.765 cv
348.069 209.765 347.41 210.241 347.41 210.997 cv
347.41 211.726 347.873 212.034 349.189 212.384 cv
350.787 212.805 351.543 213.351 351.543 214.598 cv
351.543 215.956 350.352 216.727 348.895 216.727 cv
347.705 216.727 346.906 216.32 346.276 215.788 cv
346.738 215.256 li
347.341 215.76 347.985 216.04 348.882 216.04 cv
349.946 216.04 350.688 215.536 350.688 214.653 cv
350.688 213.757 350.282 213.435 348.756 213.015 cv
347.201 212.608 346.57 212.034 346.57 210.997 cv
346.57 209.891 347.621 209.092 349.008 209.092 cv
349.946 209.092 350.66 209.372 351.348 209.904 cv
cp
f
357.688 216.572 mo
357.688 206.978 li
358.527 206.978 li
358.527 216.572 li
357.688 216.572 li
cp
f
365.977 214.695 mo
365.977 210.871 li
365.543 210.255 364.955 209.765 364.059 209.765 cv
362.77 209.765 361.9 210.871 361.914 212.931 cv
361.914 214.976 362.685 216.054 363.918 216.054 cv
364.885 216.054 365.473 215.564 365.977 214.695 cv
cp
366.789 216.572 mo
366.088 216.572 li
365.99 215.452 li
365.557 216.18 364.855 216.727 363.791 216.727 cv
362.082 216.727 361.047 215.27 361.047 212.944 cv
361.047 210.689 362.125 209.092 363.918 209.092 cv
364.912 209.092 365.557 209.568 365.977 210.087 cv
365.977 206.165 li
366.789 206.263 li
366.789 216.572 li
cp
f
374.012 212.384 mo
374.012 210.787 373.369 209.765 371.982 209.765 cv
370.848 209.765 369.978 210.605 369.895 212.594 cv
374.012 212.594 li
374.012 212.384 li
cp
374.783 213.225 mo
369.895 213.225 li
369.992 215.214 370.916 216.04 372.178 216.04 cv
372.977 216.04 373.508 215.788 374.152 215.312 cv
374.531 215.83 li
373.844 216.391 373.102 216.727 372.135 216.727 cv
370.203 216.727 369.025 215.325 369.025 212.973 cv
369.025 210.633 370.16 209.092 371.953 209.092 cv
373.859 209.092 374.81 210.479 374.81 212.636 cv
374.81 212.86 374.797 213.084 374.783 213.225 cv
cp
f
380.887 214.779 mo
380.887 212.763 li
379.611 212.763 li
378.141 212.763 377.314 213.337 377.314 214.499 cv
377.314 215.508 377.889 216.068 378.855 216.068 cv
379.779 216.068 380.424 215.605 380.887 214.779 cv
cp
381.699 214.947 mo
381.699 215.76 381.924 215.998 382.314 216.152 cv
382.133 216.727 li
381.488 216.601 381.111 216.278 380.998 215.494 cv
380.48 216.334 379.695 216.727 378.715 216.727 cv
377.301 216.727 376.445 215.844 376.445 214.541 cv
376.445 213 377.609 212.16 379.486 212.16 cv
380.887 212.16 li
380.887 211.46 li
380.887 210.297 380.41 209.778 379.191 209.778 cv
378.603 209.778 377.932 209.933 377.203 210.199 cv
376.992 209.582 li
377.805 209.261 378.533 209.092 379.303 209.092 cv
380.971 209.092 381.699 209.919 381.699 211.417 cv
381.699 214.947 li
cp
f
340.197 193.308 mo
298.502 193.308 264.701 159.506 264.701 117.81 cv
264.701 88.1035 281.862 62.4027 306.808 50.0798 cv
306.824 50.523 306.853 50.9635 306.892 51.4006 cv
282.595 63.6107 265.92 88.7638 265.92 117.81 cv
265.92 158.832 299.176 192.088 340.197 192.088 cv
381.221 192.088 414.475 158.832 414.475 117.81 cv
414.475 82.5969 389.968 53.1061 357.081 45.4605 cv
357.018 45.023 356.944 44.588 356.858 44.1581 cv
390.536 51.7454 415.695 81.8404 415.695 117.81 cv
415.695 159.506 381.893 193.308 340.197 193.308 cv
.619608 .839216 .937255 rgb
f
428.094 85.0239 mo
428.094 95.7529 419.398 104.451 408.668 104.451 cv
397.939 104.451 389.242 95.7529 389.242 85.0239 cv
389.242 74.2954 397.939 65.5986 408.668 65.5986 cv
419.398 65.5986 428.094 74.2954 428.094 85.0239 cv
cp
.172549 .341176 .470588 rgb
f
309.791 174.475 mo
309.791 185.494 300.861 194.426 289.84 194.426 cv
278.822 194.426 269.891 185.494 269.891 174.475 cv
269.891 163.457 278.822 154.524 289.84 154.524 cv
300.861 154.524 309.791 163.457 309.791 174.475 cv
cp
f
290.148 97.3438 mo
290.148 108.963 280.73 118.383 269.109 118.383 cv
257.492 118.383 248.07 108.963 248.07 97.3438 cv
248.07 85.7246 257.492 76.3057 269.109 76.3057 cv
280.73 76.3057 290.148 85.7246 290.148 97.3438 cv
cp
f
357.342 49.1025 mo
357.342 63.0625 346.025 74.3793 332.065 74.3793 cv
318.105 74.3793 306.789 63.0625 306.789 49.1025 cv
306.789 35.1431 318.105 23.8271 332.065 23.8271 cv
346.025 23.8271 357.342 35.1431 357.342 49.1025 cv
f
415.061 170.937 mo
415.061 183.965 404.503 194.526 391.473 194.526 cv
378.446 194.526 367.885 183.965 367.885 170.937 cv
367.885 157.909 378.446 147.349 391.473 147.349 cv
404.503 147.349 415.061 157.909 415.061 170.937 cv
cp
f
250.878 25.0645 mo
250.878 27.75 li
249.534 27.75 li
249.534 25.1387 li
247.971 25.0469 246.741 24.4766 245.782 23.5557 cv
246.702 22.5635 li
247.531 23.3535 248.542 23.8516 249.885 23.8516 cv
251.395 23.8516 252.607 23.0781 252.607 21.5713 cv
252.607 20.3008 251.999 19.75 249.885 19.1074 cv
247.475 18.3691 246.28 17.4688 246.28 15.6113 cv
246.28 13.9199 247.602 12.6494 249.534 12.4668 cv
249.534 9.78126 li
250.878 9.78126 li
250.878 12.4668 li
252.129 12.6133 252.994 13.0723 253.839 13.8457 cv
252.938 14.8213 li
252.091 14.0283 251.208 13.7158 250.162 13.7158 cv
248.855 13.7158 247.88 14.3428 247.88 15.5371 cv
247.88 16.623 248.395 17.1367 250.602 17.7998 cv
252.626 18.4248 254.208 19.2168 254.208 21.5156 cv
254.208 23.373 252.994 24.752 250.878 25.0645 cv
cp
248.52 33.3457 mo
248.52 32.8262 249.248 32.6846 250.148 32.6846 cv
251.046 32.6846 251.773 32.8262 251.773 33.3457 cv
251.773 33.8623 251.046 34.5576 250.148 34.5576 cv
249.248 34.5576 248.52 33.8623 248.52 33.3457 cv
cp
250.145 44.8828 mo
249.699 44.8828 248.359 42.5283 248.359 42.0156 cv
248.359 41.498 248.868 35.1074 250.145 35.1074 cv
251.425 35.1074 251.934 41.498 251.934 42.0156 cv
251.934 42.5283 250.594 44.8828 250.145 44.8828 cv
cp
254.313 32.6885 mo
254.313 31.2197 255.14 29.1953 257.001 27.7402 cv
259.842 25.5186 261.815 22.1895 261.815 18.3066 cv
261.815 11.8643 256.591 6.63868 250.146 6.63868 cv
243.701 6.63868 238.477 11.8643 238.477 18.3066 cv
238.477 22.1895 240.451 25.5186 243.292 27.7402 cv
245.152 29.1953 245.979 31.2197 245.979 32.6885 cv
238.166 34.5547 232.85 38.2617 233.247 39.0215 cv
235.908 44.0752 244.282 46.2422 250.146 46.2422 cv
256.011 46.2422 264.384 44.0752 267.046 39.0215 cv
267.443 38.2617 262.127 34.5547 254.313 32.6885 cv
cp
f
343.082 183.883 mo
339.201 183.883 333.658 182.449 331.897 179.103 cv
331.634 178.601 335.153 176.147 340.324 174.913 cv
340.324 173.941 339.776 172.6 338.546 171.637 cv
336.665 170.167 335.359 167.964 335.359 165.394 cv
335.359 161.13 338.816 157.671 343.082 157.671 cv
347.348 157.671 350.805 161.13 350.805 165.394 cv
350.805 167.964 349.499 170.167 347.618 171.637 cv
346.388 172.6 345.84 173.941 345.84 174.913 cv
351.011 176.147 354.53 178.601 354.267 179.103 cv
352.506 182.449 346.964 183.883 343.082 183.883 cv
343.081 176.513 mo
342.236 176.513 341.899 180.743 341.899 181.085 cv
341.899 181.425 342.786 182.983 343.081 182.983 cv
343.379 182.983 344.265 181.425 344.265 181.085 cv
344.265 180.743 343.929 176.513 343.081 176.513 cv
343.084 174.91 mo
342.487 174.91 342.006 175.003 342.006 175.347 cv
342.006 175.689 342.487 176.15 343.084 176.15 cv
343.678 176.15 344.159 175.689 344.159 175.347 cv
344.159 175.003 343.678 174.91 343.084 174.91 cv
.521569 .741176 .835294 rgb
f
399.69 133.371 mo
398.79 133.371 396.081 128.612 396.081 127.576 cv
396.081 126.529 397.109 113.611 399.69 113.611 cv
402.278 113.611 403.307 126.529 403.307 127.576 cv
403.307 128.612 400.599 133.371 399.69 133.371 cv
.470588 .776471 .913725 rgb
f
399.697 112.498 mo
397.878 112.498 396.405 111.093 396.405 110.05 cv
396.405 108.999 397.878 108.712 399.697 108.712 cv
401.513 108.712 402.982 108.999 402.982 110.05 cv
402.982 111.093 401.513 112.498 399.697 112.498 cv
f
295.73 183.941 mo
295.73 184.166 295.549 184.348 295.324 184.348 cv
284.373 184.348 li
284.148 184.348 283.967 184.166 283.967 183.941 cv
283.967 183.695 li
283.967 183.47 284.148 183.288 284.373 183.288 cv
295.324 183.288 li
295.549 183.288 295.73 183.47 295.73 183.695 cv
295.73 183.941 li
cp
1 1 1 rgb
f
295.73 186.065 mo
295.73 186.29 295.549 186.472 295.324 186.472 cv
284.373 186.472 li
284.148 186.472 283.967 186.29 283.967 186.065 cv
283.967 185.818 li
283.967 185.593 284.148 185.411 284.373 185.411 cv
295.324 185.411 li
295.549 185.411 295.73 185.593 295.73 185.818 cv
295.73 186.065 li
cp
f
295.73 187.535 mo
295.73 188.121 295.256 188.596 294.67 188.596 cv
285.012 188.596 li
284.426 188.596 283.951 188.121 283.951 187.535 cv
295.73 187.535 li
cp
f
297.844 177.461 mo
295.527 179.996 295.631 180.476 295.76 182.348 cv
283.926 182.348 li
284.053 180.476 284.158 179.996 281.84 177.461 cv
297.844 177.461 li
cp
.992157 .737255 .329412 rgb
f
300.688 170.14 mo
300.688 176.13 295.832 180.986 289.842 180.986 cv
283.852 180.986 278.994 176.13 278.994 170.14 cv
278.994 164.149 283.852 159.292 289.842 159.292 cv
295.832 159.292 300.688 164.149 300.688 170.14 cv
cp
f
291.697 188.598 mo
291.697 189.185 291.223 189.659 290.635 189.659 cv
289.049 189.659 li
288.463 189.659 287.988 189.185 287.988 188.598 cv
291.697 188.598 li
cp
1 1 1 rgb
f
299.977 170.058 mo
299.977 175.653 295.438 180.189 289.842 180.189 cv
284.246 180.189 279.709 175.653 279.709 170.058 cv
279.709 164.459 284.246 159.926 289.842 159.926 cv
295.438 159.926 299.977 164.459 299.977 170.058 cv
cp
.301961 .301961 .301961 rgb
f
299.484 170.058 mo
299.477 169.863 li
299.734 169.843 li
299.682 169.027 li
299.432 169.045 li
299.42 168.912 299.393 168.785 299.373 168.656 cv
299.629 168.604 li
299.477 167.803 li
299.223 167.849 li
299.193 167.723 299.16 167.596 299.125 167.47 cv
299.369 167.387 li
299.117 166.613 li
298.869 166.692 li
298.826 166.568 298.787 166.442 298.736 166.321 cv
298.961 166.216 li
298.609 165.477 li
298.383 165.586 li
298.322 165.468 298.258 165.356 298.189 165.241 cv
298.406 165.103 li
297.969 164.414 li
297.754 164.553 li
297.68 164.442 297.598 164.341 297.521 164.235 cv
297.719 164.067 li
297.197 163.439 li
296.996 163.607 li
296.912 163.507 296.824 163.41 296.732 163.316 cv
296.906 163.128 li
296.309 162.568 li
296.135 162.758 li
296.033 162.672 295.938 162.589 295.832 162.507 cv
295.98 162.298 li
295.318 161.814 li
295.172 162.021 li
295.063 161.95 294.951 161.885 294.84 161.817 cv
294.959 161.588 li
294.246 161.193 li
294.121 161.423 li
294.008 161.364 293.889 161.306 293.77 161.253 cv
293.859 161.014 li
293.098 160.715 li
293.006 160.953 li
292.881 160.912 292.762 160.864 292.635 160.826 cv
292.693 160.582 li
291.902 160.378 li
291.838 160.62 li
291.717 160.597 291.584 160.578 291.455 160.558 cv
291.482 160.298 li
290.672 160.195 li
290.643 160.452 li
290.514 160.44 290.381 160.438 290.25 160.431 cv
290.25 160.169 li
289.43 160.169 li
289.43 160.431 li
289.299 160.438 289.17 160.44 289.041 160.452 cv
289.012 160.199 li
288.195 160.298 li
288.228 160.558 li
288.102 160.578 287.969 160.594 287.842 160.62 cv
287.781 160.378 li
286.986 160.585 li
287.047 160.826 li
286.922 160.864 286.803 160.912 286.68 160.953 cv
286.586 160.715 li
285.82 161.014 li
285.914 161.253 li
285.795 161.306 285.678 161.364 285.563 161.42 cv
285.439 161.193 li
284.719 161.591 li
284.846 161.817 li
284.734 161.885 284.619 161.95 284.51 162.021 cv
284.363 161.814 li
283.697 162.301 li
283.85 162.507 li
283.748 162.589 283.646 162.672 283.547 162.758 cv
283.375 162.568 li
282.775 163.131 li
282.951 163.316 li
282.859 163.41 282.773 163.507 282.685 163.605 cv
282.484 163.437 li
281.963 164.072 li
282.164 164.237 li
282.084 164.341 282.006 164.442 281.93 164.549 cv
281.715 164.411 li
281.271 165.106 li
281.492 165.241 li
281.426 165.356 281.359 165.468 281.299 165.583 cv
281.068 165.473 li
280.723 166.219 li
280.945 166.324 li
280.895 166.442 280.857 166.568 280.813 166.69 cv
280.566 166.61 li
280.313 167.393 li
280.557 167.473 li
280.521 167.596 280.49 167.721 280.461 167.849 cv
280.207 167.8 li
280.053 168.606 li
280.31 168.656 li
280.291 168.782 280.266 168.909 280.25 169.042 cv
280 169.024 li
279.951 169.846 li
280.207 169.86 li
280.197 170.058 li
280.207 170.252 li
279.951 170.267 li
280 171.088 li
280.25 171.07 li
280.266 171.198 280.291 171.328 280.31 171.455 cv
280.053 171.502 li
280.207 172.313 li
280.461 172.262 li
280.49 172.388 280.521 172.515 280.557 172.638 cv
280.313 172.722 li
280.566 173.501 li
280.813 173.422 li
280.857 173.542 280.895 173.669 280.945 173.786 cv
280.723 173.892 li
281.068 174.638 li
281.299 174.528 li
281.359 174.643 281.426 174.758 281.492 174.87 cv
281.275 175.006 li
281.715 175.7 li
281.93 175.562 li
282.006 175.67 282.084 175.771 282.164 175.877 cv
281.963 176.041 li
282.484 176.674 li
282.685 176.507 li
282.773 176.604 282.859 176.704 282.951 176.794 cv
282.775 176.981 li
283.375 177.542 li
283.547 177.355 li
283.646 177.439 283.748 177.525 283.85 177.605 cv
283.701 177.81 li
284.363 178.296 li
284.51 178.091 li
284.619 178.161 284.734 178.226 284.846 178.293 cv
284.719 178.52 li
285.439 178.917 li
285.563 178.69 li
285.678 178.75 285.795 178.806 285.914 178.858 cv
285.822 179.098 li
286.586 179.4 li
286.68 179.159 li
286.803 179.203 286.922 179.251 287.047 179.285 cv
286.986 179.527 li
287.781 179.732 li
287.842 179.491 li
287.969 179.518 288.1 179.532 288.228 179.557 cv
288.195 179.813 li
289.012 179.915 li
289.041 179.659 li
289.17 179.67 289.299 179.674 289.43 179.68 cv
289.432 179.939 li
290.254 179.942 li
290.25 179.68 li
290.381 179.674 290.51 179.67 290.639 179.659 cv
290.674 179.915 li
291.49 179.814 li
291.455 179.557 li
291.582 179.532 291.715 179.518 291.836 179.491 cv
291.902 179.732 li
292.699 179.529 li
292.635 179.285 li
292.758 179.251 292.879 179.203 293.002 179.159 cv
293.1 179.398 li
293.861 179.098 li
293.764 178.858 li
293.885 178.806 294.002 178.75 294.119 178.69 cv
294.246 178.914 li
294.965 178.523 li
294.836 178.293 li
294.949 178.226 295.063 178.164 295.172 178.091 cv
295.318 178.293 li
295.986 177.814 li
295.832 177.605 li
295.935 177.525 296.033 177.443 296.135 177.357 cv
296.31 177.54 li
296.908 176.984 li
296.732 176.799 li
296.824 176.704 296.908 176.604 296.996 176.507 cv
297.197 176.671 li
297.721 176.041 li
297.52 175.877 li
297.598 175.773 297.68 175.67 297.754 175.562 cv
297.969 175.696 li
298.406 175.009 li
298.189 174.87 li
298.256 174.758 298.322 174.643 298.383 174.528 cv
298.613 174.635 li
298.961 173.896 li
298.736 173.79 li
298.787 173.669 298.826 173.545 298.869 173.422 cv
299.119 173.498 li
299.369 172.722 li
299.125 172.642 li
299.16 172.515 299.193 172.392 299.223 172.265 cv
299.478 172.308 li
299.629 171.509 li
299.373 171.458 li
299.393 171.328 299.42 171.202 299.432 171.07 cv
299.685 171.085 li
299.732 170.269 li
299.477 170.255 li
299.484 170.058 li
cp
.992157 .737255 .329412 rgb
f
297.273 170.058 mo
297.273 174.161 293.947 177.489 289.842 177.489 cv
285.738 177.489 282.41 174.161 282.41 170.058 cv
282.41 165.951 285.738 162.624 289.842 162.624 cv
293.947 162.624 297.273 165.951 297.273 170.058 cv
cp
.301961 .301961 .301961 rgb
f
297.025 170.058 mo
297.025 174.025 293.809 177.242 289.842 177.242 cv
285.873 177.242 282.656 174.025 282.656 170.058 cv
282.656 166.089 285.873 162.871 289.842 162.871 cv
293.809 162.871 297.025 166.089 297.025 170.058 cv
cp
1 1 1 rgb
f
290.402 174.909 mo
290.402 176.97 li
289.371 176.97 li
289.371 174.966 li
288.172 174.896 287.227 174.457 286.492 173.752 cv
287.199 172.99 li
287.834 173.597 288.609 173.979 289.641 173.979 cv
290.797 173.979 291.728 173.385 291.728 172.229 cv
291.728 171.254 291.262 170.832 289.641 170.338 cv
287.793 169.773 286.875 169.081 286.875 167.656 cv
286.875 166.358 287.891 165.384 289.371 165.244 cv
289.371 163.184 li
290.402 163.184 li
290.402 165.244 li
291.361 165.356 292.025 165.709 292.674 166.302 cv
291.982 167.05 li
291.332 166.442 290.656 166.203 289.852 166.203 cv
288.85 166.203 288.102 166.684 288.102 167.6 cv
288.102 168.433 288.498 168.827 290.189 169.335 cv
291.742 169.815 292.955 170.423 292.955 172.187 cv
292.955 173.611 292.025 174.669 290.402 174.909 cv
cp
.992157 .737255 .329412 rgb
f
424.601 84.6616 mo
424.601 93.4614 417.466 100.594 408.667 100.594 cv
399.868 100.594 392.735 93.4614 392.735 84.6616 cv
392.735 75.8589 399.868 68.73 408.667 68.73 cv
417.466 68.73 424.601 75.8589 424.601 84.6616 cv
cp
.301961 .301961 .301961 rgb
f
423.829 84.6616 mo
423.829 84.5571 423.817 84.4526 423.813 84.3569 cv
424.222 84.3237 li
424.138 83.0415 li
423.747 83.0708 li
423.727 82.8628 423.686 82.6626 423.653 82.4585 cv
424.054 82.3755 li
423.813 81.1177 li
423.415 81.189 li
423.37 80.9927 423.319 80.7935 423.265 80.5933 cv
423.649 80.4644 li
423.249 79.2485 li
422.862 79.3735 li
422.79 79.1772 422.733 78.978 422.653 78.7905 cv
423.003 78.6235 li
422.454 77.4624 li
422.095 77.6323 li
421.999 77.4448 421.899 77.27 421.792 77.0913 cv
422.134 76.8706 li
421.446 75.7876 li
421.108 76.0083 li
420.991 75.8335 420.862 75.6753 420.743 75.5093 cv
421.05 75.2427 li
420.229 74.2554 li
419.917 74.522 li
419.784 74.3638 419.644 74.2095 419.501 74.064 cv
419.772 73.7681 li
418.835 72.8862 li
418.56 73.186 li
418.401 73.0483 418.253 72.9194 418.085 72.7896 cv
418.319 72.4614 li
417.278 71.7036 li
417.048 72.0278 li
416.878 71.9155 416.698 71.811 416.524 71.7075 cv
416.716 71.3452 li
415.591 70.7251 li
415.395 71.0874 li
415.216 70.9956 415.03 70.9038 414.843 70.8208 cv
414.983 70.4419 li
413.784 69.9712 li
413.644 70.3462 li
413.446 70.2837 413.255 70.2085 413.06 70.146 cv
413.151 69.7632 li
411.907 69.4419 li
411.806 69.8257 li
411.614 69.7876 411.407 69.7583 411.202 69.7251 cv
411.249 69.3169 li
409.97 69.1548 li
409.925 69.5591 li
409.72 69.5425 409.513 69.5376 409.308 69.5259 cv
409.308 69.1138 li
408.017 69.1138 li
408.017 69.5259 li
407.813 69.5376 407.608 69.5425 407.405 69.5591 cv
407.36 69.1636 li
406.077 69.3169 li
406.132 69.7251 li
405.931 69.7583 405.724 69.7837 405.522 69.8257 cv
405.427 69.4419 li
404.179 69.7671 li
404.274 70.146 li
404.073 70.2085 403.892 70.2837 403.694 70.3462 cv
403.546 69.9712 li
402.343 70.4419 li
402.491 70.8208 li
402.304 70.9038 402.122 70.9956 401.938 71.0825 cv
401.747 70.7251 li
400.614 71.3491 li
400.81 71.7075 li
400.634 71.811 400.456 71.9155 400.284 72.0278 cv
400.052 71.7036 li
399.007 72.4653 li
399.243 72.7896 li
399.085 72.9194 398.927 73.0483 398.769 73.186 cv
398.499 72.8862 li
397.558 73.7729 li
397.833 74.064 li
397.686 74.2095 397.554 74.3638 397.417 74.5181 cv
397.099 74.2515 li
396.278 75.2505 li
396.597 75.5132 li
396.472 75.6753 396.347 75.8335 396.226 76.0005 cv
395.888 75.7837 li
395.192 76.8794 li
395.538 77.0913 li
395.435 77.27 395.329 77.4448 395.233 77.6284 cv
394.872 77.4536 li
394.327 78.6274 li
394.681 78.7944 li
394.601 78.978 394.538 79.1772 394.472 79.3687 cv
394.081 79.2437 li
393.685 80.4722 li
394.067 80.5972 li
394.015 80.7935 393.96 80.9888 393.915 81.189 cv
393.519 81.1138 li
393.276 82.3794 li
393.681 82.4585 li
393.651 82.6587 393.61 82.8579 393.585 83.0669 cv
393.194 83.0376 li
393.114 84.3286 li
393.519 84.353 li
393.511 84.4526 393.503 84.5571 393.503 84.6616 cv
393.503 84.7651 393.511 84.8657 393.519 84.9692 cv
393.114 84.9907 li
393.194 86.2808 li
393.585 86.2563 li
393.61 86.4556 393.651 86.6597 393.681 86.8599 cv
393.276 86.9351 li
393.519 88.2085 li
393.915 88.1294 li
393.96 88.3257 394.015 88.5259 394.067 88.7212 cv
393.685 88.8501 li
394.081 90.0786 li
394.472 89.9536 li
394.538 90.1411 394.601 90.3413 394.681 90.5239 cv
394.327 90.6909 li
394.872 91.8647 li
395.233 91.6938 li
395.329 91.8735 395.435 92.0542 395.538 92.229 cv
395.196 92.4419 li
395.888 93.5366 li
396.226 93.3159 li
396.347 93.4868 396.472 93.645 396.597 93.811 cv
396.278 94.0698 li
397.099 95.0649 li
397.417 94.8022 li
397.554 94.9565 397.686 95.1147 397.833 95.2563 cv
397.558 95.5474 li
398.499 96.4302 li
398.769 96.1353 li
398.927 96.2681 399.085 96.4058 399.243 96.5308 cv
399.011 96.8511 li
400.052 97.6177 li
400.284 97.2925 li
400.456 97.4048 400.634 97.5044 400.81 97.6128 cv
400.614 97.9673 li
401.747 98.5913 li
401.938 98.2378 li
402.122 98.3296 402.304 98.4165 402.491 98.5005 cv
402.347 98.8745 li
403.546 99.354 li
403.694 98.9751 li
403.892 99.0415 404.073 99.1167 404.274 99.1704 cv
404.179 99.5532 li
405.427 99.8745 li
405.522 99.4956 li
405.724 99.5366 405.927 99.562 406.132 99.5991 cv
406.077 99.9995 li
407.36 100.162 li
407.405 99.7612 li
407.608 99.7788 407.813 99.7827 408.017 99.7905 cv
408.022 100.199 li
409.311 100.203 li
409.308 99.7905 li
409.513 99.7827 409.716 99.7788 409.921 99.7612 cv
409.974 100.162 li
411.257 100.003 li
411.202 99.5991 li
411.403 99.562 411.61 99.5366 411.802 99.4956 cv
411.907 99.8745 li
413.159 99.5581 li
413.06 99.1704 li
413.251 99.1167 413.442 99.0415 413.638 98.9751 cv
413.788 99.3491 li
414.987 98.8745 li
414.833 98.5005 li
415.024 98.4165 415.208 98.3296 415.392 98.2378 cv
415.591 98.5874 li
416.724 97.9712 li
416.52 97.6128 li
416.694 97.5044 416.878 97.4087 417.048 97.2925 cv
417.278 97.6128 li
418.327 96.8599 li
418.085 96.5308 li
418.247 96.4058 418.401 96.2769 418.56 96.1392 cv
418.839 96.4263 li
419.78 95.5522 li
419.501 95.2603 li
419.644 95.1147 419.78 94.9565 419.917 94.8022 cv
420.229 95.061 li
421.054 94.0698 li
420.737 93.811 li
420.862 93.6489 420.991 93.4868 421.108 93.3159 cv
421.446 93.5288 li
422.134 92.4458 li
421.792 92.229 li
421.895 92.0542 421.999 91.8735 422.095 91.6938 cv
422.458 91.8608 li
423.003 90.6987 li
422.653 90.5327 li
422.733 90.3413 422.79 90.145 422.862 89.9536 cv
423.253 90.0747 li
423.649 88.8501 li
423.265 88.7251 li
423.319 88.5259 423.37 88.3335 423.415 88.1343 cv
423.817 88.2007 li
424.054 86.9429 li
423.653 86.8638 li
423.686 86.6597 423.727 86.4644 423.747 86.2563 cv
424.142 86.2769 li
424.218 84.9946 li
423.813 84.9731 li
423.817 84.8657 423.829 84.7651 423.829 84.6616 cv
cp
.992157 .737255 .329412 rgb
f
420.351 84.6616 mo
420.351 91.1157 415.12 96.3472 408.667 96.3472 cv
402.212 96.3472 396.979 91.1157 396.979 84.6616 cv
396.979 78.2075 402.212 72.9731 408.667 72.9731 cv
415.12 72.9731 420.351 78.2075 420.351 84.6616 cv
cp
.301961 .301961 .301961 rgb
f
419.964 84.6616 mo
419.964 90.9028 414.905 95.9604 408.667 95.9604 cv
402.425 95.9604 397.366 90.9028 397.366 84.6616 cv
397.366 78.4233 402.425 73.3647 408.667 73.3647 cv
414.905 73.3647 419.964 78.4233 419.964 84.6616 cv
cp
1 1 1 rgb
f
409.546 92.2915 mo
409.546 95.5308 li
407.925 95.5308 li
407.925 92.3794 li
406.04 92.271 404.558 91.5796 403.399 90.4722 cv
404.511 89.2729 li
405.511 90.2261 406.731 90.8257 408.351 90.8257 cv
410.171 90.8257 411.632 89.8931 411.632 88.0776 cv
411.632 86.5454 410.899 85.8794 408.351 85.105 cv
405.444 84.2134 403.999 83.1265 403.999 80.8872 cv
403.999 78.8462 405.599 77.314 407.925 77.0933 cv
407.925 73.854 li
409.546 73.854 li
409.546 77.0933 li
411.058 77.272 412.099 77.8267 413.118 78.7593 cv
412.032 79.9331 li
411.011 78.98 409.944 78.6011 408.683 78.6011 cv
407.104 78.6011 405.931 79.3589 405.931 80.7993 cv
405.931 82.1069 406.552 82.7271 409.212 83.5269 cv
411.657 84.2808 413.563 85.2378 413.563 88.0112 cv
413.563 90.2515 412.099 91.9126 409.546 92.2915 cv
cp
.992157 .737255 .329412 rgb
f
307.196 94.6943 mo
303.058 94.6943 297.013 94.0449 296.595 90.666 cv
296.099 86.6475 300.573 78.5273 300.573 78.5273 cv
307.196 78.5273 li
313.819 78.5273 li
313.819 78.5273 318.292 86.6475 317.796 90.666 cv
317.38 94.0449 311.335 94.6943 307.196 94.6943 cv
.619608 .839216 .937255 rgb
f
313.819 77.9526 mo
300.573 77.9526 li
300.573 76.7236 li
300.573 76.1597 301.03 75.7026 301.594 75.7026 cv
304.188 75.7026 li
304.186 75.7036 li
305.093 75.7036 li
305.094 75.7026 li
309.966 75.7026 li
309.968 75.7036 li
310.874 75.7036 li
310.873 75.7026 li
312.799 75.7026 li
313.362 75.7026 313.819 76.1597 313.819 76.7236 cv
313.819 77.9526 li
f
305.093 75.7036 mo
304.186 75.7036 li
304.188 75.7026 li
307.077 73.5005 li
307.53 73.8459 li
305.094 75.7026 li
305.093 75.7036 li
307.983 73.5005 mo
307.53 73.1551 li
309.382 71.7439 li
309.463 71.9127 309.589 72.0559 309.744 72.1584 cv
307.983 73.5005 li
f
310.311 72.3286 mo
310.102 72.3286 309.907 72.266 309.744 72.1584 cv
309.589 72.0559 309.463 71.9127 309.382 71.7439 cv
309.317 71.6088 309.28 71.4573 309.28 71.2974 cv
309.28 70.728 309.743 70.2661 310.311 70.2661 cv
310.882 70.2661 311.343 70.728 311.343 71.2974 cv
311.343 71.8667 310.882 72.3286 310.311 72.3286 cv
f
310.874 75.7036 mo
309.968 75.7036 li
309.966 75.7026 li
307.53 73.8459 li
307.077 73.5005 li
305.317 72.1587 li
305.472 72.0562 305.598 71.9129 305.679 71.744 cv
307.53 73.1551 li
307.983 73.5005 li
310.873 75.7026 li
310.874 75.7036 li
f
304.749 72.3286 mo
304.181 72.3286 303.718 71.8667 303.718 71.2974 cv
303.718 70.728 304.181 70.2661 304.749 70.2661 cv
305.319 70.2661 305.78 70.728 305.78 71.2974 cv
305.78 71.4574 305.744 71.6089 305.679 71.744 cv
305.598 71.9129 305.472 72.0562 305.317 72.1587 cv
305.154 72.2661 304.959 72.3286 304.749 72.3286 cv
f
350.334 140.334 mo
325.054 140.334 li
325.054 137.367 li
350.334 137.367 li
350.334 140.334 li
cp
.992157 .737255 .329412 rgb
f
327.271 140.334 mo
326.477 140.334 li
326.477 137.367 li
327.271 137.367 li
327.271 140.334 li
cp
.854902 .639216 .290196 rgb
f
330.363 140.334 mo
329.568 140.334 li
329.568 137.367 li
330.363 137.367 li
330.363 140.334 li
cp
f
333.454 140.334 mo
332.659 140.334 li
332.659 137.367 li
333.454 137.367 li
333.454 140.334 li
cp
f
336.545 140.334 mo
335.751 140.334 li
335.751 137.367 li
336.545 137.367 li
336.545 140.334 li
cp
f
339.636 140.334 mo
338.843 140.334 li
338.843 137.367 li
339.636 137.367 li
339.636 140.334 li
cp
f
342.727 140.334 mo
341.934 140.334 li
341.934 137.367 li
342.727 137.367 li
342.727 140.334 li
cp
f
345.818 140.334 mo
345.024 140.334 li
345.024 137.367 li
345.818 137.367 li
345.818 140.334 li
cp
f
348.91 140.334 mo
348.116 140.334 li
348.116 137.367 li
348.91 137.367 li
348.91 140.334 li
cp
f
349.935 134.398 mo
324.656 134.398 li
324.656 131.431 li
349.935 131.431 li
349.935 134.398 li
cp
.992157 .737255 .329412 rgb
f
326.874 134.398 mo
326.079 134.398 li
326.079 131.431 li
326.874 131.431 li
326.874 134.398 li
cp
.854902 .639216 .290196 rgb
f
329.966 134.398 mo
329.171 134.398 li
329.171 131.431 li
329.966 131.431 li
329.966 134.398 li
cp
f
333.058 134.398 mo
332.263 134.398 li
332.263 131.431 li
333.058 131.431 li
333.058 134.398 li
cp
f
336.148 134.398 mo
335.353 134.398 li
335.353 131.431 li
336.148 131.431 li
336.148 134.398 li
cp
f
339.239 134.398 mo
338.445 134.398 li
338.445 131.431 li
339.239 131.431 li
339.239 134.398 li
cp
f
342.33 134.398 mo
341.536 134.398 li
341.536 131.431 li
342.33 131.431 li
342.33 134.398 li
cp
f
345.422 134.398 mo
344.627 134.398 li
344.627 131.431 li
345.422 131.431 li
345.422 134.398 li
cp
f
348.513 134.398 mo
347.718 134.398 li
347.718 131.431 li
348.513 131.431 li
348.513 134.398 li
cp
f
350.852 128.462 mo
325.573 128.462 li
325.573 125.494 li
350.852 125.494 li
350.852 128.462 li
cp
.992157 .737255 .329412 rgb
f
327.791 128.462 mo
326.996 128.462 li
326.996 125.494 li
327.791 125.494 li
327.791 128.462 li
cp
.854902 .639216 .290196 rgb
f
330.882 128.462 mo
330.087 128.462 li
330.087 125.494 li
330.882 125.494 li
330.882 128.462 li
cp
f
333.973 128.462 mo
333.179 128.462 li
333.179 125.494 li
333.973 125.494 li
333.973 128.462 li
cp
f
337.063 128.462 mo
336.27 128.462 li
336.27 125.494 li
337.063 125.494 li
337.063 128.462 li
cp
f
340.155 128.462 mo
339.361 128.462 li
339.361 125.494 li
340.155 125.494 li
340.155 128.462 li
cp
f
343.246 128.462 mo
342.452 128.462 li
342.452 125.494 li
343.246 125.494 li
343.246 128.462 li
cp
f
346.337 128.462 mo
345.544 128.462 li
345.544 125.494 li
346.337 125.494 li
346.337 128.462 li
cp
f
349.429 128.462 mo
348.635 128.462 li
348.635 125.494 li
349.429 125.494 li
349.429 128.462 li
cp
f
351.879 125.494 mo
326.599 125.494 li
326.599 122.526 li
351.879 122.526 li
351.879 125.494 li
cp
.992157 .737255 .329412 rgb
f
328.817 125.494 mo
328.022 125.494 li
328.022 122.526 li
328.817 122.526 li
328.817 125.494 li
cp
.854902 .639216 .290196 rgb
f
331.908 125.494 mo
331.114 125.494 li
331.114 122.526 li
331.908 122.526 li
331.908 125.494 li
cp
f
334.999 125.494 mo
334.205 125.494 li
334.205 122.526 li
334.999 122.526 li
334.999 125.494 li
cp
f
338.091 125.494 mo
337.297 125.494 li
337.297 122.526 li
338.091 122.526 li
338.091 125.494 li
cp
f
341.182 125.494 mo
340.387 125.494 li
340.387 122.526 li
341.182 122.526 li
341.182 125.494 li
cp
f
344.272 125.494 mo
343.478 125.494 li
343.478 122.526 li
344.272 122.526 li
344.272 125.494 li
cp
f
347.363 125.494 mo
346.57 125.494 li
346.57 122.526 li
347.363 122.526 li
347.363 125.494 li
cp
f
350.455 125.494 mo
349.661 125.494 li
349.661 122.526 li
350.455 122.526 li
350.455 125.494 li
cp
f
348.392 137.367 mo
323.111 137.367 li
323.111 134.398 li
348.392 134.398 li
348.392 137.367 li
cp
.921569 .686275 .309804 rgb
f
325.328 137.367 mo
324.535 137.367 li
324.535 134.398 li
325.328 134.398 li
325.328 137.367 li
cp
.854902 .639216 .290196 rgb
f
328.42 137.367 mo
327.626 137.367 li
327.626 134.398 li
328.42 134.398 li
328.42 137.367 li
cp
f
331.512 137.367 mo
330.717 137.367 li
330.717 134.398 li
331.512 134.398 li
331.512 137.367 li
cp
f
334.602 137.367 mo
333.809 137.367 li
333.809 134.398 li
334.602 134.398 li
334.602 137.367 li
cp
f
337.693 137.367 mo
336.899 137.367 li
336.899 134.398 li
337.693 134.398 li
337.693 137.367 li
cp
f
340.785 137.367 mo
339.99 137.367 li
339.99 134.398 li
340.785 134.398 li
340.785 137.367 li
cp
f
343.876 137.367 mo
343.082 137.367 li
343.082 134.398 li
343.876 134.398 li
343.876 137.367 li
cp
f
346.967 137.367 mo
346.174 137.367 li
346.174 134.398 li
346.967 134.398 li
346.967 137.367 li
cp
f
352.276 131.431 mo
326.996 131.431 li
326.996 128.462 li
352.276 128.462 li
352.276 131.431 li
cp
.921569 .686275 .309804 rgb
f
329.214 131.431 mo
328.42 131.431 li
328.42 128.462 li
329.214 128.462 li
329.214 131.431 li
cp
.854902 .639216 .290196 rgb
f
332.306 131.431 mo
331.512 131.431 li
331.512 128.462 li
332.306 128.462 li
332.306 131.431 li
cp
f
335.397 131.431 mo
334.602 131.431 li
334.602 128.462 li
335.397 128.462 li
335.397 131.431 li
cp
f
338.488 131.431 mo
337.693 131.431 li
337.693 128.462 li
338.488 128.462 li
338.488 131.431 li
cp
f
341.579 131.431 mo
340.785 131.431 li
340.785 128.462 li
341.579 128.462 li
341.579 131.431 li
cp
f
344.67 131.431 mo
343.876 131.431 li
343.876 128.462 li
344.67 128.462 li
344.67 131.431 li
cp
f
347.762 131.431 mo
346.967 131.431 li
346.967 128.462 li
347.762 128.462 li
347.762 131.431 li
cp
f
350.852 131.431 mo
350.058 131.431 li
350.058 128.462 li
350.852 128.462 li
350.852 131.431 li
cp
f
358.744 140.334 mo
384.023 140.334 li
384.023 137.367 li
358.744 137.367 li
358.744 140.334 li
cp
.992157 .737255 .329412 rgb
f
381.806 140.334 mo
382.599 140.334 li
382.599 137.367 li
381.806 137.367 li
381.806 140.334 li
cp
.854902 .639216 .290196 rgb
f
378.715 140.334 mo
379.508 140.334 li
379.508 137.367 li
378.715 137.367 li
378.715 140.334 li
cp
f
375.623 140.334 mo
376.417 140.334 li
376.417 137.367 li
375.623 137.367 li
375.623 140.334 li
cp
f
372.532 140.334 mo
373.326 140.334 li
373.326 137.367 li
372.532 137.367 li
372.532 140.334 li
cp
f
369.44 140.334 mo
370.234 140.334 li
370.234 137.367 li
369.44 137.367 li
369.44 140.334 li
cp
f
366.35 140.334 mo
367.144 140.334 li
367.144 137.367 li
366.35 137.367 li
366.35 140.334 li
cp
f
363.258 140.334 mo
364.053 140.334 li
364.053 137.367 li
363.258 137.367 li
363.258 140.334 li
cp
f
360.167 140.334 mo
360.962 140.334 li
360.962 137.367 li
360.167 137.367 li
360.167 140.334 li
cp
f
358.311 134.398 mo
383.591 134.398 li
383.591 131.431 li
358.311 131.431 li
358.311 134.398 li
cp
.992157 .737255 .329412 rgb
f
381.374 134.398 mo
382.168 134.398 li
382.168 131.431 li
381.374 131.431 li
381.374 134.398 li
cp
.854902 .639216 .290196 rgb
f
378.282 134.398 mo
379.077 134.398 li
379.077 131.431 li
378.282 131.431 li
378.282 134.398 li
cp
f
375.191 134.398 mo
375.985 134.398 li
375.985 131.431 li
375.191 131.431 li
375.191 134.398 li
cp
f
372.101 134.398 mo
372.895 134.398 li
372.895 131.431 li
372.101 131.431 li
372.101 134.398 li
cp
f
369.009 134.398 mo
369.804 134.398 li
369.804 131.431 li
369.009 131.431 li
369.009 134.398 li
cp
f
365.918 134.398 mo
366.713 134.398 li
366.713 131.431 li
365.918 131.431 li
365.918 134.398 li
cp
f
362.827 134.398 mo
363.62 134.398 li
363.62 131.431 li
362.827 131.431 li
362.827 134.398 li
cp
f
359.736 134.398 mo
360.529 134.398 li
360.529 131.431 li
359.736 131.431 li
359.736 134.398 li
cp
f
356.567 128.462 mo
381.847 128.462 li
381.847 125.494 li
356.567 125.494 li
356.567 128.462 li
cp
.992157 .737255 .329412 rgb
f
379.629 128.462 mo
380.423 128.462 li
380.423 125.494 li
379.629 125.494 li
379.629 128.462 li
cp
.854902 .639216 .290196 rgb
f
376.538 128.462 mo
377.331 128.462 li
377.331 125.494 li
376.538 125.494 li
376.538 128.462 li
cp
f
373.447 128.462 mo
374.24 128.462 li
374.24 125.494 li
373.447 125.494 li
373.447 128.462 li
cp
f
370.354 128.462 mo
371.149 128.462 li
371.149 125.494 li
370.354 125.494 li
370.354 128.462 li
cp
f
367.264 128.462 mo
368.059 128.462 li
368.059 125.494 li
367.264 125.494 li
367.264 128.462 li
cp
f
364.173 128.462 mo
364.967 128.462 li
364.967 125.494 li
364.173 125.494 li
364.173 128.462 li
cp
f
361.082 128.462 mo
361.876 128.462 li
361.876 125.494 li
361.082 125.494 li
361.082 128.462 li
cp
f
357.99 128.462 mo
358.785 128.462 li
358.785 125.494 li
357.99 125.494 li
357.99 128.462 li
cp
f
358.855 125.494 mo
384.136 125.494 li
384.136 122.526 li
358.855 122.526 li
358.855 125.494 li
cp
.992157 .737255 .329412 rgb
f
381.918 125.494 mo
382.712 125.494 li
382.712 122.526 li
381.918 122.526 li
381.918 125.494 li
cp
.854902 .639216 .290196 rgb
f
378.826 125.494 mo
379.621 125.494 li
379.621 122.526 li
378.826 122.526 li
378.826 125.494 li
cp
f
375.735 125.494 mo
376.53 125.494 li
376.53 122.526 li
375.735 122.526 li
375.735 125.494 li
cp
f
372.645 125.494 mo
373.438 125.494 li
373.438 122.526 li
372.645 122.526 li
372.645 125.494 li
cp
f
369.554 125.494 mo
370.347 125.494 li
370.347 122.526 li
369.554 122.526 li
369.554 125.494 li
cp
f
366.462 125.494 mo
367.256 125.494 li
367.256 122.526 li
366.462 122.526 li
366.462 125.494 li
cp
f
363.371 125.494 mo
364.165 125.494 li
364.165 122.526 li
363.371 122.526 li
363.371 125.494 li
cp
f
360.28 125.494 mo
361.073 125.494 li
361.073 122.526 li
360.28 122.526 li
360.28 125.494 li
cp
f
358.311 116.59 mo
383.591 116.59 li
383.591 113.622 li
358.311 113.622 li
358.311 116.59 li
cp
.992157 .737255 .329412 rgb
f
381.374 116.59 mo
382.168 116.59 li
382.168 113.622 li
381.374 113.622 li
381.374 116.59 li
cp
.854902 .639216 .290196 rgb
f
378.282 116.59 mo
379.077 116.59 li
379.077 113.622 li
378.282 113.622 li
378.282 116.59 li
cp
f
375.191 116.59 mo
375.985 116.59 li
375.985 113.622 li
375.191 113.622 li
375.191 116.59 li
cp
f
372.101 116.59 mo
372.895 116.59 li
372.895 113.622 li
372.101 113.622 li
372.101 116.59 li
cp
f
369.009 116.59 mo
369.804 116.59 li
369.804 113.622 li
369.009 113.622 li
369.009 116.59 li
cp
f
365.918 116.59 mo
366.713 116.59 li
366.713 113.622 li
365.918 113.622 li
365.918 116.59 li
cp
f
362.827 116.59 mo
363.62 116.59 li
363.62 113.622 li
362.827 113.622 li
362.827 116.59 li
cp
f
359.736 116.59 mo
360.529 116.59 li
360.529 113.622 li
359.736 113.622 li
359.736 116.59 li
cp
f
359.857 137.367 mo
385.137 137.367 li
385.137 134.398 li
359.857 134.398 li
359.857 137.367 li
cp
.921569 .686275 .309804 rgb
f
382.919 137.367 mo
383.714 137.367 li
383.714 134.398 li
382.919 134.398 li
382.919 137.367 li
cp
.854902 .639216 .290196 rgb
f
379.828 137.367 mo
380.622 137.367 li
380.622 134.398 li
379.828 134.398 li
379.828 137.367 li
cp
f
376.737 137.367 mo
377.53 137.367 li
377.53 134.398 li
376.737 134.398 li
376.737 137.367 li
cp
f
373.645 137.367 mo
374.439 137.367 li
374.439 134.398 li
373.645 134.398 li
373.645 137.367 li
cp
f
370.555 137.367 mo
371.349 137.367 li
371.349 134.398 li
370.555 134.398 li
370.555 137.367 li
cp
f
367.464 137.367 mo
368.257 137.367 li
368.257 134.398 li
367.464 134.398 li
367.464 137.367 li
cp
f
364.373 137.367 mo
365.166 137.367 li
365.166 134.398 li
364.373 134.398 li
364.373 137.367 li
cp
f
361.28 137.367 mo
362.075 137.367 li
362.075 134.398 li
361.28 134.398 li
361.28 137.367 li
cp
f
358.459 131.431 mo
383.738 131.431 li
383.738 128.462 li
358.459 128.462 li
358.459 131.431 li
cp
.921569 .686275 .309804 rgb
f
381.52 131.431 mo
382.314 131.431 li
382.314 128.462 li
381.52 128.462 li
381.52 131.431 li
cp
.854902 .639216 .290196 rgb
f
378.429 131.431 mo
379.224 131.431 li
379.224 128.462 li
378.429 128.462 li
378.429 131.431 li
cp
f
375.338 131.431 mo
376.132 131.431 li
376.132 128.462 li
375.338 128.462 li
375.338 131.431 li
cp
f
372.247 131.431 mo
373.041 131.431 li
373.041 128.462 li
372.247 128.462 li
372.247 131.431 li
cp
f
369.155 131.431 mo
369.95 131.431 li
369.95 128.462 li
369.155 128.462 li
369.155 131.431 li
cp
f
366.064 131.431 mo
366.859 131.431 li
366.859 128.462 li
366.064 128.462 li
366.064 131.431 li
cp
f
362.974 131.431 mo
363.768 131.431 li
363.768 128.462 li
362.974 128.462 li
362.974 131.431 li
cp
f
359.883 131.431 mo
360.676 131.431 li
360.676 128.462 li
359.883 128.462 li
359.883 131.431 li
cp
f
360.402 119.559 mo
385.682 119.559 li
385.682 116.59 li
360.402 116.59 li
360.402 119.559 li
cp
.921569 .686275 .309804 rgb
f
383.464 119.559 mo
384.258 119.559 li
384.258 116.59 li
383.464 116.59 li
383.464 119.559 li
cp
.854902 .639216 .290196 rgb
f
380.373 119.559 mo
381.167 119.559 li
381.167 116.59 li
380.373 116.59 li
380.373 119.559 li
cp
f
377.282 119.559 mo
378.075 119.559 li
378.075 116.59 li
377.282 116.59 li
377.282 119.559 li
cp
f
374.189 119.559 mo
374.984 119.559 li
374.984 116.59 li
374.189 116.59 li
374.189 119.559 li
cp
f
371.099 119.559 mo
371.894 119.559 li
371.894 116.59 li
371.099 116.59 li
371.099 119.559 li
cp
f
368.008 119.559 mo
368.802 119.559 li
368.802 116.59 li
368.008 116.59 li
368.008 119.559 li
cp
f
364.917 119.559 mo
365.711 119.559 li
365.711 116.59 li
364.917 116.59 li
364.917 119.559 li
cp
f
361.825 119.559 mo
362.62 119.559 li
362.62 116.59 li
361.825 116.59 li
361.825 119.559 li
cp
f
357.311 122.526 mo
382.591 122.526 li
382.591 119.558 li
357.311 119.558 li
357.311 122.526 li
cp
.921569 .686275 .309804 rgb
f
380.373 122.526 mo
381.167 122.526 li
381.167 119.558 li
380.373 119.558 li
380.373 122.526 li
cp
.854902 .639216 .290196 rgb
f
377.282 122.526 mo
378.075 122.526 li
378.075 119.558 li
377.282 119.558 li
377.282 122.526 li
cp
f
374.189 122.526 mo
374.984 122.526 li
374.984 119.558 li
374.189 119.558 li
374.189 122.526 li
cp
f
371.099 122.526 mo
371.894 122.526 li
371.894 119.558 li
371.099 119.558 li
371.099 122.526 li
cp
f
368.008 122.526 mo
368.802 122.526 li
368.802 119.558 li
368.008 119.558 li
368.008 122.526 li
cp
f
364.917 122.526 mo
365.711 122.526 li
365.711 119.558 li
364.917 119.558 li
364.917 122.526 li
cp
f
361.825 122.526 mo
362.62 122.526 li
362.62 119.558 li
361.825 119.558 li
361.825 122.526 li
cp
f
358.734 122.526 mo
359.529 122.526 li
359.529 119.558 li
358.734 119.558 li
358.734 122.526 li
cp
f
358.855 110.653 mo
384.136 110.653 li
384.136 107.686 li
358.855 107.686 li
358.855 110.653 li
cp
.992157 .737255 .329412 rgb
f
381.918 110.653 mo
382.712 110.653 li
382.712 107.686 li
381.918 107.686 li
381.918 110.653 li
cp
.854902 .639216 .290196 rgb
f
378.826 110.653 mo
379.621 110.653 li
379.621 107.686 li
378.826 107.686 li
378.826 110.653 li
cp
f
375.735 110.653 mo
376.53 110.653 li
376.53 107.686 li
375.735 107.686 li
375.735 110.653 li
cp
f
372.645 110.653 mo
373.438 110.653 li
373.438 107.686 li
372.645 107.686 li
372.645 110.653 li
cp
f
369.554 110.653 mo
370.347 110.653 li
370.347 107.686 li
369.554 107.686 li
369.554 110.653 li
cp
f
366.462 110.653 mo
367.256 110.653 li
367.256 107.686 li
366.462 107.686 li
366.462 110.653 li
cp
f
363.371 110.653 mo
364.165 110.653 li
364.165 107.686 li
363.371 107.686 li
363.371 110.653 li
cp
f
360.28 110.653 mo
361.073 110.653 li
361.073 107.686 li
360.28 107.686 li
360.28 110.653 li
cp
f
358.311 101.75 mo
383.591 101.75 li
383.591 98.7822 li
358.311 98.7822 li
358.311 101.75 li
cp
.992157 .737255 .329412 rgb
f
381.374 101.75 mo
382.168 101.75 li
382.168 98.7822 li
381.374 98.7822 li
381.374 101.75 li
cp
.854902 .639216 .290196 rgb
f
378.282 101.75 mo
379.077 101.75 li
379.077 98.7822 li
378.282 98.7822 li
378.282 101.75 li
cp
f
375.191 101.75 mo
375.985 101.75 li
375.985 98.7822 li
375.191 98.7822 li
375.191 101.75 li
cp
f
372.101 101.75 mo
372.895 101.75 li
372.895 98.7822 li
372.101 98.7822 li
372.101 101.75 li
cp
f
369.009 101.75 mo
369.804 101.75 li
369.804 98.7822 li
369.009 98.7822 li
369.009 101.75 li
cp
f
365.918 101.75 mo
366.713 101.75 li
366.713 98.7822 li
365.918 98.7822 li
365.918 101.75 li
cp
f
362.827 101.75 mo
363.62 101.75 li
363.62 98.7822 li
362.827 98.7822 li
362.827 101.75 li
cp
f
359.736 101.75 mo
360.529 101.75 li
360.529 98.7822 li
359.736 98.7822 li
359.736 101.75 li
cp
f
360.402 104.718 mo
385.682 104.718 li
385.682 101.75 li
360.402 101.75 li
360.402 104.718 li
cp
.921569 .686275 .309804 rgb
f
383.464 104.718 mo
384.258 104.718 li
384.258 101.75 li
383.464 101.75 li
383.464 104.718 li
cp
.854902 .639216 .290196 rgb
f
380.373 104.718 mo
381.167 104.718 li
381.167 101.75 li
380.373 101.75 li
380.373 104.718 li
cp
f
377.282 104.718 mo
378.075 104.718 li
378.075 101.75 li
377.282 101.75 li
377.282 104.718 li
cp
f
374.189 104.718 mo
374.984 104.718 li
374.984 101.75 li
374.189 101.75 li
374.189 104.718 li
cp
f
371.099 104.718 mo
371.894 104.718 li
371.894 101.75 li
371.099 101.75 li
371.099 104.718 li
cp
f
368.008 104.718 mo
368.802 104.718 li
368.802 101.75 li
368.008 101.75 li
368.008 104.718 li
cp
f
364.917 104.718 mo
365.711 104.718 li
365.711 101.75 li
364.917 101.75 li
364.917 104.718 li
cp
f
361.825 104.718 mo
362.62 104.718 li
362.62 101.75 li
361.825 101.75 li
361.825 104.718 li
cp
f
357.311 107.686 mo
382.591 107.686 li
382.591 104.718 li
357.311 104.718 li
357.311 107.686 li
cp
.921569 .686275 .309804 rgb
f
380.373 107.686 mo
381.167 107.686 li
381.167 104.718 li
380.373 104.718 li
380.373 107.686 li
cp
.854902 .639216 .290196 rgb
f
377.282 107.686 mo
378.075 107.686 li
378.075 104.718 li
377.282 104.718 li
377.282 107.686 li
cp
f
374.189 107.686 mo
374.984 107.686 li
374.984 104.718 li
374.189 104.718 li
374.189 107.686 li
cp
f
371.099 107.686 mo
371.894 107.686 li
371.894 104.718 li
371.099 104.718 li
371.099 107.686 li
cp
f
368.008 107.686 mo
368.802 107.686 li
368.802 104.718 li
368.008 104.718 li
368.008 107.686 li
cp
f
364.917 107.686 mo
365.711 107.686 li
365.711 104.718 li
364.917 104.718 li
364.917 107.686 li
cp
f
361.825 107.686 mo
362.62 107.686 li
362.62 104.718 li
361.825 104.718 li
361.825 107.686 li
cp
f
358.734 107.686 mo
359.529 107.686 li
359.529 104.718 li
358.734 104.718 li
358.734 107.686 li
cp
f
356.162 113.622 mo
381.442 113.622 li
381.442 110.653 li
356.162 110.653 li
356.162 113.622 li
cp
.921569 .686275 .309804 rgb
f
379.225 113.622 mo
380.018 113.622 li
380.018 110.653 li
379.225 110.653 li
379.225 113.622 li
cp
.854902 .639216 .290196 rgb
f
376.133 113.622 mo
376.927 113.622 li
376.927 110.653 li
376.133 110.653 li
376.133 113.622 li
cp
f
373.042 113.622 mo
373.836 113.622 li
373.836 110.653 li
373.042 110.653 li
373.042 113.622 li
cp
f
369.951 113.622 mo
370.744 113.622 li
370.744 110.653 li
369.951 110.653 li
369.951 113.622 li
cp
f
366.859 113.622 mo
367.653 113.622 li
367.653 110.653 li
366.859 110.653 li
366.859 113.622 li
cp
f
363.768 113.622 mo
364.563 113.622 li
364.563 110.653 li
363.768 110.653 li
363.768 113.622 li
cp
f
360.677 113.622 mo
361.472 113.622 li
361.472 110.653 li
360.677 110.653 li
360.677 113.622 li
cp
f
357.586 113.622 mo
358.38 113.622 li
358.38 110.653 li
357.586 110.653 li
357.586 113.622 li
cp
f
329.664 119.559 mo
354.944 119.559 li
354.944 116.59 li
329.664 116.59 li
329.664 119.559 li
cp
.992157 .737255 .329412 rgb
f
352.727 119.559 mo
353.52 119.559 li
353.52 116.59 li
352.727 116.59 li
352.727 119.559 li
cp
.854902 .639216 .290196 rgb
f
349.635 119.559 mo
350.43 119.559 li
350.43 116.59 li
349.635 116.59 li
349.635 119.559 li
cp
f
346.544 119.559 mo
347.338 119.559 li
347.338 116.59 li
346.544 116.59 li
346.544 119.559 li
cp
f
343.453 119.559 mo
344.246 119.559 li
344.246 116.59 li
343.453 116.59 li
343.453 119.559 li
cp
f
340.362 119.559 mo
341.155 119.559 li
341.155 116.59 li
340.362 116.59 li
340.362 119.559 li
cp
f
337.27 119.559 mo
338.064 119.559 li
338.064 116.59 li
337.27 116.59 li
337.27 119.559 li
cp
f
334.18 119.559 mo
334.974 119.559 li
334.974 116.59 li
334.18 116.59 li
334.18 119.559 li
cp
f
331.089 119.559 mo
331.882 119.559 li
331.882 116.59 li
331.089 116.59 li
331.089 119.559 li
cp
f
326.97 122.526 mo
352.251 122.526 li
352.251 119.559 li
326.97 119.559 li
326.97 122.526 li
cp
.921569 .686275 .309804 rgb
f
350.033 122.526 mo
350.826 122.526 li
350.826 119.559 li
350.033 119.559 li
350.033 122.526 li
cp
.854902 .639216 .290196 rgb
f
346.941 122.526 mo
347.735 122.526 li
347.735 119.559 li
346.941 119.559 li
346.941 122.526 li
cp
f
343.85 122.526 mo
344.645 122.526 li
344.645 119.559 li
343.85 119.559 li
343.85 122.526 li
cp
f
340.759 122.526 mo
341.553 122.526 li
341.553 119.559 li
340.759 119.559 li
340.759 122.526 li
cp
f
337.669 122.526 mo
338.462 122.526 li
338.462 119.559 li
337.669 119.559 li
337.669 122.526 li
cp
f
334.576 122.526 mo
335.371 122.526 li
335.371 119.559 li
334.576 119.559 li
334.576 122.526 li
cp
f
331.485 122.526 mo
332.28 122.526 li
332.28 119.559 li
331.485 119.559 li
331.485 122.526 li
cp
f
328.395 122.526 mo
329.188 122.526 li
329.188 119.559 li
328.395 119.559 li
328.395 122.526 li
cp
f
293.406 140.334 mo
318.686 140.334 li
318.686 137.367 li
293.406 137.367 li
293.406 140.334 li
cp
.992157 .737255 .329412 rgb
f
316.468 140.334 mo
317.263 140.334 li
317.263 137.367 li
316.468 137.367 li
316.468 140.334 li
cp
.854902 .639216 .290196 rgb
f
313.377 140.334 mo
314.172 140.334 li
314.172 137.367 li
313.377 137.367 li
313.377 140.334 li
cp
f
310.286 140.334 mo
311.081 140.334 li
311.081 137.367 li
310.286 137.367 li
310.286 140.334 li
cp
f
307.195 140.334 mo
307.989 140.334 li
307.989 137.367 li
307.195 137.367 li
307.195 140.334 li
cp
f
304.104 140.334 mo
304.898 140.334 li
304.898 137.367 li
304.104 137.367 li
304.104 140.334 li
cp
f
301.012 140.334 mo
301.807 140.334 li
301.807 137.367 li
301.012 137.367 li
301.012 140.334 li
cp
f
297.921 140.334 mo
298.716 140.334 li
298.716 137.367 li
297.921 137.367 li
297.921 140.334 li
cp
f
294.83 140.334 mo
295.624 140.334 li
295.624 137.367 li
294.83 137.367 li
294.83 140.334 li
cp
f
387.977 98.7822 mo
362.698 98.7822 li
362.698 95.8135 li
387.977 95.8135 li
387.977 98.7822 li
cp
.992157 .737255 .329412 rgb
f
364.916 98.7822 mo
364.122 98.7822 li
364.122 95.8135 li
364.916 95.8135 li
364.916 98.7822 li
cp
.854902 .639216 .290196 rgb
f
368.007 98.7822 mo
367.213 98.7822 li
367.213 95.8135 li
368.007 95.8135 li
368.007 98.7822 li
cp
f
371.099 98.7822 mo
370.305 98.7822 li
370.305 95.8135 li
371.099 95.8135 li
371.099 98.7822 li
cp
f
374.189 98.7822 mo
373.395 98.7822 li
373.395 95.8135 li
374.189 95.8135 li
374.189 98.7822 li
cp
f
377.281 98.7822 mo
376.486 98.7822 li
376.486 95.8135 li
377.281 95.8135 li
377.281 98.7822 li
cp
f
380.372 98.7822 mo
379.577 98.7822 li
379.577 95.8135 li
380.372 95.8135 li
380.372 98.7822 li
cp
f
383.463 98.7822 mo
382.669 98.7822 li
382.669 95.8135 li
383.463 95.8135 li
383.463 98.7822 li
cp
f
386.554 98.7822 mo
385.76 98.7822 li
385.76 95.8135 li
386.554 95.8135 li
386.554 98.7822 li
cp
f
320.232 137.367 mo
294.953 137.367 li
294.953 134.399 li
320.232 134.399 li
320.232 137.367 li
cp
.921569 .686275 .309804 rgb
f
297.17 137.367 mo
296.376 137.367 li
296.376 134.399 li
297.17 134.399 li
297.17 137.367 li
cp
.854902 .639216 .290196 rgb
f
300.261 137.367 mo
299.468 137.367 li
299.468 134.399 li
300.261 134.399 li
300.261 137.367 li
cp
f
303.352 137.367 mo
302.559 137.367 li
302.559 134.399 li
303.352 134.399 li
303.352 137.367 li
cp
f
306.444 137.367 mo
305.649 137.367 li
305.649 134.399 li
306.444 134.399 li
306.444 137.367 li
cp
f
309.535 137.367 mo
308.74 137.367 li
308.74 134.399 li
309.535 134.399 li
309.535 137.367 li
cp
f
312.626 137.367 mo
311.832 137.367 li
311.832 134.399 li
312.626 134.399 li
312.626 137.367 li
cp
f
315.717 137.367 mo
314.923 137.367 li
314.923 134.399 li
315.717 134.399 li
315.717 137.367 li
cp
f
318.809 137.367 mo
318.014 137.367 li
318.014 134.399 li
318.809 134.399 li
318.809 137.367 li
cp
f
368.757 84.666 mo
360.215 86.2705 li
360.866 87.4443 li
290.497 126.513 li
291.855 128.962 li
362.227 89.8936 li
362.878 91.0664 li
368.757 84.666 li
cp
1 1 1 rgb
f
276.258 92.3281 mo
276.258 87.4971 li
281.09 87.4971 li
281.09 92.3281 li
276.258 92.3281 li
cp
281.09 97.2231 mo
276.258 97.2231 li
276.258 92.3916 li
281.09 92.3916 li
281.09 97.2231 li
cp
281.09 102.118 mo
276.258 102.118 li
276.258 97.2866 li
281.09 97.2866 li
281.09 102.118 li
cp
281.09 107.014 mo
276.258 107.014 li
276.258 102.182 li
281.09 102.182 li
281.09 107.014 li
cp
276.193 107.014 mo
271.363 107.014 li
271.363 102.182 li
276.193 102.182 li
276.193 107.014 li
cp
271.299 107.014 mo
266.469 107.014 li
266.469 102.182 li
271.299 102.182 li
271.299 107.014 li
cp
266.404 107.014 mo
261.572 107.014 li
261.572 102.182 li
266.404 102.182 li
266.404 107.014 li
cp
261.51 107.014 mo
256.68 107.014 li
256.68 102.182 li
261.51 102.182 li
261.51 107.014 li
cp
256.68 97.2866 mo
261.51 97.2866 li
261.51 102.118 li
256.68 102.118 li
256.68 97.2866 li
cp
256.68 92.3916 mo
261.51 92.3916 li
261.51 97.2231 li
256.68 97.2231 li
256.68 92.3916 li
cp
256.68 87.4971 mo
261.51 87.4971 li
261.51 92.3281 li
256.68 92.3281 li
256.68 87.4971 li
cp
261.572 87.4971 mo
266.404 87.4971 li
266.404 92.3281 li
261.572 92.3281 li
261.572 87.4971 li
cp
266.469 87.4971 mo
271.299 87.4971 li
271.299 92.3281 li
266.469 92.3281 li
266.469 87.4971 li
cp
266.469 97.2866 mo
271.299 97.2866 li
271.299 102.118 li
266.469 102.118 li
266.469 97.2866 li
cp
271.299 97.2231 mo
266.469 97.2231 li
266.469 92.3916 li
271.299 92.3916 li
271.299 97.2231 li
cp
261.572 92.3916 mo
266.404 92.3916 li
266.404 97.2231 li
261.572 97.2231 li
261.572 92.3916 li
cp
261.572 97.2866 mo
266.404 97.2866 li
266.404 102.118 li
261.572 102.118 li
261.572 97.2866 li
cp
276.193 102.118 mo
271.363 102.118 li
271.363 97.2866 li
276.193 97.2866 li
276.193 102.118 li
cp
276.193 97.2231 mo
271.363 97.2231 li
271.363 92.3916 li
276.193 92.3916 li
276.193 97.2231 li
cp
271.363 87.4971 mo
276.193 87.4971 li
276.193 92.3281 li
271.363 92.3281 li
271.363 87.4971 li
cp
276.258 87.4331 mo
276.193 87.4331 li
271.363 87.4331 li
271.299 87.4331 li
266.469 87.4331 li
266.404 87.4331 li
261.572 87.4331 li
261.51 87.4331 li
256.613 87.4331 li
256.613 92.3281 li
256.613 92.3916 li
256.613 97.2231 li
256.613 97.2866 li
256.613 102.118 li
256.613 102.182 li
256.613 107.076 li
261.51 107.076 li
261.572 107.076 li
266.404 107.076 li
266.469 107.076 li
271.299 107.076 li
271.363 107.076 li
276.193 107.076 li
276.258 107.076 li
281.152 107.076 li
281.152 102.182 li
281.152 102.118 li
281.152 97.2866 li
281.152 97.2231 li
281.152 92.3916 li
281.152 92.3281 li
281.152 87.4331 li
276.258 87.4331 li
cp
f
283.959 108.567 mo
281.408 107.718 li
281.408 108.135 li
255.543 108.135 li
255.543 87.731 li
255.957 87.731 li
255.109 85.1812 li
254.262 87.731 li
254.678 87.731 li
254.678 108.135 li
254.678 109 li
281.408 109 li
281.408 109.415 li
283.959 108.567 li
cp
.945098 .403922 .160784 rgb
f
280.328 89.6978 mo
280.004 89.6978 279.744 89.959 279.744 90.2817 cv
279.744 90.4829 279.852 90.6509 280.004 90.7563 cv
276.949 100.063 li
276.928 100.058 li
276.836 100.058 276.75 100.084 276.672 100.122 cv
273.111 96.1733 li
273.166 96.084 273.207 95.9839 273.207 95.8706 cv
273.207 95.5464 272.947 95.2861 272.623 95.2861 cv
272.301 95.2861 272.039 95.5464 272.039 95.8706 cv
272.039 96.1333 272.215 96.3472 272.453 96.4209 cv
272.264 106.175 li
270.473 102.713 li
270.586 102.606 270.658 102.457 270.658 102.29 cv
270.658 101.966 270.396 101.705 270.074 101.705 cv
269.807 101.705 269.59 101.887 269.52 102.131 cv
267.014 102.131 li
266.943 101.887 266.728 101.705 266.461 101.705 cv
266.137 101.705 265.875 101.966 265.875 102.29 cv
265.92 102.51 li
263.131 104.694 li
263.033 104.624 262.922 104.574 262.793 104.574 cv
262.678 104.574 262.578 104.616 262.486 104.674 cv
260.076 102.54 li
260.113 102.463 260.139 102.38 260.139 102.29 cv
260.139 101.966 259.877 101.705 259.555 101.705 cv
259.23 101.705 258.969 101.966 258.969 102.29 cv
258.969 102.442 259.031 102.579 259.127 102.683 cv
256.941 106.252 li
256.791 106.221 li
256.467 106.221 256.205 106.481 256.205 106.806 cv
256.205 107.129 256.467 107.392 256.791 107.392 cv
257.113 107.392 257.375 107.129 257.375 106.806 cv
257.375 106.652 257.314 106.516 257.217 106.412 cv
259.4 102.844 li
259.555 102.875 li
259.668 102.875 259.771 102.832 259.861 102.775 cv
262.27 104.909 li
262.209 105.159 li
262.209 105.482 262.471 105.744 262.793 105.744 cv
263.117 105.744 263.379 105.482 263.379 105.159 cv
263.334 104.94 li
266.125 102.755 li
266.221 102.825 266.332 102.875 266.461 102.875 cv
266.727 102.875 266.943 102.692 267.014 102.449 cv
269.52 102.449 li
269.592 102.692 269.807 102.875 270.074 102.875 cv
270.184 102.852 li
272.014 106.382 li
271.9 106.489 271.826 106.638 271.826 106.806 cv
271.826 107.129 272.09 107.392 272.41 107.392 cv
272.734 107.392 272.996 107.129 272.996 106.806 cv
272.996 106.543 272.82 106.33 272.582 106.255 cv
272.771 96.4253 li
272.877 96.3916 li
276.439 100.34 li
276.383 100.43 276.344 100.53 276.344 100.643 cv
276.344 100.967 276.603 101.228 276.928 101.228 cv
277.25 101.228 277.514 100.967 277.514 100.643 cv
277.514 100.442 277.406 100.274 277.25 100.169 cv
280.305 90.8618 li
280.328 90.8667 li
280.65 90.8667 280.912 90.606 280.912 90.2817 cv
280.912 89.959 280.65 89.6978 280.328 89.6978 cv
cp
.854902 .639216 .290196 rgb
f
368.107 64.1699 mo
364.848 63.1914 364.087 62.4302 364.087 60.8276 cv
364.087 59.063 365.525 58.1338 367.461 58.1338 cv
369.006 58.1338 370.313 58.5981 371.563 59.7661 cv
372.895 58.3276 li
371.645 57.1851 370.371 56.5059 368.519 56.2866 cv
368.519 52.3169 li
366.53 52.3169 li
366.53 56.2866 li
363.682 56.5566 361.722 58.4351 361.722 60.9355 cv
361.722 63.6797 363.49 65.0122 367.055 66.1045 cv
370.177 67.0537 371.074 67.8696 371.074 69.7471 cv
371.074 71.9717 369.284 73.1147 367.055 73.1147 cv
365.068 73.1147 363.572 72.3799 362.347 71.2119 cv
360.985 72.6812 li
362.405 74.0391 364.223 74.8857 366.53 75.0181 cv
366.53 78.8804 li
368.519 78.8804 li
368.519 74.9106 li
371.645 74.4468 373.44 72.4116 373.44 69.666 cv
373.44 66.2661 371.104 65.0947 368.107 64.1699 cv
cp
.992157 .737255 .329412 rgb
f
gsave
315.341 168.102 mo
314.022 168.102 li
314.022 165.54 li
312.492 165.453 311.286 164.89 310.345 163.99 cv
311.247 163.015 li
312.06 163.791 313.053 164.278 314.37 164.278 cv
315.849 164.278 317.036 163.519 317.036 162.044 cv
317.036 160.798 316.44 160.257 314.37 159.627 cv
312.006 158.904 310.833 158.019 310.833 156.199 cv
310.833 154.54 312.133 153.294 314.022 153.116 cv
314.022 150.482 li
315.341 150.482 li
315.341 153.116 li
316.569 153.261 317.414 153.712 318.244 154.47 cv
317.36 155.423 li
316.531 154.649 315.664 154.341 314.639 154.341 cv
313.355 154.341 312.401 154.957 312.401 156.128 cv
312.401 157.191 312.906 157.695 315.068 158.345 cv
317.057 158.958 318.606 159.736 318.606 161.99 cv
318.606 163.811 317.414 165.162 315.341 165.468 cv
315.341 168.102 li
clp
310.345 150.482 mo
318.606 150.482 li
318.606 168.102 li
310.345 168.102 li
cp
.572549 .792157 .890196 rgb
f
grestore
393.489 183.529 mo
393.489 182.814 393.893 181.83 394.797 181.122 cv
396.18 180.041 397.14 178.422 397.14 176.533 cv
397.14 173.398 394.598 170.857 391.463 170.857 cv
388.328 170.857 385.786 173.398 385.786 176.533 cv
385.786 178.422 386.746 180.041 388.129 181.122 cv
389.033 181.83 389.436 182.814 389.436 183.529 cv
385.635 184.437 383.048 186.24 383.242 186.609 cv
384.536 189.068 388.61 190.123 391.463 190.123 cv
394.315 190.123 398.389 189.068 399.684 186.609 cv
399.878 186.24 397.291 184.437 393.489 183.529 cv
cp
.988235 .717647 .180392 rgb
f
391.462 189.461 mo
391.245 189.461 390.593 188.316 390.593 188.066 cv
390.593 187.814 390.842 184.707 391.462 184.707 cv
392.084 184.707 392.333 187.814 392.333 188.066 cv
392.333 188.316 391.681 189.461 391.462 189.461 cv
cp
1 1 1 rgb
f
390.672 183.85 mo
390.672 183.596 391.026 183.527 391.464 183.527 cv
391.9 183.527 392.254 183.596 392.254 183.85 cv
392.254 184.1 391.9 184.439 391.464 184.439 cv
391.026 184.439 390.672 184.1 390.672 183.85 cv
cp
f
405.126 179.008 mo
405.126 178.42 405.457 177.608 406.203 177.025 cv
407.341 176.136 408.131 174.802 408.131 173.246 cv
408.131 170.665 406.038 168.571 403.456 168.571 cv
400.874 168.571 398.782 170.665 398.782 173.246 cv
398.782 174.802 399.571 176.136 400.71 177.025 cv
401.455 177.608 401.788 178.42 401.788 179.008 cv
398.656 179.756 396.525 181.241 396.685 181.545 cv
397.753 183.57 401.107 184.439 403.456 184.439 cv
405.806 184.439 409.16 183.57 410.227 181.545 cv
410.387 181.241 408.256 179.756 405.126 179.008 cv
cp
.988235 .717647 .180392 rgb
f
403.455 183.894 mo
403.277 183.894 402.74 182.951 402.74 182.745 cv
402.74 182.537 402.945 179.978 403.455 179.978 cv
403.969 179.978 404.173 182.537 404.173 182.745 cv
404.173 182.951 403.636 183.894 403.455 183.894 cv
cp
1 1 1 rgb
f
402.805 179.271 mo
402.805 179.064 403.097 179.006 403.457 179.006 cv
403.817 179.006 404.108 179.064 404.108 179.271 cv
404.108 179.479 403.817 179.757 403.457 179.757 cv
403.097 179.757 402.805 179.479 402.805 179.271 cv
cp
f
372.698 181.545 mo
373.766 183.57 377.12 184.439 379.47 184.439 cv
381.818 184.439 385.173 183.57 386.24 181.545 cv
386.4 181.241 384.27 179.756 381.138 179.008 cv
381.138 178.42 381.471 177.608 382.216 177.025 cv
383.354 176.136 384.145 174.802 384.145 173.246 cv
384.145 170.665 382.052 168.571 379.47 168.571 cv
376.888 168.571 374.795 170.665 374.795 173.246 cv
374.795 174.802 375.585 176.136 376.723 177.025 cv
377.469 177.608 377.8 178.42 377.8 179.008 cv
374.67 179.756 372.539 181.241 372.698 181.545 cv
cp
.988235 .717647 .180392 rgb
f
378.753 182.745 mo
378.753 182.537 378.957 179.978 379.471 179.978 cv
379.982 179.978 380.185 182.537 380.185 182.745 cv
380.185 182.951 379.648 183.894 379.471 183.894 cv
379.29 183.894 378.753 182.951 378.753 182.745 cv
cp
1 1 1 rgb
f
379.469 179.757 mo
379.108 179.757 378.817 179.479 378.817 179.271 cv
378.817 179.064 379.108 179.006 379.469 179.006 cv
379.829 179.006 380.121 179.064 380.121 179.271 cv
380.121 179.479 379.829 179.757 379.469 179.757 cv
cp
f
403.456 158.498 mo
403.456 154.055 398.087 150.453 391.463 150.453 cv
384.839 150.453 379.47 154.055 379.47 158.498 cv
379.47 161.258 381.544 163.693 384.703 165.143 cv
384.623 165.487 384.498 165.891 384.301 166.324 cv
383.739 167.556 382.429 168.571 382.429 168.571 cv
382.429 168.571 384.038 168.527 385.539 167.508 cv
386.343 166.963 386.776 166.387 387.013 165.965 cv
388.038 166.239 389.13 166.426 390.271 166.502 cv
391.463 170.082 li
392.654 166.502 li
393.796 166.426 394.888 166.239 395.913 165.965 cv
396.149 166.387 396.583 166.963 397.387 167.508 cv
398.888 168.527 400.497 168.571 400.497 168.571 cv
400.497 168.571 399.186 167.556 398.625 166.324 cv
398.428 165.891 398.303 165.487 398.223 165.143 cv
401.382 163.693 403.456 161.258 403.456 158.498 cv
cp
f
392.135 162.96 mo
392.135 165.001 li
391.113 165.001 li
391.113 163.017 li
389.924 162.947 388.989 162.512 388.262 161.813 cv
388.96 161.059 li
389.59 161.66 390.358 162.038 391.38 162.038 cv
392.525 162.038 393.448 161.449 393.448 160.305 cv
393.448 159.339 392.985 158.922 391.38 158.432 cv
389.548 157.871 388.64 157.187 388.64 155.776 cv
388.64 154.49 389.645 153.525 391.113 153.385 cv
391.113 151.345 li
392.135 151.345 li
392.135 153.385 li
393.085 153.496 393.741 153.846 394.384 154.434 cv
393.7 155.175 li
393.056 154.572 392.385 154.336 391.59 154.336 cv
390.597 154.336 389.855 154.812 389.855 155.719 cv
389.855 156.545 390.247 156.936 391.924 157.439 cv
393.462 157.914 394.664 158.516 394.664 160.263 cv
394.664 161.674 393.741 162.723 392.135 162.96 cv
cp
.968627 .576471 .117647 rgb
f
332.065 67.606 mo
321.844 67.606 313.557 59.3198 313.557 49.0962 cv
313.557 38.8745 321.844 30.5884 332.065 30.5884 cv
342.289 30.5884 350.574 38.8745 350.574 49.0962 cv
350.574 59.3198 342.289 67.606 332.065 67.606 cv
332.065 31.0182 mo
322.081 31.0182 313.986 39.1118 313.986 49.0962 cv
313.986 59.0825 322.081 67.1763 332.065 67.1763 cv
342.052 67.1763 350.145 59.0825 350.145 49.0962 cv
350.145 39.1118 342.052 31.0182 332.065 31.0182 cv
.588235 .670588 .737255 rgb
f
339.686 49.0962 mo
339.686 53.3062 336.273 56.7173 332.065 56.7173 cv
327.856 56.7173 324.444 53.3062 324.444 49.0962 cv
324.444 44.8862 327.856 41.4771 332.065 41.4771 cv
336.273 41.4771 339.686 44.8862 339.686 49.0962 cv
cp
.301961 .301961 .301961 rgb
f
339.317 49.0962 mo
339.31 48.9517 li
339.505 48.936 li
339.465 48.3228 li
339.278 48.3364 li
339.269 48.2368 339.249 48.1411 339.233 48.0435 cv
339.424 48.0024 li
339.31 47.4009 li
339.119 47.436 li
339.098 47.3423 339.073 47.2466 339.047 47.1509 cv
339.231 47.0894 li
339.039 46.5073 li
338.854 46.5679 li
338.819 46.4731 338.793 46.3774 338.755 46.2886 cv
338.922 46.2095 li
338.659 45.6528 li
338.487 45.7349 li
338.342 45.4761 li
338.507 45.3696 li
338.178 44.8521 li
338.016 44.9575 li
337.841 44.7192 li
337.988 44.5913 li
337.596 44.1196 li
337.446 44.2466 li
337.246 44.0278 li
337.377 43.8853 li
336.928 43.4653 li
336.797 43.6079 li
336.569 43.4185 li
336.682 43.2612 li
336.184 42.8989 li
336.073 43.0542 li
335.823 42.9009 li
335.915 42.7271 li
335.376 42.4302 li
335.283 42.604 li
335.197 42.5601 335.109 42.5161 335.019 42.4761 cv
335.087 42.2954 li
334.513 42.0698 li
334.445 42.2485 li
334.351 42.2192 334.259 42.1831 334.166 42.1538 cv
334.21 41.9712 li
333.615 41.8169 li
333.566 42.0005 li
333.475 41.9829 333.376 41.9673 333.278 41.9517 cv
333.3 41.7563 li
332.688 41.6792 li
332.667 41.8735 li
332.568 41.8657 332.47 41.8628 332.371 41.8579 cv
332.371 41.6606 li
331.754 41.6606 li
331.754 41.8579 li
331.657 41.8628 331.559 41.8657 331.462 41.8735 cv
331.439 41.6841 li
330.826 41.7563 li
330.852 41.9517 li
330.757 41.9673 330.656 41.981 330.561 42.0005 cv
330.516 41.8169 li
329.918 41.9722 li
329.964 42.1538 li
329.867 42.1831 329.78 42.2192 329.688 42.2485 cv
329.616 42.0698 li
329.04 42.2954 li
329.111 42.4761 li
329.02 42.5161 328.935 42.5601 328.847 42.6011 cv
328.756 42.4302 li
328.214 42.729 li
328.307 42.9009 li
328.056 43.0542 li
327.944 42.8989 li
327.444 43.2632 li
327.558 43.4185 li
327.331 43.6079 li
327.201 43.4653 li
326.752 43.8892 li
326.884 44.0278 li
326.684 44.2446 li
326.532 44.1177 li
326.14 44.5962 li
326.291 44.7212 li
326.114 44.9536 li
325.953 44.8501 li
325.62 45.3735 li
325.785 45.4761 li
325.64 45.7329 li
325.467 45.6489 li
325.206 46.2095 li
325.375 46.2905 li
325.337 46.3774 325.307 46.4731 325.275 46.5649 cv
325.089 46.5044 li
324.898 47.0923 li
325.082 47.1528 li
325.057 47.2466 325.03 47.3403 325.009 47.436 cv
324.819 47.3989 li
324.703 48.0044 li
324.896 48.0435 li
324.883 48.1392 324.863 48.2349 324.851 48.3345 cv
324.664 48.3208 li
324.626 48.938 li
324.819 48.9497 li
324.811 49.0962 li
324.819 49.2446 li
324.626 49.2534 li
324.664 49.8716 li
324.851 49.8599 li
324.863 49.9546 324.883 50.0522 324.896 50.1479 cv
324.703 50.1841 li
324.819 50.7935 li
325.009 50.7563 li
325.03 50.8491 325.057 50.9448 325.082 51.0376 cv
324.898 51.1001 li
325.089 51.687 li
325.275 51.6274 li
325.375 51.9009 li
325.206 51.981 li
325.467 52.5415 li
325.64 52.4604 li
325.785 52.7163 li
325.622 52.8179 li
325.953 53.3423 li
326.114 53.2358 li
326.291 53.4731 li
326.14 53.5962 li
326.532 54.0728 li
326.684 53.9468 li
326.884 54.1646 li
326.752 54.3032 li
327.201 54.7251 li
327.331 54.5845 li
327.558 54.7739 li
327.446 54.9263 li
327.944 55.2935 li
328.056 55.1382 li
328.307 55.2905 li
328.214 55.4604 li
328.756 55.7603 li
328.847 55.5903 li
328.935 55.6343 329.02 55.6763 329.111 55.7163 cv
329.042 55.895 li
329.616 56.1245 li
329.688 55.9438 li
329.78 55.9751 329.867 56.0112 329.964 56.0366 cv
329.918 56.2192 li
330.516 56.3726 li
330.561 56.1919 li
330.656 56.2114 330.754 56.2231 330.852 56.2407 cv
330.826 56.4331 li
331.439 56.5103 li
331.462 56.3188 li
331.559 56.3267 331.657 56.3286 331.754 56.3325 cv
331.757 56.5278 li
332.373 56.5298 li
332.371 56.3325 li
332.47 56.3286 332.566 56.3267 332.665 56.3188 cv
332.69 56.5103 li
333.304 56.4341 li
333.278 56.2407 li
333.373 56.2231 333.473 56.2114 333.564 56.1919 cv
333.615 56.3726 li
334.214 56.2222 li
334.166 56.0366 li
334.257 56.0112 334.35 55.9751 334.442 55.9438 cv
334.515 56.1216 li
335.088 55.895 li
335.015 55.7163 li
335.105 55.6763 335.193 55.6343 335.282 55.5903 cv
335.376 55.7573 li
335.918 55.4624 li
335.822 55.2905 li
336.073 55.1382 li
336.184 55.2905 li
336.685 54.9312 li
336.569 54.7739 li
336.797 54.5864 li
336.931 54.7231 li
337.38 54.3052 li
337.246 54.1665 li
337.446 53.9468 li
337.596 54.0708 li
337.989 53.5962 li
337.839 53.4731 li
338.016 53.2358 li
338.178 53.3384 li
338.507 52.8208 li
338.342 52.7163 li
338.487 52.4604 li
338.661 52.5396 li
338.922 51.9849 li
338.755 51.9048 li
338.793 51.813 338.819 51.7192 338.854 51.6274 cv
339.041 51.686 li
339.231 51.1001 li
339.047 51.0396 li
339.073 50.9448 339.098 50.854 339.119 50.7583 cv
339.311 50.7896 li
339.424 50.188 li
339.233 50.1499 li
339.249 50.0522 339.269 49.9595 339.278 49.8599 cv
339.467 49.8696 li
339.503 49.2563 li
339.31 49.2446 li
339.317 49.0962 li
cp
.992157 .737255 .329412 rgb
f
337.654 49.0962 mo
337.654 52.1841 335.151 54.686 332.065 54.686 cv
328.977 54.686 326.475 52.1841 326.475 49.0962 cv
326.475 46.0103 328.977 43.5063 332.065 43.5063 cv
335.151 43.5063 337.654 46.0103 337.654 49.0962 cv
cp
.301961 .301961 .301961 rgb
f
337.468 49.0962 mo
337.468 52.0815 335.049 54.5005 332.065 54.5005 cv
329.079 54.5005 326.659 52.0815 326.659 49.0962 cv
326.659 46.1128 329.079 43.6929 332.065 43.6929 cv
335.049 43.6929 337.468 46.1128 337.468 49.0962 cv
cp
1 1 1 rgb
f
332.485 52.7456 mo
332.485 54.2954 li
331.71 54.2954 li
331.71 52.7876 li
330.809 52.7368 330.1 52.4048 329.545 51.8755 cv
330.077 51.3022 li
330.555 51.7583 331.14 52.0444 331.914 52.0444 cv
332.785 52.0444 333.482 51.5991 333.482 50.731 cv
333.482 49.9966 333.133 49.6792 331.914 49.3091 cv
330.524 48.8823 329.832 48.3628 329.832 47.2915 cv
329.832 46.3149 330.598 45.5825 331.71 45.4771 cv
331.71 43.9272 li
332.485 43.9272 li
332.485 45.4771 li
333.208 45.562 333.706 45.8267 334.193 46.2739 cv
333.675 46.8345 li
333.185 46.3794 332.677 46.1978 332.073 46.1978 cv
331.317 46.1978 330.757 46.5601 330.757 47.2495 cv
330.757 47.8745 331.054 48.1714 332.325 48.5532 cv
333.495 48.9146 334.406 49.3726 334.406 50.6978 cv
334.406 51.77 333.706 52.5649 332.485 52.7456 cv
cp
.992157 .737255 .329412 rgb
f
333.416 35.8833 mo
333.416 35.4585 333.655 34.8716 334.194 34.4497 cv
335.017 33.8071 335.588 32.8433 335.588 31.7192 cv
335.588 29.854 334.075 28.3403 332.209 28.3403 cv
330.343 28.3403 328.831 29.854 328.831 31.7192 cv
328.831 32.8433 329.401 33.8071 330.225 34.4497 cv
330.763 34.8716 331.004 35.4585 331.004 35.8833 cv
328.74 36.4233 327.2 37.4976 327.315 37.7173 cv
328.087 39.1802 330.512 39.8081 332.209 39.8081 cv
333.907 39.8081 336.332 39.1802 337.103 37.7173 cv
337.218 37.4976 335.678 36.4233 333.416 35.8833 cv
cp
.988235 .717647 .180392 rgb
f
332.208 39.4146 mo
332.08 39.4146 331.691 38.7329 331.691 38.5845 cv
331.691 38.4341 331.84 36.5845 332.208 36.5845 cv
332.58 36.5845 332.727 38.4341 332.727 38.5845 cv
332.727 38.7329 332.339 39.4146 332.208 39.4146 cv
cp
1 1 1 rgb
f
331.738 36.0747 mo
331.738 35.9243 331.949 35.8823 332.21 35.8823 cv
332.471 35.8823 332.681 35.9243 332.681 36.0747 cv
332.681 36.2231 332.471 36.4243 332.21 36.4243 cv
331.949 36.4243 331.738 36.2231 331.738 36.0747 cv
cp
f
345.8 58.1841 mo
345.8 57.7593 346.039 57.1724 346.578 56.7515 cv
347.4 56.1089 347.972 55.144 347.972 54.02 cv
347.972 52.1548 346.459 50.6411 344.593 50.6411 cv
342.727 50.6411 341.215 52.1548 341.215 54.02 cv
341.215 55.144 341.785 56.1089 342.608 56.7515 cv
343.146 57.1724 343.388 57.7593 343.388 58.1841 cv
341.124 58.7241 339.584 59.7983 339.699 60.0181 cv
340.471 61.4819 342.895 62.1089 344.593 62.1089 cv
346.291 62.1089 348.716 61.4819 349.487 60.0181 cv
349.602 59.7983 348.061 58.7241 345.8 58.1841 cv
cp
.988235 .717647 .180392 rgb
f
344.592 61.7153 mo
344.464 61.7153 344.075 61.0337 344.075 60.8853 cv
344.075 60.7349 344.224 58.8853 344.592 58.8853 cv
344.964 58.8853 345.111 60.7349 345.111 60.8853 cv
345.111 61.0337 344.723 61.7153 344.592 61.7153 cv
cp
1 1 1 rgb
f
344.122 58.3755 mo
344.122 58.2251 344.333 58.1831 344.594 58.1831 cv
344.854 58.1831 345.064 58.2251 345.064 58.3755 cv
345.064 58.5239 344.854 58.7251 344.594 58.7251 cv
344.333 58.7251 344.122 58.5239 344.122 58.3755 cv
cp
f
321.364 58.1841 mo
321.364 57.7593 321.603 57.1724 322.143 56.7515 cv
322.965 56.1089 323.536 55.144 323.536 54.02 cv
323.536 52.1548 322.023 50.6411 320.157 50.6411 cv
318.291 50.6411 316.779 52.1548 316.779 54.02 cv
316.779 55.144 317.35 56.1089 318.173 56.7515 cv
318.711 57.1724 318.952 57.7593 318.952 58.1841 cv
316.689 58.7241 315.148 59.7983 315.264 60.0181 cv
316.035 61.4819 318.46 62.1089 320.157 62.1089 cv
321.855 62.1089 324.28 61.4819 325.052 60.0181 cv
325.166 59.7983 323.626 58.7241 321.364 58.1841 cv
cp
.988235 .717647 .180392 rgb
f
320.156 61.7153 mo
320.028 61.7153 319.64 61.0337 319.64 60.8853 cv
319.64 60.7349 319.788 58.8853 320.156 58.8853 cv
320.528 58.8853 320.676 60.7349 320.676 60.8853 cv
320.676 61.0337 320.287 61.7153 320.156 61.7153 cv
cp
1 1 1 rgb
f
319.686 58.3755 mo
319.686 58.2251 319.897 58.1831 320.158 58.1831 cv
320.419 58.1831 320.629 58.2251 320.629 58.3755 cv
320.629 58.5239 320.419 58.7251 320.158 58.7251 cv
319.897 58.7251 319.686 58.5239 319.686 58.3755 cv
cp
f
0 225.001 mo
225 225.001 li
225 450 li
0 450 li
0 225.001 li
.172549 .341176 .470588 rgb
f
109.996 415.73 mo
68.3008 415.73 34.5 381.929 34.5 340.233 cv
34.5 298.537 68.3008 264.736 109.996 264.736 cv
151.692 264.736 185.495 298.537 185.495 340.233 cv
185.495 352.991 182.33 365.01 176.743 375.548 cv
176.437 375.264 176.121 374.988 175.799 374.721 cv
181.212 364.415 184.274 352.682 184.274 340.233 cv
184.274 299.211 151.019 265.956 109.996 265.956 cv
68.9746 265.956 35.7207 299.211 35.7207 340.233 cv
35.7207 381.255 68.9746 414.51 109.996 414.51 cv
122.002 414.51 133.341 411.663 143.377 406.605 cv
143.638 406.931 143.909 407.251 144.188 407.562 cv
133.922 412.786 122.303 415.73 109.996 415.73 cv
.588235 .670588 .737255 rgb
f
184.08 392.327 mo
184.08 404.95 173.849 415.183 161.225 415.183 cv
148.603 415.183 138.369 404.95 138.369 392.327 cv
138.369 379.705 148.603 369.473 161.225 369.473 cv
173.849 369.473 184.08 379.705 184.08 392.327 cv
.988235 .717647 .180392 rgb
f
55.1748 317.097 mo
55.1748 326.169 47.8203 333.523 38.748 333.523 cv
29.6768 333.523 22.3223 326.169 22.3223 317.097 cv
22.3223 308.025 29.6768 300.671 38.748 300.671 cv
47.8203 300.671 55.1748 308.025 55.1748 317.097 cv
cp
f
129.612 270.553 mo
129.612 281.445 120.783 290.273 109.893 290.273 cv
99 290.273 90.1719 281.445 90.1719 270.553 cv
90.1719 259.662 99 250.834 109.893 250.834 cv
120.783 250.834 129.612 259.662 129.612 270.553 cv
cp
f
80.3105 394.842 mo
80.3105 407.312 70.2031 417.42 57.7314 417.42 cv
45.2637 417.42 35.1543 407.312 35.1543 394.842 cv
35.1543 382.373 45.2637 372.265 57.7314 372.265 cv
70.2031 372.265 80.3105 382.373 80.3105 394.842 cv
cp
f
202.678 316.324 mo
202.678 328.338 192.939 338.078 180.926 338.078 cv
168.912 338.078 159.173 328.338 159.173 316.324 cv
159.173 304.311 168.912 294.572 180.926 294.572 cv
192.939 294.572 202.678 304.311 202.678 316.324 cv
cp
f
185.554 281.903 mo
180.624 281.903 176.624 277.905 176.624 272.974 cv
176.624 268.042 180.624 264.044 185.554 264.044 cv
190.486 264.044 194.484 268.042 194.484 272.974 cv
194.484 277.905 190.486 281.903 185.554 281.903 cv
.537255 .623529 .686274 rgb
f
176.316 428.884 mo
171.384 428.884 167.386 424.886 167.386 419.955 cv
167.386 417.293 168.551 414.903 170.398 413.267 cv
171.619 412.732 172.785 412.092 173.883 411.36 cv
174.656 411.142 175.473 411.025 176.316 411.025 cv
181.248 411.025 185.246 415.023 185.246 419.955 cv
185.246 424.886 181.248 428.884 176.316 428.884 cv
.337255 .470588 .576471 rgb
f
170.398 413.267 mo
171.388 412.391 172.575 411.73 173.883 411.36 cv
172.785 412.092 171.619 412.732 170.398 413.267 cv
.992157 .772549 .345098 rgb
f
26.0923 430.829 mo
21.1606 430.829 17.1627 426.831 17.1627 421.899 cv
17.1627 416.968 21.1606 412.969 26.0923 412.969 cv
31.0239 412.969 35.022 416.968 35.022 421.899 cv
35.022 426.831 31.0239 430.829 26.0923 430.829 cv
.337255 .470588 .576471 rgb
f
35.9692 371.159 mo
35.9692 377.723 30.6489 383.045 24.0845 383.045 cv
17.522 383.045 12.1997 377.723 12.1997 371.159 cv
12.1997 364.596 17.522 359.274 24.0845 359.274 cv
30.6489 359.274 35.9692 364.596 35.9692 371.159 cv
cp
.92549 .533333 .505882 rgb
f
158.589 256.17 mo
158.589 262.733 153.269 268.055 146.705 268.055 cv
140.14 268.055 134.82 262.733 134.82 256.17 cv
134.82 249.606 140.14 244.284 146.705 244.284 cv
153.269 244.284 158.589 249.606 158.589 256.17 cv
cp
.819608 .913725 1 rgb
f
64.4272 258.27 mo
64.4272 261.048 62.1753 263.3 59.3979 263.3 cv
56.6187 263.3 54.3667 261.048 54.3667 258.27 cv
54.3667 255.492 56.6187 253.24 59.3979 253.24 cv
62.1753 253.24 64.4272 255.492 64.4272 258.27 cv
cp
.988235 .717647 .180392 rgb
f
207.584 393.301 mo
207.584 396.079 205.332 398.331 202.553 398.331 cv
199.776 398.331 197.524 396.079 197.524 393.301 cv
197.524 390.523 199.776 388.271 202.553 388.271 cv
205.332 388.271 207.584 390.523 207.584 393.301 cv
cp
f
188.782 254.155 mo
187.114 254.155 185.76 252.803 185.76 251.134 cv
185.76 249.465 187.114 248.113 188.782 248.113 cv
190.452 248.113 191.803 249.465 191.803 251.134 cv
191.803 252.803 190.452 254.155 188.782 254.155 cv
.537255 .623529 .686274 rgb
f
42.313 290.807 mo
40.6431 290.807 39.2915 289.455 39.2915 287.786 cv
39.2915 286.117 40.6431 284.766 42.313 284.766 cv
43.981 284.766 45.3325 286.117 45.3325 287.786 cv
45.3325 289.455 43.981 290.807 42.313 290.807 cv
.560784 .647059 .709804 rgb
f
201.893 361.619 mo
201.893 363.288 200.541 364.64 198.873 364.64 cv
197.204 364.64 195.852 363.288 195.852 361.619 cv
195.852 359.95 197.204 358.598 198.873 358.598 cv
200.541 358.598 201.893 359.95 201.893 361.619 cv
cp
.172549 .341176 .470588 rgb
f
56.0962 426.929 mo
56.0962 429.707 53.8442 431.959 51.0669 431.959 cv
48.2876 431.959 46.0356 429.707 46.0356 426.929 cv
46.0356 424.151 48.2876 421.899 51.0669 421.899 cv
53.8442 421.899 56.0962 424.151 56.0962 426.929 cv
cp
.819608 .913725 1 rgb
f
142.899 293.905 mo
142.899 293.905 140.594 292.394 140.594 290.017 cv
140.594 287.678 142.338 287.053 142.508 285.648 cv
142.767 283.474 141.474 282.263 141.474 282.263 cv
141.474 282.263 144.408 283.72 144.408 285.977 cv
144.408 288.006 142.602 288.786 142.347 290.61 cv
142.148 292.034 142.899 293.905 142.899 293.905 cv
.588235 .670588 .737255 rgb
f
146.451 308.955 mo
137.834 308.955 li
137.834 307.778 li
137.842 307.778 li
133.93 306.168 132.461 302.587 132.327 296.045 cv
142.143 296.045 li
148.141 296.045 li
151.958 296.045 li
153.214 296.045 154.367 296.045 154.646 296.045 cv
155.326 296.045 156.625 296.266 156.479 297.54 cv
156.331 298.812 155.334 303.894 150.555 303.894 cv
150.551 303.894 li
149.676 305.731 148.352 306.99 146.443 307.778 cv
146.451 307.778 li
146.451 308.955 li
151.903 297.464 mo
151.793 299.402 151.541 301.049 151.112 302.435 cv
154.175 302.057 154.899 298.598 155.048 297.509 cv
154.95 297.485 154.807 297.464 154.646 297.464 cv
151.903 297.464 li
f
62.978 436.796 mo
62.978 439.668 64.2246 441.013 66.0034 441.013 cv
67.8804 441.013 69.043 439.668 69.043 436.782 cv
69.043 433.869 67.8525 432.538 66.0034 432.538 cv
64.1968 432.538 62.978 433.883 62.978 436.796 cv
cp
69.9258 436.782 mo
69.9258 439.934 68.3848 441.727 66.0034 441.727 cv
63.6924 441.727 62.0952 439.99 62.0952 436.796 cv
62.0952 433.63 63.7061 431.823 66.0034 431.823 cv
68.3428 431.823 69.9258 433.546 69.9258 436.782 cv
cp
1 1 1 rgb
f
77.6104 436.334 mo
77.6104 441.573 li
76.7979 441.573 li
76.7979 436.446 li
76.7979 435.241 76.3076 434.751 75.4111 434.751 cv
74.4165 434.751 73.7441 435.367 73.1421 436.264 cv
73.1421 441.573 li
72.3296 441.573 li
72.3296 434.247 li
73.0298 434.247 li
73.1138 435.494 li
73.6885 434.653 74.5005 434.093 75.5654 434.093 cv
76.896 434.093 77.6104 434.919 77.6104 436.334 cv
cp
f
81.2476 440.312 mo
81.2476 440.788 81.416 441.026 81.8501 441.026 cv
82.0181 441.026 82.186 440.999 82.3403 440.928 cv
82.5645 441.531 li
82.3125 441.643 82.0039 441.727 81.6958 441.727 cv
80.9116 441.727 80.4351 441.279 80.4351 440.312 cv
80.4351 431.263 li
81.2476 431.165 li
81.2476 440.312 li
cp
f
84.4814 441.573 mo
84.4814 434.247 li
85.2939 434.247 li
85.2939 441.573 li
84.4814 441.573 li
cp
85.4897 431.613 mo
85.4897 431.936 85.252 432.202 84.8735 432.202 cv
84.5093 432.202 84.2715 431.936 84.2715 431.613 cv
84.2715 431.291 84.5093 431.025 84.8735 431.025 cv
85.252 431.025 85.4897 431.291 85.4897 431.613 cv
cp
f
93.542 436.334 mo
93.542 441.573 li
92.7295 441.573 li
92.7295 436.446 li
92.7295 435.241 92.2393 434.751 91.3428 434.751 cv
90.3481 434.751 89.6758 435.367 89.0737 436.264 cv
89.0737 441.573 li
88.2612 441.573 li
88.2612 434.247 li
88.9614 434.247 li
89.0454 435.494 li
89.6201 434.653 90.4321 434.093 91.4971 434.093 cv
92.8276 434.093 93.542 434.919 93.542 436.334 cv
cp
f
100.835 437.384 mo
100.835 435.788 100.191 434.765 98.8042 434.765 cv
97.6694 434.765 96.8013 435.605 96.7173 437.595 cv
100.835 437.595 li
100.835 437.384 li
cp
101.606 438.225 mo
96.7173 438.225 li
96.8149 440.214 97.7397 441.04 99.0005 441.04 cv
99.7988 441.04 100.331 440.788 100.976 440.312 cv
101.354 440.831 li
100.667 441.391 99.9248 441.727 98.9585 441.727 cv
97.0254 441.727 95.8486 440.326 95.8486 437.973 cv
95.8486 435.634 96.9834 434.093 98.7764 434.093 cv
100.681 434.093 101.634 435.48 101.634 437.637 cv
101.634 437.861 101.62 438.085 101.606 438.225 cv
cp
f
112.889 432.888 mo
112.385 433.435 li
111.685 432.804 111.04 432.538 110.158 432.538 cv
108.981 432.538 108.168 433.154 108.168 434.163 cv
108.168 435.143 108.687 435.591 110.41 436.11 cv
112.133 436.642 113.183 437.258 113.183 438.953 cv
113.183 440.592 111.937 441.727 110.003 441.727 cv
108.687 441.727 107.72 441.265 106.936 440.522 cv
107.44 439.976 li
108.113 440.607 108.869 441.013 109.99 441.013 cv
111.334 441.013 112.329 440.27 112.329 438.982 cv
112.329 437.819 111.754 437.342 110.045 436.81 cv
108.141 436.222 107.314 435.564 107.314 434.177 cv
107.314 432.818 108.449 431.823 110.13 431.823 cv
111.376 431.823 112.133 432.216 112.889 432.888 cv
cp
f
120.701 436.334 mo
120.701 441.573 li
119.889 441.573 li
119.889 436.446 li
119.889 435.255 119.384 434.751 118.502 434.751 cv
117.507 434.751 116.835 435.367 116.233 436.264 cv
116.233 441.573 li
115.42 441.573 li
115.42 431.263 li
116.233 431.165 li
116.233 435.465 li
116.821 434.639 117.605 434.093 118.656 434.093 cv
119.973 434.093 120.701 434.947 120.701 436.334 cv
cp
f
123.876 437.917 mo
123.876 439.976 124.704 441.04 126.104 441.04 cv
127.504 441.04 128.359 439.99 128.359 437.889 cv
128.359 435.83 127.533 434.779 126.118 434.779 cv
124.731 434.779 123.876 435.815 123.876 437.917 cv
cp
129.213 437.889 mo
129.213 440.256 128.037 441.727 126.104 441.727 cv
124.157 441.727 123.008 440.27 123.008 437.917 cv
123.008 435.564 124.199 434.093 126.118 434.093 cv
128.065 434.093 129.213 435.494 129.213 437.889 cv
cp
f
136.41 437.875 mo
136.41 435.788 135.737 434.765 134.462 434.765 cv
133.524 434.765 132.908 435.325 132.403 436.026 cv
132.403 439.92 li
132.851 440.607 133.496 441.04 134.336 441.04 cv
135.681 441.04 136.41 439.976 136.41 437.875 cv
cp
137.278 437.875 mo
137.278 440.186 136.311 441.727 134.491 441.727 cv
133.566 441.727 132.866 441.307 132.403 440.718 cv
132.403 444.332 li
131.59 444.444 li
131.59 434.247 li
132.292 434.247 li
132.361 435.312 li
132.893 434.569 133.678 434.093 134.617 434.093 cv
136.423 434.093 137.278 435.507 137.278 437.875 cv
cp
f
144.544 437.875 mo
144.544 435.788 143.871 434.765 142.596 434.765 cv
141.658 434.765 141.042 435.325 140.537 436.026 cv
140.537 439.92 li
140.985 440.607 141.629 441.04 142.47 441.04 cv
143.815 441.04 144.544 439.976 144.544 437.875 cv
cp
145.412 437.875 mo
145.412 440.186 144.445 441.727 142.624 441.727 cv
141.7 441.727 140.999 441.307 140.537 440.718 cv
140.537 444.332 li
139.724 444.444 li
139.724 434.247 li
140.425 434.247 li
140.495 435.312 li
141.027 434.569 141.812 434.093 142.751 434.093 cv
144.557 434.093 145.412 435.507 145.412 437.875 cv
cp
f
147.858 441.573 mo
147.858 434.247 li
148.67 434.247 li
148.67 441.573 li
147.858 441.573 li
cp
148.867 431.613 mo
148.867 431.936 148.628 432.202 148.251 432.202 cv
147.886 432.202 147.648 431.936 147.648 431.613 cv
147.648 431.291 147.886 431.025 148.251 431.025 cv
148.628 431.025 148.867 431.291 148.867 431.613 cv
cp
f
156.919 436.334 mo
156.919 441.573 li
156.107 441.573 li
156.107 436.446 li
156.107 435.241 155.617 434.751 154.72 434.751 cv
153.726 434.751 153.053 435.367 152.451 436.264 cv
152.451 441.573 li
151.638 441.573 li
151.638 434.247 li
152.339 434.247 li
152.423 435.494 li
152.998 434.653 153.81 434.093 154.874 434.093 cv
156.206 434.093 156.919 434.919 156.919 436.334 cv
cp
f
159.955 436.572 mo
159.955 437.749 160.683 438.421 161.803 438.421 cv
162.994 438.421 163.653 437.749 163.653 436.586 cv
163.653 435.438 163.05 434.723 161.803 434.723 cv
160.557 434.723 159.955 435.494 159.955 436.572 cv
cp
165.263 434.401 mo
164.759 434.541 164.115 434.597 163.232 434.611 cv
164.002 434.975 164.479 435.591 164.479 436.6 cv
164.479 438.029 163.485 439.009 161.831 439.009 cv
161.481 439.009 161.159 438.967 160.879 438.869 cv
160.529 439.065 160.319 439.374 160.319 439.71 cv
160.319 440.144 160.599 440.466 161.481 440.466 cv
162.672 440.466 li
164.128 440.466 165.025 441.251 165.025 442.343 cv
165.025 443.66 163.989 444.444 161.845 444.444 cv
159.632 444.444 158.791 443.8 158.791 442.343 cv
159.548 442.343 li
159.562 443.366 160.094 443.772 161.845 443.772 cv
163.554 443.772 164.199 443.254 164.199 442.385 cv
164.199 441.601 163.582 441.167 162.545 441.167 cv
161.355 441.167 li
160.136 441.167 159.548 440.578 159.548 439.878 cv
159.548 439.388 159.842 438.953 160.346 438.631 cv
159.506 438.197 159.114 437.553 159.114 436.572 cv
159.114 435.101 160.193 434.093 161.803 434.093 cv
163.764 434.121 164.296 433.911 165.011 433.616 cv
165.263 434.401 li
cp
f
92.5146 330.316 mo
92.7725 330.316 92.981 330.107 92.981 329.85 cv
92.981 329.581 93.187 302.886 111.064 302.886 cv
128.942 302.886 129.148 329.581 129.148 329.85 cv
129.148 330.107 129.357 330.316 129.615 330.316 cv
129.871 330.316 130.08 330.107 130.08 329.85 cv
130.08 329.572 129.862 301.954 111.064 301.954 cv
92.2656 301.954 92.0488 329.572 92.0488 329.85 cv
92.0488 330.107 92.2568 330.316 92.5146 330.316 cv
cp
.85098 .745098 .627451 rgb
f
89.2495 330.316 mo
89.5049 330.316 89.7158 330.107 89.7158 329.85 cv
89.7158 329.581 89.9209 302.886 107.8 302.886 cv
125.674 302.886 125.881 329.581 125.881 329.85 cv
125.881 330.107 126.09 330.316 126.348 330.316 cv
126.605 330.316 126.815 330.107 126.815 329.85 cv
126.815 329.572 126.596 301.954 107.8 301.954 cv
89.0005 301.954 88.7832 329.572 88.7832 329.85 cv
88.7832 330.107 88.9907 330.316 89.2495 330.316 cv
cp
.921569 .803922 .666667 rgb
f
80.2612 372.355 mo
135.289 372.355 li
135.289 324.27 li
80.2612 324.27 li
80.2612 372.355 li
cp
.815686 .215686 .247059 rgb
f
135.289 372.355 mo
139.773 369.228 li
139.773 326.24 li
135.289 324.27 li
135.289 372.355 li
cp
f
127.216 335.318 mo
125.368 335.318 li
125.368 324.27 li
127.216 324.27 li
127.216 335.318 li
cp
.886275 .682353 .294118 rgb
f
88.332 335.318 mo
90.1816 335.318 li
90.1816 324.27 li
88.332 324.27 li
88.332 335.318 li
cp
f
139.773 369.228 mo
137.531 365.665 li
135.289 372.355 li
139.773 369.228 li
cp
.698039 .180392 .203922 rgb
f
137.531 365.665 mo
135.289 372.355 li
135.289 324.27 li
137.531 325.256 li
137.531 365.665 li
cp
.682353 .25098 .254902 rgb
f
33.6401 318.532 mo
32.3208 312.73 li
28.6382 312.73 li
30.1694 317.787 li
33.6401 318.532 li
cp
39.2769 319.742 mo
37.7227 312.73 li
33.8696 312.73 li
35.2686 318.881 li
39.2769 319.742 li
cp
41.9688 320.319 mo
43.5742 312.73 li
39.2705 312.73 li
40.9028 320.09 li
41.9688 320.319 li
cp
31.3237 325.053 mo
30.9072 325.053 30.5684 324.714 30.5684 324.298 cv
30.5684 323.881 30.9072 323.542 31.3237 323.542 cv
41.2866 323.542 li
41.6558 321.797 li
28.9819 319.078 li
26.603 311.219 li
43.8931 311.219 li
44.5454 308.138 li
49.7778 308.138 li
50.1948 308.138 50.5342 308.477 50.5342 308.894 cv
50.5342 309.31 50.1948 309.648 49.7778 309.648 cv
45.769 309.648 li
42.5112 325.053 li
31.3237 325.053 li
cp
.317647 .396078 .494118 rgb
f
42.2769 320.794 mo
40.5679 320.427 li
38.772 312.33 li
44.0679 312.33 li
42.2769 320.794 li
cp
28.0991 312.33 mo
32.6401 312.33 li
34.1694 319.054 li
29.855 318.128 li
28.0991 312.33 li
cp
38.0435 312.33 mo
39.8022 320.264 li
34.9351 319.219 li
33.3687 312.33 li
38.0435 312.33 li
cp
50.1343 308.894 mo
50.1343 308.697 49.9741 308.538 49.7778 308.538 cv
44.8696 308.538 li
44.2173 311.619 li
27.1421 311.619 li
29.2964 318.736 li
42.1294 321.49 li
41.6108 323.942 li
31.3237 323.942 li
31.1265 323.942 30.9683 324.102 30.9683 324.298 cv
30.9683 324.494 31.1265 324.653 31.3237 324.653 cv
42.187 324.653 li
42.8989 321.29 li
42.8989 321.29 li
44.853 312.049 li
44.853 312.048 li
45.4448 309.249 li
49.7778 309.249 li
49.9741 309.249 50.1343 309.09 50.1343 308.894 cv
cp
f
31.3237 325.971 mo
31.0054 325.971 30.7461 326.23 30.7461 326.549 cv
30.7461 326.867 31.0054 327.126 31.3237 327.126 cv
31.6421 327.126 31.9014 326.867 31.9014 326.549 cv
31.9014 326.23 31.6421 325.971 31.3237 325.971 cv
cp
31.3237 328.637 mo
30.1714 328.637 29.2344 327.7 29.2344 326.549 cv
29.2344 325.397 30.1714 324.46 31.3237 324.46 cv
32.4751 324.46 33.4121 325.397 33.4121 326.549 cv
33.4121 327.7 32.4751 328.637 31.3237 328.637 cv
cp
f
31.3237 327.526 mo
30.7847 327.526 30.3462 327.087 30.3462 326.549 cv
30.3462 326.009 30.7847 325.571 31.3237 325.571 cv
31.8628 325.571 32.3013 326.009 32.3013 326.549 cv
32.3013 327.087 31.8628 327.526 31.3237 327.526 cv
cp
31.3237 324.86 mo
30.3931 324.86 29.6343 325.617 29.6343 326.549 cv
29.6343 327.48 30.3931 328.237 31.3237 328.237 cv
32.2554 328.237 33.0122 327.48 33.0122 326.549 cv
33.0122 325.617 32.2554 324.86 31.3237 324.86 cv
cp
f
40.4771 325.971 mo
40.1587 325.971 39.8994 326.23 39.8994 326.549 cv
39.8994 326.867 40.1587 327.126 40.4771 327.126 cv
40.7954 327.126 41.0547 326.867 41.0547 326.549 cv
41.0547 326.23 40.7954 325.971 40.4771 325.971 cv
cp
40.4771 328.637 mo
39.3257 328.637 38.3887 327.7 38.3887 326.549 cv
38.3887 325.397 39.3257 324.46 40.4771 324.46 cv
41.6284 324.46 42.5654 325.397 42.5654 326.549 cv
42.5654 327.7 41.6284 328.637 40.4771 328.637 cv
cp
f
40.4771 327.526 mo
39.937 327.526 39.4995 327.087 39.4995 326.549 cv
39.4995 326.009 39.937 325.571 40.4771 325.571 cv
41.0161 325.571 41.4546 326.009 41.4546 326.549 cv
41.4546 327.087 41.0161 327.526 40.4771 327.526 cv
cp
40.4771 324.86 mo
39.5464 324.86 38.7886 325.617 38.7886 326.549 cv
38.7886 327.48 39.5464 328.237 40.4771 328.237 cv
41.4087 328.237 42.1655 327.48 42.1655 326.549 cv
42.1655 325.617 41.4087 324.86 40.4771 324.86 cv
cp
f
64.4272 332.657 mo
63.2856 332.657 62.3608 333.583 62.3608 334.724 cv
62.3608 335.865 63.2856 336.79 64.4272 336.79 cv
65.5698 336.79 66.4946 335.865 66.4946 334.724 cv
66.4946 333.583 65.5698 332.657 64.4272 332.657 cv
cp
72.1313 334.53 mo
72.1313 357.562 li
56.7231 357.562 li
56.7231 334.53 li
59.1558 330.806 li
64.4272 330.806 li
69.6997 330.806 li
72.1313 334.53 li
cp
1 1 1 rgb
f
65.062 353.464 mo
65.062 355.779 li
63.9048 355.779 li
63.9048 353.528 li
62.5571 353.448 61.4956 352.957 60.6714 352.164 cv
61.4634 351.308 li
62.1772 351.99 63.0493 352.418 64.2065 352.418 cv
65.5063 352.418 66.5532 351.752 66.5532 350.452 cv
66.5532 349.358 66.0298 348.882 64.2065 348.328 cv
62.1294 347.693 61.0991 346.917 61.0991 345.315 cv
61.0991 343.857 62.2407 342.763 63.9048 342.605 cv
63.9048 340.29 li
65.062 340.29 li
65.062 342.605 li
66.1401 342.731 66.8853 343.128 67.6147 343.794 cv
66.8384 344.634 li
66.1089 343.952 65.3481 343.683 64.4438 343.683 cv
63.3188 343.683 62.478 344.221 62.478 345.252 cv
62.478 346.188 62.9224 346.631 64.8247 347.202 cv
66.5688 347.741 67.9321 348.423 67.9321 350.404 cv
67.9321 352.006 66.8853 353.195 65.062 353.464 cv
cp
.815686 .215686 .247059 rgb
f
65.0454 332.762 mo
63.8101 332.762 li
63.8101 282.045 li
65.0454 281.084 li
65.0454 332.762 li
cp
.682353 .25098 .254902 rgb
f
177.194 401.542 mo
177.194 401.999 176.824 402.369 176.367 402.369 cv
146.081 402.368 li
145.861 402.368 145.651 402.281 145.496 402.126 cv
145.341 401.971 145.254 401.761 145.254 401.541 cv
145.255 383.115 li
145.255 382.658 145.625 382.288 146.082 382.288 cv
176.368 382.288 li
176.588 382.288 176.798 382.375 176.953 382.53 cv
177.108 382.685 177.195 382.895 177.195 383.115 cv
177.194 401.542 li
cp
.317647 .396078 .494118 rgb
f
177.194 390.468 mo
145.254 390.469 li
145.254 386.503 li
177.194 386.502 li
177.194 390.468 li
cp
0 .137255 .184314 rgb
f
175.746 395.923 mo
146.701 395.924 li
146.7 392.012 li
175.746 392.011 li
175.746 395.923 li
cp
1 1 1 rgb
f
175.747 392.327 mo
146.702 392.328 li
146.7 392.012 li
175.746 392.011 li
175.747 392.327 li
cp
.972549 .94902 .588235 rgb
f
175.748 393.527 mo
146.699 393.526 li
146.701 393.211 li
175.746 393.211 li
175.748 393.527 li
cp
f
175.748 394.728 mo
146.7 394.725 li
146.702 394.411 li
175.748 394.41 li
175.748 394.728 li
cp
f
175.746 395.923 mo
146.701 395.924 li
146.702 395.609 li
175.747 395.609 li
175.746 395.923 li
cp
f
150.667 398.375 mo
146.701 398.376 li
146.701 397.796 li
150.668 397.797 li
150.667 398.375 li
cp
1 1 1 rgb
f
161.686 399.532 mo
157.72 399.531 li
157.719 398.953 li
161.686 398.954 li
161.686 399.532 li
cp
f
148.435 399.531 mo
146.7 399.532 li
146.7 398.952 li
148.435 398.953 li
148.435 399.531 li
cp
f
150.957 399.532 mo
149.222 399.532 li
149.221 398.954 li
150.956 398.953 li
150.957 399.532 li
cp
f
149.302 400.578 mo
147.567 400.577 li
147.568 400.001 li
149.304 400.001 li
149.302 400.578 li
cp
f
152.837 398.376 mo
151.35 398.375 li
151.349 397.796 li
152.837 397.796 li
152.837 398.376 li
cp
f
154.117 398.376 mo
153.561 398.376 li
153.561 397.797 li
154.117 397.796 li
154.117 398.376 li
cp
f
151.059 400.578 mo
149.571 400.578 li
149.571 399.999 li
151.06 400.001 li
151.059 400.578 li
cp
f
152.34 400.579 mo
151.782 400.579 li
151.783 400.002 li
152.338 400 li
152.34 400.579 li
cp
f
154.985 398.374 mo
154.428 398.376 li
154.427 397.795 li
154.984 397.796 li
154.985 398.374 li
cp
f
147.257 400.577 mo
146.7 400.577 li
146.701 400.001 li
147.259 400.001 li
147.257 400.577 li
cp
f
161.142 398.376 mo
160.585 398.376 li
160.583 397.797 li
161.143 397.796 li
161.142 398.376 li
cp
f
156.989 398.376 mo
155.418 398.374 li
155.419 397.798 li
156.989 397.796 li
156.989 398.376 li
cp
f
151.905 399.532 mo
151.349 399.531 li
151.348 398.952 li
151.905 398.953 li
151.905 399.532 li
cp
f
153.911 399.532 mo
152.341 399.532 li
152.341 398.954 li
153.91 398.953 li
153.911 399.532 li
cp
f
160.19 398.376 mo
157.525 398.374 li
157.527 397.797 li
160.189 397.796 li
160.19 398.376 li
cp
f
157.72 400.577 mo
155.82 400.579 li
155.819 400.001 li
157.72 400 li
157.72 400.577 li
cp
f
157.37 399.531 mo
154.707 399.532 li
154.707 398.953 li
157.371 398.954 li
157.37 399.531 li
cp
f
161.686 400.578 mo
158.198 400.579 li
158.198 400.001 li
161.685 400.001 li
161.686 400.578 li
cp
f
155.448 400.579 mo
152.783 400.576 li
152.784 400 li
155.447 400 li
155.448 400.579 li
cp
f
122.46 276.906 mo
97.3545 276.906 li
97.3545 260.307 li
97.3545 260.123 97.5039 259.973 97.6885 259.973 cv
122.126 259.973 li
122.311 259.973 122.46 260.123 122.46 260.307 cv
122.46 276.906 li
cp
0 .215686 .266667 rgb
f
97.6919 276.571 mo
97.6919 260.307 li
122.127 260.307 li
122.127 276.571 li
97.6919 276.571 li
cp
.239216 .678431 .87451 rgb
f
122.46 276.906 mo
122.46 278.355 121.286 279.53 119.836 279.53 cv
99.98 279.53 li
98.5308 279.53 97.356 278.355 97.356 276.906 cv
122.46 276.906 li
cp
0 .215686 .266667 rgb
f
113.009 279.529 mo
106.809 279.529 li
106.809 281.791 li
113.009 281.791 li
113.009 279.529 li
cp
0 .137255 .184314 rgb
f
114.805 282.126 mo
114.805 281.941 114.656 281.792 114.471 281.792 cv
105.346 281.792 li
105.162 281.792 105.012 281.941 105.012 282.126 cv
105.012 282.501 li
114.805 282.501 li
114.805 282.126 li
cp
0 .215686 .266667 rgb
f
97.3237 259.973 mo
97.3237 265.928 li
97.3237 266.56 97.8345 267.071 98.4658 267.071 cv
99.0972 267.071 99.6079 266.56 99.6079 265.928 cv
99.6079 259.973 li
97.3237 259.973 li
cp
.815686 .215686 .247059 rgb
f
101.894 259.973 mo
101.894 265.928 li
101.894 266.56 102.405 267.071 103.036 267.071 cv
103.667 267.071 104.178 266.56 104.178 265.928 cv
104.178 259.973 li
101.894 259.973 li
cp
f
106.465 259.973 mo
106.465 265.928 li
106.465 266.56 106.976 267.071 107.607 267.071 cv
108.237 267.071 108.75 266.56 108.75 265.928 cv
108.75 259.973 li
106.465 259.973 li
cp
f
122.46 259.973 mo
122.46 265.928 li
122.46 266.56 121.95 267.071 121.318 267.071 cv
120.686 267.071 120.174 266.56 120.174 265.928 cv
120.174 259.973 li
122.46 259.973 li
cp
f
117.889 259.973 mo
117.889 265.928 li
117.889 266.56 117.378 267.071 116.747 267.071 cv
116.117 267.071 115.604 266.56 115.604 265.928 cv
115.604 259.973 li
117.889 259.973 li
cp
f
113.319 259.973 mo
113.319 265.928 li
113.319 266.56 112.809 267.071 112.175 267.071 cv
111.543 267.071 111.033 266.56 111.033 265.928 cv
111.033 259.973 li
113.319 259.973 li
cp
f
99.6079 259.973 mo
99.6079 265.928 li
99.6191 265.928 li
99.6191 265.436 100.125 265.036 100.751 265.036 cv
101.375 265.036 101.883 265.436 101.883 265.928 cv
101.894 265.928 li
101.894 259.973 li
99.6079 259.973 li
cp
1 1 1 rgb
f
104.178 259.973 mo
104.178 265.928 li
104.191 265.928 li
104.191 265.436 104.698 265.036 105.322 265.036 cv
105.945 265.036 106.452 265.436 106.452 265.928 cv
106.465 265.928 li
106.465 259.973 li
104.178 259.973 li
cp
f
108.75 259.973 mo
108.75 265.928 li
108.76 265.928 li
108.76 265.436 109.268 265.036 109.892 265.036 cv
110.516 265.036 111.022 265.436 111.022 265.928 cv
111.033 265.928 li
111.033 259.973 li
108.75 259.973 li
cp
f
113.319 259.973 mo
113.319 265.928 li
113.333 265.928 li
113.333 265.436 113.837 265.036 114.464 265.036 cv
115.087 265.036 115.592 265.436 115.592 265.928 cv
115.604 265.928 li
115.604 259.973 li
113.319 259.973 li
cp
f
117.889 259.973 mo
117.889 265.928 li
117.902 265.928 li
117.902 265.436 118.409 265.036 119.033 265.036 cv
119.657 265.036 120.164 265.436 120.164 265.928 cv
120.174 265.928 li
120.174 259.973 li
117.889 259.973 li
cp
f
69.4302 408.068 mo
46.0356 408.068 li
46.0356 392.702 li
69.4302 392.702 li
69.4302 408.068 li
cp
.815686 .215686 .247059 rgb
f
70.2383 392.794 mo
45.2266 392.794 li
45.2266 389.493 li
70.2383 389.493 li
70.2383 392.794 li
cp
.870588 .333333 .254902 rgb
f
56.5039 408.068 mo
56.5039 389.493 li
58.9609 389.493 li
58.9609 408.068 li
56.5039 408.068 li
cp
1 1 1 rgb
f
46.0356 397.552 mo
69.4302 397.552 li
69.4302 400.009 li
46.0356 400.009 li
46.0356 397.552 li
cp
f
53.0361 383.199 mo
52.665 383.199 52.1851 383.577 51.6875 384.261 cv
51.3062 384.788 50.9004 385.511 51.1387 385.974 cv
51.6108 386.898 54.0952 387.714 56.5537 387.777 cv
55.8911 385.99 54.2393 383.199 53.0361 383.199 cv
cp
58.3755 389.111 mo
57.8232 389.873 46.1772 389.167 50.4053 383.333 cv
54.6367 377.5 58.9297 388.348 58.3755 389.111 cv
cp
f
58.9111 387.777 mo
61.3687 387.714 63.8516 386.898 64.3247 385.974 cv
64.562 385.511 64.1587 384.788 63.7759 384.261 cv
63.2798 383.577 62.7983 383.199 62.4277 383.199 cv
61.2246 383.199 59.5728 385.99 58.9111 387.777 cv
cp
65.0581 383.333 mo
69.2876 389.167 57.6396 389.873 57.0884 389.111 cv
56.5352 388.348 60.8271 377.5 65.0581 383.333 cv
cp
f
23.9609 234.96 mo
21.5479 234.96 20.8174 237.603 20.5913 239.19 cv
27.3242 239.19 li
27.3301 239.19 li
27.104 237.603 26.374 234.96 23.9609 234.96 cv
cp
.988235 .717647 .180392 rgb
f
17.8057 249.337 mo
17.8057 239.19 li
19.5088 239.19 li
19.7056 239.19 li
19.9468 237.475 20.772 234.16 23.6157 234.16 cv
23.7378 234.16 24.1836 234.16 24.3062 234.16 cv
27.1514 234.16 27.9746 237.475 28.2158 239.19 cv
29.4165 239.19 li
30.3633 239.607 li
30.3633 248.676 li
29.4165 249.337 li
17.8057 249.337 li
cp
28.2495 257.684 mo
28.2495 256.215 29.0771 254.192 30.9375 252.735 cv
33.7769 250.518 35.752 247.189 35.752 243.309 cv
35.752 236.865 30.5283 231.64 24.0845 231.64 cv
17.6406 231.64 12.4175 236.865 12.4175 243.309 cv
12.4175 247.189 14.3906 250.518 17.23 252.735 cv
19.0918 254.192 19.918 256.215 19.918 257.684 cv
12.1055 259.55 6.79053 263.259 7.1875 264.017 cv
9.84814 269.07 18.2212 271.237 24.0845 271.237 cv
29.9478 271.237 38.3193 269.07 40.9814 264.017 cv
41.3784 263.259 36.0635 259.55 28.2495 257.684 cv
cp
f
gsave
111.596 404.75 mo
110.469 404.747 li
110.463 404.389 li
110.285 404.383 110.107 404.38 109.928 404.363 cv
109.889 404.716 li
108.765 404.573 li
108.813 404.222 li
108.633 404.19 108.456 404.168 108.28 404.131 cv
108.196 404.463 li
107.104 404.182 li
107.187 403.847 li
107.011 403.799 106.852 403.735 106.679 403.676 cv
106.55 404.007 li
105.499 403.587 li
105.626 403.26 li
105.462 403.188 105.303 403.11 105.142 403.031 cv
104.975 403.34 li
103.982 402.794 li
104.154 402.483 li
104 402.389 103.845 402.302 103.694 402.203 cv
103.49 402.489 li
102.579 401.816 li
102.783 401.536 li
102.645 401.428 102.505 401.307 102.368 401.191 cv
102.131 401.449 li
101.307 400.676 li
101.549 400.42 li
101.42 400.297 101.303 400.158 101.184 400.023 cv
100.905 400.253 li
100.187 399.381 li
100.465 399.156 li
100.356 399.011 100.247 398.872 100.141 398.721 cv
99.8452 398.915 li
99.2402 397.958 li
99.54 397.772 li
99.4477 397.617 99.3564 397.46 99.272 397.301 cv
98.9556 397.451 li
98.4795 396.424 li
98.7881 396.279 li
98.7183 396.118 98.6636 395.943 98.6054 395.779 cv
98.2637 395.888 li
97.9165 394.813 li
98.2515 394.701 li
98.2061 394.529 98.1576 394.352 98.1182 394.183 cv
97.7705 394.251 li
97.5586 393.136 li
97.9121 393.071 li
97.8877 392.894 97.8525 392.717 97.8296 392.542 cv
97.4878 392.562 li
97.417 391.435 li
97.7705 391.416 li
97.7646 391.326 97.7578 391.235 97.7578 391.145 cv
97.7578 391.055 97.7646 390.962 97.7705 390.876 cv
97.417 390.856 li
97.4878 389.724 li
97.8296 389.75 li
97.8525 389.567 97.8877 389.394 97.9121 389.217 cv
97.5586 389.149 li
97.7705 388.041 li
98.1182 388.105 li
98.1576 387.93 98.2061 387.76 98.2515 387.587 cv
97.9165 387.479 li
98.2637 386.402 li
98.6054 386.513 li
98.6636 386.345 98.7183 386.17 98.7881 386.009 cv
98.4795 385.864 li
98.9556 384.837 li
99.272 384.988 li
99.3564 384.828 99.4477 384.675 99.54 384.518 cv
99.2363 384.334 li
99.8452 383.374 li
100.141 383.563 li
100.247 383.418 100.356 383.278 100.465 383.135 cv
100.187 382.907 li
100.905 382.032 li
101.184 382.266 li
101.303 382.131 101.42 381.997 101.549 381.868 cv
101.307 381.613 li
102.131 380.837 li
102.368 381.101 li
102.505 380.979 102.645 380.866 102.783 380.752 cv
102.575 380.469 li
103.49 379.803 li
103.694 380.086 li
103.845 379.987 104 379.897 104.154 379.807 cv
103.982 379.492 li
104.975 378.946 li
105.142 379.259 li
105.303 379.181 105.462 379.101 105.626 379.029 cv
105.496 378.698 li
106.55 378.286 li
106.679 378.614 li
106.852 378.559 107.011 378.492 107.187 378.437 cv
107.104 378.107 li
108.196 377.823 li
108.28 378.157 li
108.456 378.122 108.637 378.1 108.813 378.07 cv
108.765 377.713 li
109.889 377.578 li
109.928 377.924 li
110.107 377.91 110.285 377.906 110.463 377.895 cv
110.463 377.536 li
111.594 377.536 li
111.594 377.895 li
111.773 377.906 111.955 377.91 112.133 377.924 cv
112.173 377.57 li
113.293 377.713 li
113.252 378.07 li
113.432 378.1 113.613 378.126 113.78 378.157 cv
113.87 377.823 li
114.958 378.104 li
114.878 378.437 li
115.049 378.492 115.216 378.559 115.389 378.614 cv
115.513 378.286 li
116.563 378.698 li
116.438 379.029 li
116.603 379.101 116.766 379.181 116.922 379.263 cv
117.094 378.946 li
118.079 379.487 li
117.911 379.807 li
118.063 379.897 118.221 379.987 118.37 380.086 cv
118.571 379.803 li
119.483 380.467 li
119.278 380.752 li
119.424 380.866 119.555 380.979 119.693 381.101 cv
119.934 380.837 li
120.755 381.61 li
120.518 381.868 li
120.642 381.997 120.765 382.131 120.881 382.269 cv
121.155 382.035 li
121.873 382.9 li
121.605 383.133 li
121.709 383.278 121.822 383.418 121.924 383.571 cv
122.219 383.377 li
122.822 384.324 li
122.523 384.518 li
122.617 384.675 122.704 384.828 122.787 384.992 cv
123.103 384.842 li
123.583 385.86 li
123.277 386.005 li
123.347 386.17 123.396 386.345 123.459 386.516 cv
123.798 386.408 li
124.148 387.471 li
123.813 387.584 li
123.859 387.76 123.904 387.935 123.943 388.105 cv
124.292 388.044 li
124.502 389.145 li
124.152 389.217 li
124.181 389.395 124.217 389.57 124.235 389.753 cv
124.577 389.727 li
124.65 390.851 li
124.292 390.879 li
124.296 390.962 124.307 391.055 124.307 391.145 cv
124.307 391.235 124.296 391.326 124.292 391.419 cv
124.647 391.439 li
124.579 392.559 li
124.235 392.542 li
124.217 392.723 124.181 392.894 124.152 393.075 cv
124.502 393.144 li
124.296 394.244 li
123.943 394.186 li
123.904 394.359 123.859 394.529 123.813 394.704 cv
124.148 394.813 li
123.801 395.886 li
123.459 395.779 li
123.396 395.947 123.347 396.118 123.277 396.286 cv
123.583 396.43 li
123.106 397.447 li
122.787 397.301 li
122.704 397.46 122.613 397.617 122.523 397.772 cv
122.822 397.962 li
122.219 398.907 li
121.924 398.721 li
121.822 398.872 121.709 399.014 121.6 399.156 cv
121.875 399.381 li
121.155 400.251 li
120.881 400.023 li
120.761 400.158 120.642 400.297 120.518 400.424 cv
120.761 400.678 li
119.938 401.445 li
119.693 401.194 li
119.555 401.315 119.42 401.428 119.278 401.536 cv
119.49 401.825 li
118.571 402.483 li
118.37 402.203 li
118.221 402.306 118.06 402.389 117.908 402.483 cv
118.086 402.799 li
117.094 403.336 li
116.919 403.031 li
116.759 403.11 116.599 403.188 116.43 403.26 cv
116.565 403.587 li
115.516 404.004 li
115.383 403.676 li
115.213 403.735 115.045 403.799 114.878 403.847 cv
114.966 404.187 li
113.87 404.463 li
113.777 404.131 li
113.609 404.168 113.429 404.19 113.252 404.222 cv
113.3 404.575 li
112.176 404.716 li
112.13 404.363 li
111.95 404.38 111.773 404.383 111.594 404.389 cv
111.596 404.75 li
111.033 381.255 mo
105.568 381.255 101.14 385.685 101.14 391.145 cv
101.14 396.61 105.568 401.036 111.033 401.036 cv
116.494 401.036 120.922 396.61 120.922 391.145 cv
120.922 385.685 116.494 381.255 111.033 381.255 cv
clp
97.417 377.536 mo
124.65 377.536 li
124.65 404.75 li
97.417 404.75 li
cp
.588235 .670588 .737255 rgb
f
grestore
111.803 400.66 mo
110.383 400.66 li
110.383 397.902 li
108.733 397.807 107.435 397.202 106.421 396.232 cv
107.394 395.182 li
108.269 396.017 109.339 396.543 110.756 396.543 cv
112.35 396.543 113.628 395.726 113.628 394.137 cv
113.628 392.794 112.987 392.212 110.756 391.534 cv
108.212 390.754 106.946 389.801 106.946 387.842 cv
106.946 386.056 108.347 384.714 110.383 384.52 cv
110.383 381.685 li
111.803 381.685 li
111.803 384.52 li
113.125 384.677 114.038 385.163 114.929 385.978 cv
113.979 387.007 li
113.084 386.171 112.15 385.839 111.046 385.839 cv
109.665 385.839 108.637 386.503 108.637 387.764 cv
108.637 388.909 109.181 389.453 111.51 390.151 cv
113.65 390.811 115.319 391.65 115.319 394.078 cv
115.319 396.039 114.038 397.493 111.803 397.825 cv
111.803 400.66 li
.423529 .541176 .627451 rgb
f
196.533 317.559 mo
196.533 321.062 193.693 323.902 190.19 323.902 cv
171.661 323.902 li
168.158 323.902 165.318 321.062 165.318 317.559 cv
165.318 314.481 li
165.318 310.978 168.158 308.138 171.661 308.138 cv
190.19 308.138 li
193.693 308.138 196.533 310.978 196.533 314.481 cv
196.533 317.559 li
cp
.815686 .215686 .247059 rgb
f
190.927 321.814 mo
170.923 321.814 li
170.923 320.274 li
190.927 320.274 li
190.927 321.814 li
cp
.945098 .403922 .160784 rgb
f
173.14 319.11 mo
174.211 319.11 174.987 318.888 174.987 317.817 cv
174.987 316.795 174.26 316.45 173.313 316.45 cv
172.192 316.45 li
172.192 319.11 li
173.14 319.11 li
cp
172.192 315.317 mo
173.189 315.317 li
174.076 315.317 174.654 314.923 174.654 314.123 cv
174.654 313.261 174.063 313.015 172.955 313.015 cv
172.192 313.015 li
172.192 315.317 li
cp
176.686 317.878 mo
176.686 319.751 175.196 320.329 173.127 320.329 cv
170.566 320.329 li
170.566 311.82 li
172.795 311.82 li
174.987 311.82 176.317 312.436 176.317 313.987 cv
176.317 315.046 175.553 315.65 174.741 315.822 cv
175.713 316.007 176.686 316.462 176.686 317.878 cv
cp
1 1 1 rgb
f
184.318 317.546 mo
184.318 319.258 183.223 320.514 181.142 320.514 cv
179.048 320.514 177.989 319.295 177.989 317.546 cv
177.989 311.82 li
179.614 311.82 li
179.614 317.46 li
179.614 318.654 180.095 319.246 181.142 319.246 cv
182.2 319.246 182.681 318.654 182.681 317.46 cv
182.681 311.82 li
184.318 311.82 li
184.318 317.546 li
cp
f
189.549 320.329 mo
187.899 320.329 li
187.899 317.115 li
185.165 311.82 li
186.963 311.82 li
188.761 315.773 li
190.559 311.82 li
192.283 311.82 li
189.549 317.103 li
189.549 320.329 li
cp
f
190.132 325.62 mo
185.529 318.442 li
180.925 325.62 li
183.111 325.62 li
183.111 333.539 li
187.947 331.229 li
187.947 325.62 li
190.132 325.62 li
cp
f
172.017 360.505 mo
166.177 354.666 li
168.367 352.476 li
174.207 358.315 li
172.017 360.505 li
.337255 .470588 .576471 rgb
f
156.031 344.52 mo
150.191 338.681 li
152.383 336.49 li
158.222 342.329 li
156.031 344.52 li
f
169.012 361.531 mo
166.583 361.531 162.566 360.143 156.56 354.137 cv
145.393 342.969 150.191 338.681 150.191 338.681 cv
156.031 344.52 li
156.031 344.52 153.289 346.495 158.745 351.951 cv
161.467 354.673 163.322 355.355 164.499 355.355 cv
165.681 355.355 166.177 354.666 166.177 354.666 cv
172.017 360.505 li
172.017 360.505 171.1 361.531 169.012 361.531 cv
.588235 .670588 .737255 rgb
f
88.7612 305.184 mo
73.1172 305.184 li
72.7706 305.184 72.4746 304.933 72.4188 304.591 cv
72.0269 302.177 70.6191 293.516 70.6191 293.516 cv
90.6587 293.508 li
90.6587 293.508 88.5059 305.184 88.7612 305.184 cv
84.1533 295.142 mo
84.1533 302.73 li
85.7153 302.73 li
85.7153 295.142 li
84.1533 295.142 li
79.8574 295.142 mo
79.8574 302.73 li
81.4194 302.73 li
81.4194 295.142 li
79.8574 295.142 li
75.5615 295.142 mo
75.5615 302.73 li
77.1235 302.73 li
77.1235 295.142 li
75.5615 295.142 li
.501961 .603922 .682353 rgb
f
81.3931 289.525 mo
79.8833 289.525 li
79.8833 284.278 li
79.8833 284.07 80.0522 283.901 80.2603 283.901 cv
81.0161 283.901 li
81.2241 283.901 81.3931 284.07 81.3931 284.278 cv
81.3931 289.525 li
f
91.417 292.922 mo
69.8599 292.922 li
69.8599 291.79 li
69.8599 290.747 70.7051 289.902 71.7476 289.902 cv
89.5293 289.902 li
90.5718 289.902 91.417 290.747 91.417 291.79 cv
91.417 292.922 li
80.6382 290.222 mo
80.0024 290.222 79.4873 290.737 79.4873 291.374 cv
79.4873 292.009 80.0024 292.525 80.6382 292.525 cv
81.2744 292.525 81.7896 292.009 81.7896 291.374 cv
81.7896 290.737 81.2744 290.222 80.6382 290.222 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (ivan) ()
%%Title: (1407.i043.033.S.m004.c10.modern concepts 2x2 set 3.eps)
%%CreationDate: 7/25/2014 12:42 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2Oede<S6>hAlYB-Dg+VY:6bK#*h95Ti>cKf!rl3jb5u8LF&fq<`*cUu&alR=T@%UGF9S>ujUu;X(>Q9@(k"[ee7;f0%r,
%rOlBr$Hnkj(GoDIaFF/,DXN4&jE?;O8>Lo<Pjj/,(+cqprJ'(n*HkUd\(f_Rq5mD9[BT>EBbpE5F83^'HuseOot.Hm44QuKVR3Cr
%<]o9AZoSYo="oLE+f_I$iO<*;$7`j;KPmCL2Loo9p3P(%W#LZ@*UR[_S&G<bJ+K:ngiK[RlSq&2ebm"/78(5sXnp[e47icVCpbD'
%J+N/>U$U@$^>G]&(8=^rZ+!QF.M`BsD5;9q;[,'(PQ)p%+8mNj+X-W!=iUJ3`J-V9B;M7:1tp76@2[frBE82=%R2K1!I:UEUs,#t
%U'+9I7b`-5/f?B4d>N<ZRJmm"&ep'T+9e*+V.^R/%8AKZAjKL_U';(\HI90(d:ed#?_7.A[ID%UC2Se9AuX6@pATV/@g^)o7t':^
%]PVsXOIAIK2B@SO<mC;=M5%8q/&"A?2T@$<S!>sQ3p1Ak1pZ6;E>V^aQ5'8j]&2.]rj\nK12GsDm5@aDmmos8<Qup1L1(j.8Rii-
%&@-$'5Z*MKcn+*Wemj=Me;ol'<C%iVNmf."j?^gJpR8.gC-j/&c#e*+j4,>R23ib^s!$eDXk4^WpqqCe1?eDdB#'/&S8R`7P[5j-
%+(NdSc.Z4!JV2@hYFD3Q9pc69l^[nlI3H?k(&^&NKb.!d\)7:jM&$'`^Xr*:lh&Qm_iHmM<kl?&XLJ3*hgDES3cb\tghO%CJ`3^G
%%aKO=Q\E:=R?3,dN`1Wmi-SS'k]lKK#o*N6*Oe:`KkJM/ppZ:`niRGh'n@O/J5WkG^KeP(N`@&sS7\nmhW_Cm.R3QrVUHuU+2YV`
%]O1/d"!WY<O(_eKK'K^/8E:plAtXu2$H.DQC<GdH!7\U)=uWORIN@W7-1Y#\r24Pco"AocX>!BU5BHP$kB<:!:"mie^O&g;Bsmk0
%&@;H7.2q8BO$8br7`*$;)LrpY>PXTFqqcV=BjZ,8;>$"F4`"fUZWp[5,uPi8@e-G$Z/I(Ye4uZ)gGKMWDp5T&ZHViWVcUP3GWG(L
%*RC91(NF]c?5(P#iOJ@Lgh=?(NAc)tL#WQ=NFXSCM3X%bePF"H`!sNQnjLqL9D$9bG<=`jp!E!-KV&XQnEn-mhJ4h0jE'"TU4mbO
%IjY*#<g`p!iA]`9AIqb[46uWG5cc7[=R(!u_(sOKc`_KH-7PW&<d"M&_]SEPhB1f!I[l`NBl9WKEX\3kc]a'33I[TcqX)gZ(Lr=[
%SH^YL*FRup;U*F>l^_DT34K8%cAEV`B)^rNj6q)rn:uXM5I4jn[!Q!IgDA/74IHqf`k`#uRM@V1ig%Mme]Br($$MHXKS-g'kp8Mo
%dY<UlIch-VZ"DOW/04T:7'VE1c]"R>XE<5M"SNhZ"9iGW::#)uo=u62bYjdl_q:MMG8$fcL6tD$T?PrUdrd/]pLbSTPQsDXb0Pr*
%AMRoCIcI*TF+/+g=M-=8fSo.+Hr\37K;<iL#rH,i^0:F`L'XtCD?LUW%SP&=`@siN`($fpFrZ;m3-^:;cAJ=U<khRUGA%i81IPIm
%2"UN0!jO?abrDTD/bO]T/!E'!;KhA[2%e!-NYrGOV2L&/KQ<LejmGSd=78-,+8W0F?<78N,FK.[goUd%*(coa`c<%9.Uoq&,D:m7
%6nB]p\[9@s>+T1`/nQjPb:P5)M!"K"8:Nb2l2G`%isVd9qL-g#FBOQH31R9lY?#grH">ANQQI5$5-'f0oD@RP4c;T:o`I`;,!TDL
%NmmH?4f>hNI]Uub2fhZa)@rq$Ar,cTHG/Y<Xr)aA:)BLQiA"??);6Q("O"qm59O^,a]\&,pP?HWWoP_Lmu-^U9>YHCnTf/-XPBna
%N+;0=\)4/H<VO#gn1g.U4tF?d;tiS-SAJhLdr$3;AeWp=-le1Ohfh+cX_,'*1jK:<plV!7-h0"&rHGm(FJiS%H6f6da0I<h*$S"%
%1b;:)Cns07L7k,rNINq?ph/_Q`aR&+p@e9E6;+f>NFOkHpR'j"8Z-4DJ2?jK"8VNnEjsW94[`G0H)=g-8/hVLR"`_'c<P`>YY^4J
%btF=W#;m1D,5!ANHTcDL2b,RG1JPlcUCo&Rc&N%,j7P#CDNAFe3E%9d(73?GMe>-pE2hp=3+alNSgN]n'lRaBm@:d:a\7"Br0Ae(
%j)M-5&A*=-$NF\Bb@_eR1Z.;hF)[?:ZmOCdUcbVZg-+8,[J\:0li+f,:aaP*jPemK>i[jogi7(8T1:(k_3kI;3=:j`*o<<ObJ<Za
%p1'q!h/7N\jK86IX\S`pYNY"#;CN#Anc`NK3d-f^(s<#+nXNhsi:W_$"@mbn1\6#T(OJ^E0Y_7>9&m?,G_UFYk3udV)3:td'th]b
%Z$;;&b36*TNZHdPk#d"W0g#&_LI:71@X'YW5loS6Ujr9bfsn^b=Yr)X]QAF[N6M!s83YCX@m!Z(e8`F3K!og\1n1Xtm/#eV(d&1@
%6]]HK^CnTHg@Y:P5;H_a;tde>hl43^*gM/OSOo$oE1f7PV7(2.3ZQ8#bSZr8oh:(5O)j7?A>[I=*j7UQQtgkA]oBV^CD:E<EV*O@
%=+NcNnVu]OAgT21i/"9e"*Ii^-M=^:@mom:btagN1K*'#ID-^`rp0iR"$5_<<eH/<;J]B]1g<\7+`XO4I\VD3ibt?\Gi;f1`<"_5
%p4C:k'/h1YQn1HX-ZGU)(/G4Jk?Qrdb0>eYheTe5a$G6Uj&bd4SfA_=7;'T(j8X<%E/YB2fUgRN[)KE5XB=I9A%`XR.+jt/%ipu>
%jrCU%X*OJ<9HHS-Mp?-L3#&L7F2o+L2:KX`BmL4@>I/EU4ikIYCt2eX7'X[*PZ.c@4Be#8oS(qSP,A.n<U<,qbYFBB^MT%pm]t((
%7H$T#e=.Ma(F:ZqLMJ<d^DE`8VnFJu*caaDU>uEY`*S[J*/V?Ws08sDHVr3,lf<@FML5[&U2[qql>;d<Mio!+bNiK!C7b-nE(u_L
%ch\OG7ENCr9c!KQE/irn$9?;7bkC.D>W]U:87_0UL[5GfXnH4i4il1PKr*VS1:]p:oS,.i=gVNu$.u?7oTRJQEH:pHjXG,9&\'_.
%Xr.;m3(+m.:#MJU[7oN4FpBG4?-ASHk2N$@<"l3R[o#jZCUnK:"KDc-]@3\o?P,>i_>8?/7)C+!J%MkRW<GOANM`=;VO0gm+qW3o
%9V]F<FQi\jqM2fVkOaMTc-:p8s84H2ZT1T/'m,J<MR9QW>e:_\AM]3n*OjE7HP/MXQac&JdZ[6@.;h7>d>]O02Vr^7R@R%-GTmsb
%2+9"93rCQEi6N<hL4@h5LI.#EJ*6<5Q[IYI,4cqsFP!82KFb7hF6d.Rr2ZP*9%S6W?C?_N=P9*3+Of-@OuCqU56q^2Z_NfOe_HSG
%]:Z:Y(%MgZ?/3GlN?sJST8dbHg8utES:a#G$fNmo!b3U$<Yre9JKQ1Q@U"E7AJ,/+Z::2@npp7]^d9jKQoTC.[gab%K:3ZVT.)>:
%e#e']o4?_RAO>"U)5[Hr?LOWIp3=f1V@:Xi%RB;"Afb4;!J3rj5=RDd$P?<H@9+?iERJbShs8$9I!M8bs1L9B`VT$/TnrAKZ2Q9)
%J&N?[31ppdJ/)dX'1Ts0n*F-hCVF9&=024(B5GMTD^H*U@a4Z4-rR/BrYoL*!sACj3Z-LZhKu^F`Fl#Z26U?To=S*L1GEe>CS^29
%R+*LH\/2DpB251CMRd1`\CG>Glegck4$uffMRu*Un$daAB$p@u07$H&\V`?:Ec=#5!2j*pRlM#tZLheN\9(ZFa[DTa^OXb?o8`,p
%f>'Cdf-&Z=c<G)!]U&$[eiI\cXjqE[A(T^.r_2D!DU4<Qq,b[qr0bWu--!s_=;c(+pr8^bMj9jd[';T8ErPSIrSG'967-Xo-op<E
%:"^b2`u]P%1YnNuVLd)8F5\mRp2XJ\7btLW"lI%XYJUE%aW#dmq;6km1Ks5,Qr?[AVoZIY5;G<MN1[rR^Y9=1:W6`6Le,17`/@1!
%Lr;r8'/(o]65)"'$UaJ<,4Qii0-]p1&hgdk]_GRHnQB$]('u7K5anu'a"6/jF9X148"9+<36L&/'2o?=<mFr^qm$O""3kPpCkCgO
%J@&ZA_7qKRrFkPE]gKgZRm,%?'T5%";J]BOn]`,S<OTM_a[BkK,43B)%lZ4;kr34o5`/d5KS<*f8!\J]-uNG(T!ZsY>Go9PXCMCN
%m7U*%jm_u?isVd9qCQ$eF.K@uZA;0oGAN+7q6P9)Ds^O'/58[tO0`o?.'b`@FV7mhrgk9*f'?VNLI9F.CRb`tR;'Pp5THtj-&'d,
%A6G>l#=RD9@LR4HM3aE(SLtaMgW8IKA_A7ob?]cJCXV!K%K5\E\Fr"hEjN&fZHC)/L!-q7.P*P0G*Z^1K,l"_E/*d'*tpb#dgTNZ
%.$#OSOM2rb$q')1Z4N+S4@U50?q]Q8dQMGl#"[f06lmST'.k`0.e4FE*u'jXa?gpM,IF&[[J*51B6f<Zl5ceVF8XWAO([?7I;Yce
%_WkdN;O&K;O;SS8ffJPH^$<,/@3UZME[RI)FcnsdH</6]7?77QcCD%Al*rtTDR7LG9+R8Z'lQ3Yq)%u.".4MO\4/#UG\0n?L,[8O
%(*@Gjbl_[4rENVb`!%CY:924K#q7bo[*Rj!8N[QUr>Ur@H-K.qDqpJ4*3VKi[<VW)f'KofkIj1@g7San-[XGLh,`OuUu+2uqd<:,
%S.s2nm3fHV-\O!Da@N=S\jKdJ;9BR/k@qgM(GhK4nAW:=b-u`fY`Sk/?BL(.*I#)%/1BRq6(p6Z/^)jg!\u#:'XG$;+Q[f9JRc%6
%^KFC#V10t(\KO$^@_)LY_aQC0U,`h1%<<\f3>'LF7WTPEQAF\o&C'<UH^KWPZ4tW)g_>muE/oQ,&^H5P:5!]?Kl@XLh:ZaBcVlgD
%`Csm\\Rdc+!?E6qkn!%8[p$32Nl,?L6p-fkG`K]+'\>(`5,cZZb9T'nR,@D,Mq`:)14QK\\0!Ngo3^:6R2Y:(?$2i/#/TV;0$'DS
%1>2tWQ+hEiouqW[QYQasC:0V4fDDnsPqMFsrqJTYC0#4QHH5i)q92)B-U1b%7MSn89[9Buh%Q"K,\O:YJ_XgUH-mc%hEdK5B=X9\
%Cs2PLni6=iFShW?;g"/%%\G,1-pB.]j*j"(Al(',&H_u:F46^IjaIpen'"@f:,,gd#e+!^DU03tL:Tc`4nuss\GL]jFir@W<?EWn
%I$NfQ1H>.0VbKdQ2'?_riO3HQj$"X<LMr].qcMO>9h^hi<]g>+NBYrTD-1humShd`OKcd7+M2`b*?c9-a(DXHk#19b:%^DQiR-c<
%VP_lg$M8BHQY?/VRIS=+.tc\rs4qQMh5M6M*m(]d,^^fp'AYgDka9WR9KP[ggRt'4B..sqql,<!T=_;UL'/KfguZ%$nU\JBZVi:`
%,CVZ@qNqBrlKicRcN0pcNIA!Sk]gT#i[dDNO,AqO3g*;oD0A$$*Ns\7E4OiMO=@N!\';'<b/OMbQ\mJW[lt@;2i^!)54-@09#"4?
%aE1/l@3ALPDlL4*4E,JqCh"5:aPpc`Bm"`>#;!/:*k0j]9PQs*n*l`i_+5>iY[$)HPNRj,F8;iF>eUe6iti@d*2nnX?@tpZp^TFB
%]jf;g(*Qp88F4)gT0g\2Nlad4W!E`B_%LAa--1(trN#'a\mZedQ[IldE*k4LD<C<.=O+f1)$bFN'YDR$;5F2WN-qML1473^Ff%h:
%euUQ0ND,o(lh9AomBN-).`r)8A:"u@bk#lF9Y/\m8DlHNR2J\c%dL>TM_a`tj03p0]:Fi2a]$>pL4Gi'&ahYl4CZB"G#Bc.,kVJ]
%ms%cRM:+1LP=iSm4j#%/j@RINAjIp-?-RPGRa#$\jSXY`k"I^hO:VYX"J9e+B"-(W-A<0!r6u\U1Qh@'>ij2qb['(8]'(7e6!Lcr
%+(WQ!anK^dhIJ@XR2/T(U8M/K@X1U0aOa(H`&hhVE\m$J+Q_Mr8GRK2dMGoH^8SX>75_J+WW@T+l',\-<pHm.&T:%r$1b"H]U"CF
%?bG,O4$2Gu4E$)>=AKVa[nSSFA0A@F]+i=<hLgr]*/KF;6tA6.)%kPuMhR*ZFrYk?7:_a?a=`6\SjdI^V:^eQLQp35NWVX;BU<1]
%&>>X#m6kWSda4"8Y2HZ*&oh$iK/LCl"qYk[Lb]Naime[1VMMX;lZfeCH'=4ecoJPndCpZAREepfN;DcZ\'b&kiLp@Oj0kWi#fN@3
%9AAN8`Mlo8NP=lNTOsqfXOru;O`B60Q<t:H-F9$i5;RMSK=*N0SBEIiEjK5Og\*cO/Z_!^Fhbo%i?qZJ<_UU=GtjD.Z4;@W"o,D.
%TAeZbpjlrTHtG!0EW"_>*tDS0fY-Hi32:k)E`O`6gpZ\@XKO^nRb./Ng4BHBKLKONO?A=rj#O&.9?f*9Wk!8Uan<(u(eN?DQ+<9>
%Q(;WFi\\=QQ_@,^1iMqq`\Mf*R-u&HRE8sqg?h$P*h9=Ea?K3.VXo!UV])@i`4N`]S[#j'2n<NJ;40<V&FV>Fa*UMNp=dJF(3>F1
%B#%N]bTt/^ANC&=oa\<QTulu'SMhEK,o1+3nIZ!fQc'dsa'fC]7P*,HdgF?/NEE7oM`'K5A-H%j*KKJ]VUgP0FQ+dT,->k%W)sk-
%*D9jI=KDmgFlDYFNE@"B6kWD!$XXoCMKRm-j6U_m5eg5&"+,F7e^Om68/.\]Rao&s^!Cb/0/G;$oBW@>*gkG)P.2=>G\9dGFGdV<
%6b(Z]K'PYprQkieFRY,iEVINHrRUGZ/GaVb*ssQ#nI9pe*"G0JBp[7[%Rc%&r>@@Ch%XQYOXBrYTQKS6j1<JmE),1GM"SIQf%Md\
%jh&46Na#_'Fe%UHofA4"'D\uhF(9<S583k!gDq5c@qEIKi>ZG'/66q+e&LD*an`tmoXSiB$VSc)9iLaVgp+nDp".W/G(]ubHd%2e
%UtX";bo(ZYDA@Qr:;.2Pj<SXHmc8j2[a/WtO(1p>opd5p1Ao5[r%WX)\,W>/5am;@kRir%&W%<dGS,e!r$G`PRY<(p=;HYP?UWmB
%,[Nmu73l2[T6Tn0LuYhKJh.O*,(VR^7ug`fPN`KRhMsh`1NAYkRjb-PVQ?<2bk?`)4GTNWIN\m@,lq_pOFhs`?M`(%pNhUT2`?)O
%748rG:o)aFgu=UcWE$C=FqI/X#9rQT0b:`N:$FTK`^#ENRY6AgR7EQhj!\eZ\t6:XAm;1K^oV&J`!oF6J*$'P-<\[D$X1*.aik,r
%QfT4"U6Udr9Y@0$UXtcn]?GB0Y3_(H)sgq-_=+s15O7<?=+$LY1B72ONd"0S4"b+e^?$r%->pB8)@Fu=%!?EAQF^)"GMO;M6-$*I
%Y+93;rppO0NtYE\TbilUK,.G4ncN2'=7MJlfW+hN<fQN*?Tn"OlK)3#P$2_#lLk.X8jtB4jq$>m/6ZplHH3Rq4u8;?a\Ps7;$@[f
%PI'I6L,/q434\_fEjte%(Ceg\*HWs)>3ko`^9B3DgB@(n**Z\,QVn5'=85M:0QDg(/TUU_K'Q+]?+n(8Y`X_8Zktec*2R].C2l5u
%?Z[Rj\*N,*S'0t4WLS3Ts.N.]X%/EAgNBC'53OWUXs4F8$_QXCqF'>Ypc*=F%ZH=A]f7^;0dI;8`m\oS:)k*H2&(u/E%*[qH/%[8
%%ZI=(3/RgukqJ-C4YSJsUbInpd^R`\7WDc4HI>QXBt`@MdVNFsVE6c/[ZS*@YfP+7ghJJtW=ef`;scUEl^#STTV0V*e;LR-RBUe]
%n!s'!\&i\sG\2?-B'Ztior@&<FV72HYhY)uF59ig-p9*CMA!t@esY!0.in@s+%DRZGhYLZR5m,EhK-$\3.P0,Meg8jKkJBSP\WtG
%0I7BP,MboIE1f7PHOV`]iB-ONpPM+<=bLb)+L1r9I0qEe3R5j,8>`Z1=[<@7S7hl%\X%-#aQk,o3Bc/a91tcM4#3,nE(S&8Se&dm
%F$p_A^Ek+s.C9Lj13&j6PCYSAbZ5rekca(R"*1lkDMkA@.q"J+9a#L!k6Os$h<?mEE1E$6$mnXQF]k,$R<PTL=?b6j:;uP[.HN?Q
%^eWVipRF#\0k;IiW>%=TqLmgO]W&J1ko$6fV;J?qAJ.K'Ugup#+;OIMAii?(B!#ZcrkWDlVOKqDLkA3L:HD7W>N^:j64.jalAbS,
%aEg[cEoqN,0(1N#FHDc\/_d68ZK84LqmSA"Z5DOoM^MZTe#[Dk]VQ\1l<R!R/MJN"j,9VJ^BT*"N6_Eik39C>6aq;SC"gMD+bG_Q
%oD1REEDUUT7b$gaT>F`R$uYTWkY)SteS/Btr73mK!jr$@)Zr2i!$6n$"Q0U%'7cDY^f)NP?9\ER;kiaP$f:\,4MACRH8X#mGcmtZ
%a=!)<N[(08q/YTf$02c@GDD;VQLaYPF=q/\o*4h,]`1)IDa.<*$AeHZ1B";TO`+VUjBmV*Om.'g]BL_X2HR5@pRk:t;K%G&X-qW#
%e'$@RNa1Iq+m&MT$u7V2s5kqm=h:pW^HEcZ\&RTK%hp+?B-m>BDXWdFrC$!2Jf,0tV2L$Ia*o!\R>Ch4&GtSY5"$"]AL[K9\61/R
%_&inp,5;hfT*YG!$fN<)];rbTi7\gQQ#(<a:,sqi'J=/B>ZQmN=Yb7+%H%&W1ZPs%RiKo@qW-TZa6UBV,;[f'B7SEZO!>a0AS'0E
%bl*N(['\i32JIm8]^Cmr8$?tMX3"P:(@'CS/^uAqHM3]jpmB.D@U2*k_%GmgN(+jD)B;7F6q1\[Tp`u8UsTq>fOH?c)RGql49Hia
%)Btr=eqo]X;&'t.bR]TPBS_U:.[eCR7RP;6k$pS%176JaU)M`%<KlWQ@ib:b9/jP(,E$G2?=-SZ&ch1j:bnXCaOc`4*).6SPp(!c
%4i=Ito[0jq4tg"-L"*0<0?3IY9j#Y)A)COS1mb#nXL*rLXa9q@h5S!+=1hfh_,-m$XSD(hh<I:USAJhLdr$3;AeXiW-le1Ohfh+c
%X_,'*1jK:<plV!7a751^TXW[*e(<,D_-ln+7K\Z^?'708PkI(>QFPR<H)(l-4r51<E3SlYb^GGfQIkKjnYM/0DQb#"CoZnX^EJe9
%:YlS]jj,$ih9e=P+j*F$PO6ssEL;I'ER%g:+L"\"S^#>tQOP9d:bsgX;NJ]/f/n)eYmt[f@@1\rN(ZYe<(rc%%o112>r:=Xcgl:W
%9Zeq>mAC`GGX11bacCGc@LtXrdQK,;::<(^nQVl<Nec9ePDT6&ZIo15NglI*s2i00-E\L`GuBiDs3^(8C%0,.nobq2]o<6R:a;U<
%.ganpC,AkZGFH`\*mQjh7?4-[R<]*7T$D*3pk;&DY\bnml?:Y2-#_$[SaMb6!lf,#B7k`>FMh3%^l.AV7fcrra[gA]0f(WCQZKF^
%1_92)#)>3VCP$2DZYU+iF[+pV[BbBc3PX%6A#M//V`Vpgm=02TH[7D.onMXa02%b1iQ:l^qHQCMr`q9lj0g4EdGT!5dcEVp1>=$"
%q*6HjnOWUV`t??YgX_)-CqBVNlap024Nm4=Zf81,Ym*-MJ&@>kf\2S'DVKB8DSp>bp76@R9hrTWl8Y*`Z4Z>?,Vq2cGbd[q?X`/n
%SG5(3C%@D,Wt#K6)W"D2UH$aW.j"@!Sf-D"$7+&ZD`l&t1O21j7m*=[W8j=#WLriBr8u<VDGR6U>k]>#]P63nID-^`rp0iR"$5_<
%<eH/<;J]B]1g<\7+`XO4I\VD3ibt?\Gi;f1`<"_5p4C:k'/h1YQn1HX-ZGU)(/G4Jk?Qrdb0>eYheTe5a*E69j&btZ4PRS[7;'T(
%j8X<%E/YB2fUgRN[)KE5XB=I9A%`XR.+jt/%ipu>jrCU%X*Hks(De9K7;"M6*/[eW\Vc?3RV?<k1qa*[X]`6;*ou8Y[VDsgU?(=B
%o,Ilg4Be#8oS(qSP,A.n<U<,qbYAk/_[juT<YV,Uc8)jFKaY:eDgK?.PdHf"Y+\Dd?Bf2rp7cMNa;NZhOq4o4HVqe&,kdu1a4<`H
%77g^bPO#n1nf?A@_?KD-[o$Tf8o!iIYBs-HH.n1n2.9BIlY!F<,n$b1=klrn23q/hj=J>,gNW"(mI1`5OhD,CZ83'$g5B,-+BR/7
%OrN1UHrhQLhKHdX\@A%\Xd3.lfV[E2chWI#=KiMJ[V<[8]H;I`\;f(l*Mch"oY:VTin208f]%JOm%8V9LBXu'=?n?V>Wj[!$fpBY
%^eEDMRPhSB27[$s$j5`T]eUC&Z*Km[a6fZddVogCj*T>Ip9M`o]c*#O1LW0S[aVqb8Yf!,CBp_0'i"_&C+Nq2aR#`>$N/:Ifo%JE
%?t)<b^@]9=kTA89S\ZA&[)nCs"TNX`6)GEK`Ou'Yk1pK]Fs`.=N^EqYhYlX/DQ^>s9;gOh=ucNf9h3XrlW3TgC;Eu@0/#-X-Jj^n
%s5gHa]l'%k/Ge+phhSrWa>+T-SQb@'/SoV,h2B.adr`lDL*(MPd)S^B(?hr+Nph>XoYmE'kXhi:Y8#JQ]2pO'iC_kIE7or^1:gD@
%-Y2Ja8!8T!6CZO,:K2_>\$AgY1-Ru^8M4pI@Uo8B5a)$W)rs(97fH3`"FEihggk_2T<Hq^3nV(Ps2>qDDR"2P1l_Z)gXb=JCs==,
%kA'fR6Y4a(8tFgYmuQp\!E*5]>JHZg)rf"fWC]>_Z[ig1WgM9AIpXAU0Sh9cEq<KONn5i/+r*"UZ2Z>UbgP^qNdFOoEr*h$>2+/1
%?8^,0Vfh61rK'@[p]hg?G\OslJ4s.[,IcBYM-V@@dXk.LOg5`dr;#Z.;W/pLq>mt\W71WtcX3M8m4\8)#_.MWCKNfq<rqf05#t_j
%D9t7O>@HX?l1@I9[0\"(D1X=Ak(2$DA3o0_+kH=bMX`jERZ4FMZe"ksj&ei9Hp]B7A,U<k#=UR[/f3[-G2;OmDY'O@G&(L)O['GM
%A5SLh;qD@S;3bs%!uVnl"ocCDMmd1G.a7jc.@Z'(_?\bW<*Lf!E3PHRF@mV(WN[b\f;SW:"OCoam8j,:)>[hS=cC/\K!#plWs)N3
%XM-]r2@S>>&Z]IPd2G2>Z>C_1_aal\=Z52j@9T+W5]3!Y/dn`r=NuEIApU]XY(1E8d4.85M>uZ?KVY?fb<j3Vka$I^(5Ap_^lWLQ
%F/+G5'86CF:'e5?7BX#ii2nU#p+GC-#gn@TRh!?++6B+-JlO6_&:@Q`<.Ig-5Y*@C3JF/KG_2qH?qA(pJ>#%BP,8M>'ELQ&L'.q0
%15@,_86=@6^lZWqjX)j(G<o>I?-+6jV^$b)VJ,:Q_!9^"%!NPh,tl^(KO`,c<EUXjFOM?=\>"tm/W][g'<i5ar[l$1MRN<8(#7%o
%?km]"iTCf-d^8bf9[V]5!CXHuU8"HPP"(%-7@,PMp&Y+;c'FTfIg'/T(pDBJ2H_K_-6f2>guMZ,0NQB.WCn.\BMHqmH5/#fAL.`3
%=]S6cc]:FBP*!-[cRIR3,N(R@>'N!b3V*JW"P2EZequUW,&e>k*[5dR9^FBT'4h@1ZD<1u(Tn-T_'^HMS>HH39+s",QXO"7kVqoe
%Mn:3TL"7]1nPcef876RX[.%sB[E,6QXM"sV;m[-/?u9egn8;^;3:%opqA-?i(AeLC<XYuEWT9Ht8q)#R(4sM?hOTC/Z'omcm]r],
%We#M7<R%mEbSdIm.dQjqP&*cMl0WEU:JO/9TBgpiflUY\e\4*Se&#%tBpc=[6WOL/X+kGSANpoKS)u_Qh8E9ICaqJ+!2jS;Ca*8&
%VPIEs?;Ok]Km]qgXUE>gQn:!r@(*l;b[>UOhXYqn^c1GT<QJTD2P8qlfSoG*r8Jd5XPd0Gbi.B3@Gs<UkOGu8>AWmGQn:!r@(*l;
%lsR9S/psQO>O6hNl&IiomRYUj#"'$T5me/=+=oc[JFEt5=<,>jdi^3I(F"3g.=;f^$U[epAdcfuQn8e0B1AZe_pbtp/Pb$UBri(A
%NZ5q%b[1DsZ5L-1[c5*XSOQiB)%3gr[qA>c84n86ER[^UX[$*qJ2_O<aU_1r6EiF'Ei1'_U_e^%S+lPAM@Shf;Mks2g_Jbk1#e#.
%Vjr'g.7#J(bTSJZQR+5r_cSLiVF3=[8W#-'7dL5k/kE;pAa&$A+E]krbOf2M/5AP<X;4ni,5E4RmB(Cd/`)A;%sJq1`T!.b]LmsR
%jG0XI+^")j'bDo=p]f1\ZE2aqH23,0g,?[*_GVpZZ,g,t,XoU%ZXk!]GsR.80/loda)#OsS?&u/!jceSZc*DYJ_:+2D\06LeO9%`
%f[p1[QH>h.K=laVi#FJ?_E!&E]P8CKM1mg<f`JL*0fqhURg[HcN>CAVbV"]N7j]?<9nt$*Yu=_SYQ/+:D_=*ioq/"eOTMoh%!8E9
%pV+Z+qUfSjr<TRHH3$M]T[RTlB:-,9WT8]--tG],,TBp[HDRST;%=<1&11uWC(@tFMXgps!Imf<@sg#=i4GL"[cU2op??b,<pK<J
%&%dLj,O+iCX*N?K#JB3pnhQtY]'!Dkd.,puc_YFtT(2Q%rpp^ahsGP+e<$jA6inJ06#e6$q!3Eb<VWm<od4K2l:/F=J,ShYRrLfE
%$i&D-8gf[#66h8>67\HTQ]W;O-2QZlT>k$Wa/],G5_mJdWT./iCmA5TI`$$rb"`IhB'sae+J<?*f,,25_MA*'f<(K'k3'.hr8.su
%#mHWc?E`C[om:SCb]"t8l?&Qr[$hqK-!%0piVBmAgLR.r:"fbJKg4U)]g$A#rB1+Yfff;qFLl6AIDMl`kpO[REr:Ag(k:b0.G0<a
%ccWNLFH^&f0<-h3=Tc*D*_CoRO58Z.+qkH+`JZCGJlr@2`cXG\W8FU]\hu)eK;(<('`VJNo$r?M)f*b[o3JMe_)&YY+++3FC;8M=
%2/X!A;ShI:d'rk0T1^^sQ)<H=MQV+CoZ5C6!mpFPl@1O,TL3GZ:VN]H\,JJfjuj1&V!EBXr4oh>6d0r=3rTj6s7U3@$a(Xc,uXj#
%4If]ehY@<kY_5GD_:rMGroT]E.H+p-B<_ASZ1KCi/BL11E@a=eXWBGtHZ$N@d.&65j^N0'U"&iJ";m2(rD(o!`+3aH*!icaWTZji
%m5[&nXDX[ep:p%>K,RCDE9UW/F:s![IFkTp0#!6D*[]9-]69n8[,"KNlS\N&a^>S%*A#Y)36c?q!VWOC$KiG5#0$TK.ao-f58Y,Y
%3k_kce#=(^/\fgb.##"+@<lZLhT@lfjD!hhWfJe_6V#sO4=1i8U>?_O'>#4PK5@KP)AWgg?X$:sQd\*Xj=*TO,KkeYNn\\<^YH\_
%qff6J?1WBfRHJq1!(5p6n%1H\h^BJTh3Qr2\]IZX80)-5%6WX!]24&um^Z%/FAdCf&Be.r&]c1]qel/&E9)+fDTDX0BLf-Ep4t1E
%*]`HYgATm(LSR`V_u8>2Rcf+^gasMSgAQ2FOG^--R\f!r-i3%-Vq!DB>\C+pl&8R=,BO1q1dC^*8ZNm3;%J-2nQTXdJ)n'8IQ,[;
%fY@V'Y2B=r:<s*OE(O@bkjY6*1P6QFCO=#cG"0hhgSr^-gM&Y'b<_TWHegtk\(qDDf2rubJ"6ic9"TdT^XietAHWL]3P'%8Wg>:S
%`:H_S)Ls!?3,,^Z?2oW-K;!tlh9KoK97@q!hnl[GXfCEVqB\bS9:TB8LJ8:0NcKFSN,RZKgBTt`3Pq9((<6Y_MbR82'6'h]krUl*
%$@D1of,l^\V*[>82BWpqCV#3P=Zd1K@pV'O;Gi<G^<=rBV=4;4HG=M_W(ldI#k8k=qOM6E.mS<KTogDFOWImtTYjeYJ4""Rm?2l#
%4+Q"^BEbjEmR;3YMR$dP,RTSG7QUUKeh=M]`lrqZCGS<)`"O/cL!.6(3P\1QBMPlp$N/o0<.1qZTSg:@^B(C]6&sd+ME+4pa0f2U
%Z;jhi,UkoD&aD_$h,8)_UP3/giXcTr<.KAL)QG5u'L7)sf<8PJbRa0-2l/I:hnMC%D'%qsV:^H;2Hr<GNSSg!8k<<GYC6s81:0(\
%RHQdFBSfl`h=;u!N-I>IqF]h/Y5Dt('a#Zb7fRk_E"A6\"7Gr5n4\$mq<k*25(`kHE,BtUg0as@4cm\5fRX@`l+4r=LU4<#C'<lk
%5``f10uUU$pp,%NgT7jk0gqHUk]+k;H+erbZR9H)7s2OohRG,.+eH+,ojY]%!i-BP$cF'SOeJZk:?Sp@:XQ+O&1#<*OsiQpq28]1
%?W:>2U>ip+r[ZCbjKl/_7?nQ8U]NiW7,7j;XPjC,aRhtCrg4UP;TB^:!rQ`K+"@*feDMchb5`H[<aic-oT*]q\[\sZB*JUg-0#X4
%DFV^Ug[g=\\pd9D,LiI8ojVoA0'7^l;79bGJ8t.Lr4Qdq-IteQqGG@33nA1m=LkIh$OX.^"/B8i7:i9@5gaiIaO9.DD2g'6aMj*=
%2^mcF@$VUW0MHj?H`_ImS'or<daF[g(U1C"k\1Zq:T?NSBVM9#Psj(IWf7qG5i!hbD9&V@<)[CD)GCYD<HO1S@_4@s(s.&G;!?q4
%9bo^j%-D`bSQtSlYhY?*OCBIjS:ILp\*KSD8&^c=!W%a$-EaG6P\el5J!,)MR,=`J4437;a((KJ^Jeqo>g8C"Wi[W#U`R,/=7Li1
%6`16L@eK;l_OXl8ea^EsF%1g[K-fjA/mYhFs$VF_aC=O;f1X[Q65rJ5kJaJZO;/,Rb%,4&YqC;!DHPZ3K"iXOg9%g^lCTR<NY\WQ
%]3"8Q'^@td*Cau-\V("TSMl6_=M_$T+;WRG@Yf(OP%1b7\:\Xg!g@(-nL%"hG.6+GcQ2ZOYE3#&fdkYO$2T[9])ArcV+W=RGNu<m
%PnO51Ke>R!7'W\[_mP?S&!#)#%H/_jR:sPP:=GHHPD4#J\>(/4J]g'Q>dY79280L=b%FI^_B>@okfa5[MU?#5=I_LN)ILM3F92s&
%d8M%mFtXhShVB]eZ;D#3buX;m8l%ZP[+b9g@-T/("!u?Wo>2>gI]EX4J#uO-fJtF\G2^XBmdWS/<Xd5X<`Tr,d_78ko/Er)\3V%^
%[FfR>>nP"\h5&qO76(V5aJcp`l&nq1(u;kt_R*jg=e/M=M,t6+W/;S*4SZ+W"Wht5nq2a6Y71^;Ol*>s%u\FFUnAm[n)d_:s6oY,
%UCAMQm95!;M=/;CW`RG2."Q(OP-p.ja=&?bP*jL]:kH4h,f=_HZ`Igk#=N1XW1oiVB[[s_)F2E<XN\bBMi'AXX`/Tu]n(b\b<2fX
%o:ZY7TP/7!n9&2%F=.qKn11!%aGYp>[K@("@J4QR4hi1cT5;3W#OQe"Irt+P'GN/Fo:]U09TLsnLYgpkJ*;(@DHJZVg6\'kBt(=q
%EGF]8(7\urjnc1)maJ*-0]cF%d&4sj`6_H)[cG=!iUQQ"dDn4MRsHe4R<Z\O8sjWN,pt@ldL&0beTshM#>.Y<*;mr@Rf2"]S,FV,
%5%"]Rj$]b)?7@<]U!?'ZK>BB]EY/;`(pnT%6&Ie5:pOk(*,K'CG)IYaNtR<(iB".jS/a:hcknKHdQ%%K3Cs_%O?hn%l=dL=-+41f
%PN8AkC3$kMKQQ9)*JsIcf_OXsp\gZg&h&`2WFE%8Pe?B?6YC453g(=rQIsR/.*WMRj"tA@c,-XPpBbZE3r_7eL6=MI=&/#V+>+9a
%H\^*\_C#ju^)+e/,H]B.WsGI0+HAGT@)(6.<A-D8L0JQoDUJuZ_[(ES"i6XD9K]g=$aSH+g2qVkF0E`>6U_no'Vo`PYTAAJ:-).^
%4fK^k*E`s.N1BgH3!j`"UFb4mi&.^\;?UP]0KAOWZZi#<4%cD"W+gQ$o'1gCDWpmB]Y=NucesR$/Zc2k2"<)mUqSTS13,m!5$At#
%*+L(t-tS006[N?'(J&3'TGCXm=UA9JFIkh*d6UjNN4;h8eQQTnB?HKK+j(g7H$kWq2r[!EDQC,T1olWW1IC4?R,G+__,Ao[pfD'1
%8M[V^Hp]]IW<CL'm7-<2CU#V@e8a18d6`bsUCg"MYiA=q6Em5\M6N1;%TjG`aoIJ>F*.'8=L(pcLEhd4AfrtPX<VI24UW?`*ed='
%;/8ih&^0\jMF:a$3l]1$HraBYKo%&ef*!=r"jMTpRUqWq9hL*4EL^88"WEkh^2f<eKc2PO7MEj/du._O4THSfD7/E3-b8=FUc=7.
%6EYp*/XGo-F2n;4i"YNfDMGbBRhM.%'#dYLN$Udm!"S,YeN'%jkXig1`-ZlsBftg7Nsc_q]=3,aroe)/K11T4h(,[3j6-q.cF_=N
%b[;:`KS:K=i8e/V,BIar3?i5K'emn*%DQ,<bJ`UM`?GF$J$u*,+kt7]FlnO1\'jJbFc:RCE[=3N,+R[\Rb]1(s3U7/-fp^6Bif>4
%]oDm!Mi22DZW<;Yf#Pq$B-Z*2;b<\S'(-+$^3\#.2(#:g9F'UqGbnA:GGeLacJ:3V"$9M4]Ea%i"7=[T.JN+6QsZCZO8'k_.B2BE
%<Ko5prs3$BWM%6gf>`a^LWa&)G$8NRDpS7>G-2'aObL?7d/d2aifn(`LSClCAUU9sT>2,\M4K72GTT^L:9aTq"GtC)P7W1"7U?u!
%*V[lVriKf$#[rK]!8%u-s$YFV].Q\%SI@%lNfT4!bYDWZWd+_t;KdBSa[NsaeoX$hb5k3;Ftk>P0ccdk&+PMp68lfUYB)I6U\cI]
%Z&9:p]UlKo-K^+NR-dS0DMUH<Y`MfBie2.;TWe)R^(k.[0Ftoq9<o9Z97g^!VACLm9#k/J]9ZcHX*>fmJ(:,44Sl_#rr20B2<Vm*
%9D-]Ko&`DSVfAtfhRrTgEc5[knWr>P]+9n10=HiFWuGu$T'^=>=80EkhV[PhX(GpIfsg*S9m\!Sh=?Wtq3(AhA*mLjai=0T]=ZI=
%V5up<)f'fp3^Ka3^!6-bDtZ*?2>;@=HhsgI/f#P$&%/fHqZmY"jiZAYq.Za.rpb,0qm="8C:*]GV;:1g`Sr]66,-=K*kpP0iBMc%
%c'7PBbHm>=4Z)Q;q<lMj0;Xl7ik+`_`lkK5h,qFnI,.ol()r1nV7D%dI]$5%Ar+)LhdHZ2ormi/9n1(\YZfqsk\XUmTB(Yn^-=)K
%jh79*ld$ZfV\MLq]3F1<^U<"KUS$Z(g?uZ!Aa@CSddcm\-LJ_VVq-W8llYhWea9C9Aq'&44'c&Dc)Ha>2d\4d?ej:[r3iomp7FHo
%p[Z/>>.*X#i[8Ya]=rJTS!Klca6\$]^TVt@?Ih%5\`]$?4,[JBV7knZ5EUMNNO>)h.PtY:^&,B<C/uE8(8(#uXdG)$:Hd03l.4B_
%Vn+B3?EVFZQ.>HKmQ6N#q:IR^X&<fbgKJT)OQHG=o?0epVJdM6-k@Eoju0Ykf,qZ_?F"^d25Rt_fm*#1ghM7A>^oiP]W.Jbpe'h"
%esli.Sf(<Fi37SehA^C%.&ppLQOCeg;p]`r4\>YL@)'A6X?W`?>Q!!eAdnUr)l\N*JS(^aqn!dBZM:N,c9AAFhgS#;D_5gUVmRrq
%Q!Mbp&(9IDBA6'Oq>'hb<mgfBlYEmMYJ64I%!rEU*Gk",1JhiXA_;^?;&A<hVajk3eHema[okm@iWbKhXr3jj+4\e2q8ZsT^@LRP
%[c9K!\7qJHIC&pII/9pdE`)4h%NeaG9.,US.Sqn8IXD,+eNRi"q#7oJ8r5$96<h317^ZBJZ1B.V[#_>0rHPqD6jiTJ$]E=PXM(O,
%KJc+QgSaW%]1q\1bK<;PF7E:8h1,HpN0:#a*<Se#ajT0\bPjCJbp;Upd0HD?K8W_q1M_nEqt$)Y05jH9oi:d&8+L=^c]#3]`nF#Q
%Id,p)Y<OS_J^KF54rF5/SU3mh5tq/YoLab1l6"\sAc>PR@I(ciqQtYtXZn8HS^*DZ*^3j;HU9"kMIUS&FS\l^3k)j$]n02V<O'46
%_fQ_&cr%32Il:Vu%_cfJ=17BI/P1D6<i^&e)BT9KNYmPB:#C3l5-!E%m61ETq;UJOdt(7Z1XH[,TY,>+k<`Bkee)^tWP85C2;I**
%E`MnAeD"]p5I9ar2=:'e9\+C!Xnn@8oaCnmbF]<1Ka54C,/2X`eOL(9dmjeEAG_9\?[d;=[!M]T0MR7.kOtM6oM01]ddd'ujV@7K
%I"bTtJ,I/3Sa<i22r:+l3gFRJbm.ooI8S_t&k\t5^!qA1<#upX+(4%(p3--"kG+[R1/WFS_XsVLO7rW)T0=kJq<]R"Ec7Ha!/6Ik
%oB>1*Z1R>AE>+dt+aQuCFQ:;eFKi1Io0c?@O=-+3p!Vl=$'T=-WLPTr]-*%4!&n2N>5HpfYCR$gJ]i`.M*:h@bj%r=Hg.@&'En6o
%4\YAV%i:j$2,s-^l$-p;\`J*TC<50n/94X;p$0M:AURci+MSP,cCZq-q31c:\P<+#<5e>'*)4rUo!5-,)t2'Qbek5=NrdP;AS'iZ
%[qDAf:S1;J=_0s,RQoH?YKr0iq9G+Mp<D9d^Z&VI$n6_ASKJg`nh[B7,V8VI5(:0=ljZqnUPr!5#Yf_hmihWtl8:+qIfn$b*tXl]
%qYBY>Fon-V:Ek(:oMXQ!qG<'\Kmt+u:Hf;9q+NBBgH23;G[bS3B_!(gQ7L<&jUhI/5(22&?VAJbfseG[d(q<pIMFAZ>Jb\^OL@V.
%-d:g>J+R);4ZE&q_diZ.jjG=:=NKeDku]&qfd?*]]n+=uKp<aD"p;]b[$URRF!=M\]_i]&=sk&9d%h#WFb$Tc"G2k]U@BG`@:N4[
%4[M0A+MUA*Mh8$8F3ma(H[uMXM#d9<ggP\HPplUKE2\f%4'O,?/Q*n'E(#!n%3HU='ON\Ya:18B8[oX7asffPBbboP81>)^qiqMJ
%N:[jBEj_3dZCs$!)B?kPN#W06>:6_5Ac\#1):_R=<8C+d6)Wb[%B%0q]UfcK5r2C"_:T`j+Xfbo"WABL+RL20Ib:RYE;8G`8)^1(
%LdbfO9t!<"EY;<Lnrg1eb2BVB$t=iTBYh>)@tPLr,12R"g"`@oOUW3eI7T)=*4-1GK6$gf>p^R24%_Iq#NRR$8oMU]=,@WKc78`1
%cMd:EM.8>.4ip'5/3umt'^S/B$0L9WB;Y4%=9isJTea5nQ^XbGqY;Z25@:gRlj_TtGH[GXC\`!`DW_`+>G!i`%SZoIgj8(hGOf9S
%9ffqr\Gbj5Mnmgo5E*,m0ukFL<FI]*U*P\j4q8Fo`E4Z=gCW8Tg,'k'Mn&8%D"M;AIG1`deB<V#8^K_)Jn@=o\OZc/X7]@G\!NHH
%>5?_?T3Amqbu;)ne3&1a3puAn[MS[=k**RVPmr)C*J>P*$U`=q,"*M#5>)5cRtm[Nek!jdU/lBeP.\dS&p(2Op8DMNH$NA<fm3.:
%TE6T"l![/5nTD>5lM[2JXD`%?/pFl3DMPcYHc@C7p+OB=dO8EBBafY4d*1-5")B^;[pRrmjnbJ7nVVPc):Wa)k8*a8<TX5CX+R=k
%I4*g/%A"b47HS8grh4F1.K=XB]&ilE<n?Pq\T@7nT?&.=BAZGTW7JiB/Os+]EHomAI<"V'*Nnd!it.pdM,<86ifIhiJl!_K6]<C$
%*oU8tI!O[2D;gKNloXu`#EQ>H(-c]=GgDtaZLLPE.M93r@^NSR=0+g[F$ao&0?=\iX6Kd\3p]__B1a62ag_oCd5.NbB\&oWE;7;"
%(I\_R:a+CiqpKo#"YA1>/)O-pg#\ccAfZKuD+.?G[!aupU.X=u>PNf$a,$Z@B_D7lErGALEJM?!X_lOd8>9=qcSbs3DsNH:a3?9D
%o'Pb,#7*6Bc2Mouc>Hb6?XA&go%>e!HS7>8*,Ya8*uhCd?D.=<Y4UlLn[hD=TbdP;l$VfZA7"uU%]-j?BC.+O-Fo!^T11=,FST>1
%ilf$c`Fh91Vh';F/]'1W?Ys-;01$Xt=H=ft.OJlDD-e\fmmTHoq#b?=f'jumMeL[<k+BY+8oCG=BP(60nO_Lg^0,j_cM8?bE+3^d
%^%usq,0l*naiY,da#g[N0K)]gb/W1_Fu0KObgZC%ihGkkl#4m$\pZ?^p)ANaBEjEm5BkQ35&JJU)f'@6(LoH`7JH8Sebb+d8gePJ
%O3kbD03,`&W6h(Ob99o]OWI&BfRBYs+/_&<=>$,`n_1uX@q[2LPL[`(%a="MBri/J8*)PO4e=Wm?_F9MS\^_Arjf=Rkc\"/qBokE
%fuL9lL9'B+%`C?^,L[Lm%@P>-H`%[2<+#@B`M;/X`p2k3Q_DYb1%&,3>:d;j._+:5g%*99+4`=OOZmqi0&1C&;5@LK]:JLk!iO75
%lY-3]c,RRU4V=C&ei"'8l6d/;;0RBWM,B>%YXnXfTo=a;ITd\kmsfY!obV9()lk&1F%O]469#GNm5&4jf9\Z>01b1ZLObYRjrq>)
%<FH;#Xd.`9_&i,$N!F^`"/IC-="!n>U\;rVrZ5[E_"^'B\:#ha^R"15jne[KCVO6)2bK^OX,$\kJ/?1fS*+jZJ?JToZb,f)?0Pm<
%"6ZGm*0UNke,&u3BA"Wb_8E%5YH-M=Wt#73r^l2D"SV*E$L#ak'6%0i]WI^,?*"ICW]^13J<<%1\+0'8eW#$nn`lIBZh?C9;j:Y%
%>@M+[C$Xj=cfN;sb?c%\5sF&X<MDN@H]+GD]tESgUcKpKjX9*AlG:N#[C.ZJ*1M1MdsBJh1+\$%Ok!Y&m,r>M:Wm=krq*_+jVjJ^
%PHlEOqUP`V,6DH@VmipWnA])Z`5#tUQcNXVe*;_70R:h<V5'66T>M$,TY';Kh=#6_<otC^\aa*@lh/gjN2/heO_MhH=8cC\XWAL#
%C@@GEd-,t+E"@naoVODDo(emUi_-,g]ONj]78UHp`nIJKV0_t8_,nldD&3e#^eaNm%+SC&>Gue=f,#LRSYD:NDkF.ZC+%hXg+hpS
%dDP"el%;LH^u=:>m;G48<Kb<@3Art4mBb%bo;hbHlK?U;aeO1hQ$L(_f"8tC>YI*M.!Pl%^PpSRl9i=2:t[=H"o!"HpHtdiFJ=On
%8(q>IZF#$X1@:iX>Pl.f!&cd4Ysm"l3#G:?/2rnj,3K_])8`?8QQ,8:g@%!!VY"Oi*U`(Oj5.sRmGn/S0:mX?*cpkoS3MW4/Z<?s
%pgqphgjKXja`]0u!KE'Sg;fPI0:d`0X?M1(iKG;TA6$)+]rio64RA>>I?\NP<hI*P>sgtUCY2::^<HcD+'bC-BM9S[p&.4<:"aJ7
%KOXE0ldh,;h1"UTc^oB&p>5PhHDT[]mgl6o=gr?uE:rnTb*V\"=6hBdJQ(DF03>UDqKuk^FEB`DReQD]#YnEZVj5]:9k1?.QZjI"
%D?u-t6en1;!r@4rfNKi@g:b6Y0TFYMqM-.C)cH,=#/5@`\bBW+L,eoZ5%,rqK@K?D+.lcBHIXD7$T%i@:X!`f22j@J[kTfC0\7fG
%]8_u%n`BFr9)3H+\2)[e!,(0#k8W^K-S:dObVauJOl&UY"\\"JK<5daH%FFcICZjAU)>NTBErV(?_GKK3fIDV/kaprk1f;!mb([[
%'R<M];Kq@=)$FUW-LpZI1!L^,D(5qdPEC"/O'gHlY^TSe>oYt`LK;;k2A(:V9E5Eo5oTbZ=\up(;Td;TcBk*4SZ`eWc"0+?\@5Q8
%8l]9Z+`UB3ihs&d?S3C)XN-S"RBb8A4BYcA^cU!,+O\p3aV*a)CKKDuANf)8gGlD,>Qr5:=4W]*NsPDgVOZ?0G-,)=J$ie,8"-CC
%RkG<A#JYA.eumJP;DIU3D`7#f5EZN+`euaEMNPRqc+I-0*HUVm_-uT<s&L!q0RBY0g[Md^a#4m`7Gk%khk.4[oS#UZEstYGX6W8[
%qmF*BUW5K91b?8H;VaNP]i^k&mc;dmYM7@sh>9/iNQ"EY=J)C2q#'di(iD"8/RY6[?o]-;h[lu)?0\=OH8a"a:O[mc^ABqqaZhhI
%5?&]sg[:rihh5A?!qKIW:5Umj/V)=0[_MXua5KL5\+Z\#IQ9W"_<'3Q\e%m4SHa)#cq*mPmG84S+6hDFNH/p)LYI)N6g\)-]m4W*
%2RD,!j5Bj@hii4Jn#V;q1H@8,D5j,.^A`<,YC-AI1f2ZNE2ih8>bRb#Rfflf,r$cQIKj$H@D5ureAc1Hke67EXdo7,Pur>#gX8*@
%8G@tOqJGa>(RPsCa$s?JWo,.9:.]g1\7NkP?`fQoSSetI-%Mc"l[7@K/pt09IeE9t:D0n8J%M<i\*k6fm!9V4jNEFcH?Sdkm,K=^
%[3>BmnY1'Xqmp%cGjM#`"hpc7'hk#<DE%c7]s2rn6%_fl4.iU<0AC+eV>'(mrK0$hA0Ha4/k:_%#[(\SfW]1U&KrZo>8Np`Io]0s
%)su2SDSHnkf(VrLj/6]8Q)e-7Abh1l;Dm(VD0PkUI<RcsB9FIZ0_(2SBWH*W\7@0-mpk?fLP"/7j7&7Xo)6O"V;*_de]p,3L-/cp
%=.5t6Yc&oWS!RpVbKOf@W:CqDm^RaEMtVme8gt+/HJdN8e/'SbgU5T&GmlaeY9sjJUm_#7QB#-qhi285(G=a!22Z\NnbV,9dau`j
%n>t%\4odDQaU8OJ(D!*bo!3Z:_**Bap[#lEa4'a+!gqq')CbX;!3sc-;h4K$aoeF1k/DDI-N3^"@.pXnS+1C0RI?hMXW)0hCF_)M
%h_%pkjEZQah]+55?f%hV_hHjNna:&'6nC`;DU2RIC*opRGklgMdAQSJ\_d1o8.nWA'Aj5o2_@]PTBu3.m;Jh&T,+M!"`T75j6^U]
%r\s0$Ko/0iXY.:lX.1fU>>6pk<ckY')RADnMS=#"?W8*,P.EN^K!qq:Rb%>g?,95\#N`/G`s5HW5(\C:Qd35A8-FcWq[GO)qj#2`
%F-RQ$0Q)IJlM\V0q;pT<SMVA^!oUHY*c>'*Q>.8e4D2%@rC8jDVs)+%-^*h'c&K,LbPfl2Q?`h"Bapg+Q"?lC._1hCGI/-.^9g?f
%NdZ>fBf:02jRUpoY=e'3hcL2""6__G_*mqHJRS1K,@2m]G4sY;cDT[88+o$^Gj1b<-d*Sr.GOT_2chW#2<UZ]rk="70`UDA?KSaH
%DgD(@5Mf^o;Z0aa*\KC.ak,uu4cpmoB\\ANi9f2-VH`4op&CW^'qV$unCG%b!BImB/X4?\^WD,"K=;pD2oE7Z9M:7\_B#R)[Qejt
%4T*/.GiDTg(+hIi*&Ltjr)GK'\4=h[?M`JaZ.eJu8,,PlCh*^]eP<gLF5V09DY(/aDfLXV.pj7CJ_2K^#2\GuLMqg^PGiuMhC(hd
%8CJB"am=F_ppXrRAAp#H3kfl<8*\sa?iQU^(CGL`,)0!n2sLVH\%?2_bP^V^WdMBSTRE/%U%$h+b!YOR.DFJn]OL6Fn%\kRa7`0n
%i6>h%8^_-sZ'VGY\uF^/^,/J;OWmA[C7BmN9/_'H2A!r6^gqhf[Pn)B!D0,NA/#r3r=AXKLYqjipLX8<%nfBaiaqE8`%f$.(1g4k
%D)J1oS"$6(%*DEtEBt9P8Y7]?lDfMU6.AV';t/=m+:OaR%FJ3uNVoU3s6tZ:>F%UC<[=LiiG0*n%ART0L.W9iM'dV3F;S$4/D;S0
%GM+g1Z>(=D;2UYhlOfs#j'e>uIQ:HO;N&,'ag%:$9$e]+/gSS.9/?!&<g.D:%9'NAm0+2O0'lV(N:Ff#)Wn7r`8;[8[QF?:fK]gT
%gFeqP!WA*s(`1/s;*K!"<E'Z*L[OEBJS`/A6[Pi,W'J39[4>jJ6s.utWf<N;"YI9`^kfq0Mih,RjOoW0=[boen_'QrPbD[SHE>qa
%6pqc30NKl<,HPdM?Ri1e<&RohL<ql^)MS!@_M@jgF@V3=8Y9$knFXI,)*WIsTjc9N0=JF?-:/Dp"gDmD<(d*>?F?/"5/W%FC`o%r
%7E)J:eq>k["%g9R2UnI1@D>eMk-Y9X'VVFFp`94)X$t,s9O]9l![+kpW/crN1^"=X1^u\_(^b%U#hm4#$4--#fUIC,n\D.B@VQh[
%)C:L_FUFP\SR+r=F/RWR$ZtrCOr:AgJ\erFjsLV/C'0-(W4L>qad+IlC.-!hb6:m!RMO:hkbY:H,:^EZ(T(J+JaP!A=Z"lj&JZ1"
%/POfiU?HsN)EnoKQ(i,1!8:jM+E*@E&o0.n^k5Ln_I=*9XK#_.VSRa\03[9b'UCVe-t//T$).GY"pS'cjW[NPU&up#Aee\rMjgB[
%.#>^N%9?*P@`<F0bb>iU.\a-_ab'U+3*'htb[FTg$:[as(f9_<Y[_+HYk):'6TiAcUc\\I8'*,ESk_UsSFW+(_FLdY-1(+Yjcl.*
%#2U7^*QD:j:3riO>Z"KEiX8=-]!QXsJsgME^k2hl9@XBH#non>_XGhZ'-KqH,8*%AZ7\Xi6j2'N4qu@CW6gXN6<FU<TWJ9gKIm?1
%GUi&S5RY.Be2#)W^G:e17?#;@%1)=',7f0[_f[4+ICt;.-7DX:!aJYYAhd7P7Sj=Z^b!klT'NtE0/]%iL@Tk5Z:PITM(m7<Hf.oA
%fmqudT.K9]LK#:r"EBhQAs1Q;a^E:+NI(JfB#H+9JHY+/?&f_"MM?j$/$(6j$5t4O7T:CSD8>e$C=Bu'f.80'C-Y,?&G7ZK`]7PZ
%NF4Zo4$1lpd5";?Vj%O7Lt@q#5(%e#@(3<mRfWJOR:l%C!_EgZ9_=r2n=mX"N!LNPlTl%&]O`CX/'*BUU4J?L.J2n"bqpUgb!=K'
%3N=Pu@4ed@O:cJ1C5&T5`@?I@V8jJ_-rh2VdXFX(_S4KfL,k24M17`q@;&UX_coL%A(laf[%aFKFTMYYb6T?tRN__E*+R0N^8'_k
%K%X,1=;d'IeQ=-6GLd<h'9HU\6/%$s%^;S:Xd``\_0:8RkY##)ltoSB+A8K,j=%b&e1!A4a0*6?4EV,$iMgV_T60:6.tW3!1#5=$
%O?f(AR=*@U_k9q(P&3Q-nR7Y\J_:j'^]Gq!+WCaq2'epqX!eslDPj8'b"FM6&Vu!35RL?=(^9j@)0B":@RL<(C.4._'iMma0c5k*
%i4.G_X0=&^X#1jY@+\pZU$`?V=B$j2.&^m:7t*s<UjQY4BdEnC?<9T-(g^99`6GiaS-Hi&AQl9;_[NP]A#4@r1fT?5!>2Td:nbK4
%=\C*]Fc$;MDQ#J5OWY/\7_pKJ.B87Sa+t9-gNL6,J.T/EO<)c"<=<D6=:^ish2q9-\WDEf"hb8"0m6Z!_[K;(VALbR(jT9cc(/0>
%7,T7o;b59rFi?0uB+[Z455G5BX7Ru-K4PFb3*X42A:RWQl8B8S"#K6M#n&=h@9GQ..EWQrFkqq;B]Pp]OrbhLZ\D1d$*,R#"AMe=
%TgY8IL1HLXJl[Qm(O?3]HNAghn$HG1Z*<[_9d=nY)CH?Dn5iSk7Pg&1kUOem9oWhRl&[VgJl.E%.M3i?6q@Hu"i1I1(KqDsUH86F
%0r\"Wj$Jm1GVRBNN`9+\N"g%_U'<c=.LS:%bTc0KakLdckuZ+j*o'8F_mQp.bmTT\WW[`R]cn'L[5<e8\*N5nc$EVj]?!B/GmjhL
%\9LV71eR.cam1Asn9@[XUJ+umq/Aa*WIEk2KN^AsGV=ga]OBHi8co'LW6k!'O%lOGPbQ$VTsJC!QDUB@B:5207mA;=k(#N.o?.\/
%JG=YS7\".C3$>:fVa8o?`<LfZ2RJ&ZZaI'"JnkAms(",7+9K:hnQE,s,"g3+])*Yu:dMOY=bs'ZC$HQ66nJTWl9;M6"iRA25ukfb
%NX?Lj8g7$%;AT%bf5!t\N;7VX6(Gp[8S#WBg7d4L&k"-/-E=l'ZZMT=hZ6T?+@NIW-q;)`dAT?DLgmZt0U"O#!K#ls_9K4/6p\_@
%Y$q/_W\,P#c/PKA&Z2+XCNX&k^_H9T`S(_K,]XFl((_\p=A?\LN_]/(&4W0P]f7]3Hu4GmbCQiE'$Lkl:FK^17CFnHWM<3T*t1fo
%W@nua/V$CJZq)!E>pFF.K](Mfe-(3N/Qn-sE838hJ;qjVTHG(-9.%h@@<E/2BG[;#W":2sZ3m=_WmbDQ.,\CNg'pSH79Kl5Je8r1
%Fi4-;d[AKl8^O@N$p=JA6j$6b$fOp9]rlV"C6,(IZCIAN=WpM*AMBgT>0sYWh\6qp$a=Le-J(pA7\T@AL"e@LRVZK";i0$=;W@Ha
%cn#8=,cEPua#*!@DU90rN^b\c&0lm7%]UB*CQsj<@Qm8PQ@0C8>t4mN$<)i_Cu'5e0HNa"QW">e8Sd7o.O;ljBEn<H3nXpBP]R$l
%E:dsOi^H()ZK2o,LK)-5OZ:`Te^s/dVNAT^_j.0NUk7agQD(Mu"cOib&2b5"Yd(E.@Bm&o5u!!UNJ*6&&r9JaPQA>\netDn42%L2
%TY]qc@]W>OJ=c2M]/lYkX%&Fe'a\,daW_$N+NfF1BsnN#@1R$t;)8W='(PA5"^<K\$;Hprn"GdRC"Xt1KeNjU&u#NX:mH8[5XEb<
%8hj!nQn\r$7huh47$Q)QLU[\kdL<E:J?okr'Dip,,`r0CKC/A`Y1a0!M@?hP4D,AEh,c&E1gr;_-lPK!<1G\;_5[`A5fO7+M@:gu
%1Lt%D[*T0d.?qfE?U6CaB=::11,7.\EIl2?PtTVbKMm[oG,!'F2)M8)A_c(Z3WUX[lVb=<WmXb6YRdTD,>atC3bDeLj?^(bjecV4
%E=)[Sj#E]^hPmB3*:'80<)gAjJur15aXF/="[+66BghBdVC9NjA/f?$E02Iki0Y^AdcU\+`>V\u![HqdPHODL'$3b9_V!<h1L;UL
%A-o^mC0G%JPG>Jgc3IKM6IseV1alA0/<,Z1J1jS08LAFo1n$CbD0osGD+qVh7bn:7Ts,<*]69^=6Wg,Im(n3#i>)]W%(chgB:Iq;
%&n^fYZ=,V:Ho06fV/nuAIa_kMPS3DT)^%Vr,L^0rjq-(+E&VIC=0W[`:a)\pAUTY4obf1YEK$W-\=Z,T[8<tBWCe,]#>/-05nQ\W
%WZo61p;e/A*74;of#WF9#;j8KJC7n*K:lBm8MsUT!@1UAC(?fMPsPm5E#Fe$5iGgH/^+C=F_6\4eIXo0VbrXc*&K)E"ri"ZP,29^
%]+U#rOfHP)Z^.bgi!bQsm=\s.mOVX:.]+`t.]QBEK2l;NB:Pn)3h.pf?BeR#3DNS*AK0A-LfA3u!!]T6?r'a)O-<\4:"`?Qe@d+B
%hde>'K2`/9-H,dP;DaPU#EhDB!s2=JPVWqd8&s#D'*U8?ft^X%BX3^FW<sj^'PHbeUBOVY02lqODDe02DojJk/.iPL0:@o@/%'-2
%8;q=WP,q'f8<Y;5SXps4.`0]7V@G&L+%nK3A>E-f)bI&%F(g4/Qk>d'%oRBLK<3"i6oQqsV^+no[00(Aba9G$&Yn>6TF6]VQ@g&A
%n.!?)@[2aKV7eT/gJ/I$(b:uQ'F0BF9*2OioBjmN?&>&5#0k"h2T9?d$>to&NDSssk)7X68Q8OfF^UXMP+o!s')!1(UWQc7TRs8e
%0lI.cR#n*N0%$5U0qsN=*UASfe54c;;<&dWDMfa._c.pq*=tRILkZ\F^*Fq]R&?)\M@(o7MJ<VL.S>JH6G+<51''t1cp&N`pOEuY
%E;,$Z%TlRGG?nEm,75-PB5s,lko)q>eH)n+cbUS,$Q?Nf5`Mg?N"d/X3&P<(TEH.&ER]Z+_]$NkA(D@jBBU$U,&8)A`[e8*QgJ4]
%VO?"Ca2/b7:h/'57V/n3.(1]2NZYNi+D4VQ[2>l8)^bkViWZ#?Q>OVNWm'JS\31iRnc=*;(t>gOPeFo3ZGq86id`3X$M/A=rRAYX
%P8/T_2Br;5J2#%Ea*p9R'Q?;`$L(tb3=n$QTHQqH83/ou6CsH4N<n*+ID+$-Qm!_`1I*h]L*hUkoqEW62je^BU9cQsOiGd2=`U5Z
%aFQ>Qi5o`67S'tb0ccTSK0:/O'4$9Rd#C?!Ml:XF)'5B#nPc,7P0M4(C25X>)5G(D8Us78MOSgS`(6kX8@X,3*%=mbi"7Vu5'5_J
%=c/maP-/Ons$6*':;s.i9n*^$&7Ghu!>Rp,H[m"NK8T7k)&uX64O\m7#6lr1[&4OS'dQb8?k(dgB$51i">8BY[5an43-8F^'*TVS
%ainK09/jSVN-/fs4t-;a.b"&Hn2qg7ZNBmB_JOMD/"O5qN"j?>f@<8Tk_j2\Lr7Y_1Eh+8)/Nr"N2fh&Kh9Ru!]QL>%^r&6TS'Bl
%p-gc2.n1`U6)S9_:DAai@o+jG#)O)X;7dRG^S[o2BNK>fGEA8sLa5iq&(F3,fhOsKV4n*+Acqd3:nL%m0H?:n$>*s.H8J!e\;O!L
%d<Cr[d!Bq3K$n1e9dk!jrX^;SJ/Y?qpRakWP$nU=M(04dADG2+lVTMO+_iO'Z2UD#@$?\(FVs;=Rc"M7Q=Q1A'OtAX(5`4A6j+u'
%@N`IMf#W#2"#k+lOYH$kCCNX'Lj^C`1W]A5fjLci:d\/>aZaYII7dbf;:,3\NT-747WJb?Cnm,IBn1`2@P/!.O.[C#<>B@BX=Xn6
%8"W!3O:$MOO?=QLnXrWn&bR@Y-jn!?W/l\!Y&l.\N?H=Y7b`jM/@*YD\o1_$PpGl]'NB,4!&F[5Jn@b$#E9R;O3f!f1h$uqT\>89
%eJs$NX`'>C4,U.UaW?!]nG$ik!s/IY9F*!?0F<>G;/6[aR8:V3HV#-(&3&J[O!(BI:eF]=d=YiF%(>UfU`"9"*sjdkL1V/I'G;gA
%A&(MDL1"pn+t;;9B9FmGZ9`+K8_GV&JADLq<!:\S1$G3<.Mh6I):;7f-Ga>IAg&?"p);Y_22*jpWb42C1^KMkK;M%a?Cg<q&2]Qo
%e'W(Y<Wd'E_J!U=J3[BmSYh^J:,;ql'uh6ACl=:1C(\!2>$Td9XfDb[KdkcY&OSmG5i][6\mY]R152;_#.l"A79(HrO7:()QlAXO
%T`HF+B(WK'T!=--)\u;do#PFE'&;J^g0mADOM[0jkec<V`%lFO%7Wb&/U!MOU+9o!0@(DZ8iP7U7#lTrp7^Qak9,L7eRZq)D%3qV
%WCEV73pTJTJO-c]`7S%F5tMcrl1/sr$dBO.)H%`9AF^'gA#j49[hde:)WO_LiA.J[Rju]W/bYipZ!b4V'iXbe5jPEn>Ho59c/_8e
%aFhVt\N$AJc:ViGO@?B1<fN*nm,LfSR,HO/h6@C-8p&]Z%,MbF8s9u7af1$?:L"Jgn39Su<]*A<P!77*6L7M#76F%S`u$$tb\@GE
%"W(HQ'-J\+6+NMa#+Q!BTIH?UraXb=/^$\,QpPVZ;`kD@?lA-,a8CQ1HOp:!/RGj1cGdbka1YEO(@.^?bWs5P\6.h]I[j?TU4e7'
%I&W!oW5^[\JX4BO7'&0kah,R(CImNS(nUfH#%8[p-\/@;RY_8d1Hn/89ZtP7`lSr"9!!M=Z,6!]EaV;a3b/mK/_s)71<:A#X;XnC
%CS3,7A@Q+)0f2I^obWrraQ`="UQus6IP4G`>KQ5FN2ER8kn4G4d)!Wt$e?q?TI@-H%B;%s7OZad/+>GJU9,2:P9HBNq(#.E@%iBa
%UETk?N7)Z7TZ>+.%E[0kdt23G[%IFb0+4>LYR@u>fi"Pn;SU/s,s1+!O.$uH!,B;+ph'_-!i\TFM<&>5PS=e8bd'f3)KhoeL4c'`
%$HI5'cI"lZB;?T49-YY"71bP3)F!0AU=bDTZ=G#]Xdp4KbYjgC5R]u5&d79'Jn`;_\Jn3GUNIs3-0E(K:n/)S+Jduq,gB^S.B5uT
%01]$8qk-Io?)5OTUnjA1`b;_R\O^@Tcmb%j8Lt$.V`%U4@gl8)CBU(sKV2^6hi:8W,fCBOTZ*0+@liWC,\X&IJkD<"r$BXP7G#XQ
%VA`B8eB*E<a!A\@$">`Dk,Tm>@ot8&>Qbpi'A)M@2o0OXd<?6K$F]VfOYBXmNjoc?8/YLp/K1AI>"#$D.^L^cL4L#/oW4L;&2b3M
%=Eg"f)N19'i;B'\d4f)FBeiCdLPuj9R@Jb8&jhA7Cjc_'#X+t6I8&!l_\6ErAGi"RG!YkAZOP&%U?X^XR^d\3oNIA74EdjZ)E2>8
%-b@<')cOf/AB3'h&N4?=l54m9oQj@m4f^>dS3;(BX[mePDmp?m(crfn.KmeYb74d9EU"6H3'9)C&1>ul6ZI?e6njY5?EY$&_fI%(
%ng'Jb,Te]);3?0p3_c\NT"@J!:1Z7!Y7p1Y,'NP4:s>N,nji)S(K8BA6ki"N3u--7Z29>cg:MB%LP'n>S3!`!:JDq`j3+p8'AAZ5
%#(q7hS3FT`O%gSOPGb8gnHi`"+68X+L;J=)SNbDuO%g_]PNSeRp>N8lL&9rATn&b3V[rUFA(M"_a`GpdrT(5!"TH>%%>Fe73dpKn
%+.GIl-dPMX!$G'3T)p.THRK1cW)KSpkYoqX!m#H3VZNgS0mtg-4u\i=Lf:&k/4nr!$'<OO8d\D`BDSt8;s/_M!-Nbq;Zeah/2E5a
%Vb%C1]/#TnTS@79'ENJo0M+MK(ebT>,<0h?i!Mh5S3Mgc8NC'$LHr4W.#U?\JSX<YW(Sn58YFSL>QXT>#-nPT@R??`P>S"8Gp'"M
%LsouOW6l[1.o;:F0XF%C\`n/C,_-iV0&Z8ql159.nshn]5_ePB3<fbNYE`ZAEVrY)JN<O)B,ZLPbEX\rnp%@$38m,#%l\Id&"^n?
%B96sD\!\b_V$=Mj?AslK2X[:>MIiRW!u0;(h7U1LAdf1RJb_W;,2"@58o[?`(*cnNm89U\igdnJV=6kZ,LVKlEC[c<]m6[m)SqT8
%bbc-g/Q>bTB"Nff4Fr*e+FYFp4)KgD;Tm]gllPC"DBH^D(O/E3h0;V3=N.cc&&,;s=a2QifQR]'d%Wda#NKJI!^>h6@0]1%R7NPN
%EWB@b4_XI%PU4Ee3Qu*!`.NcUS5muP$_0`"l?O7sU_X?!p0*hj=GA<pdRZ]g=h&,'k%<'PLh%/U2JT1J'bE7UU-5b4YieQ>LrLUM
%2Jt.R:bUHE:!a&eo.PpB:oI@7jso&kThhW^+:$7gSPT`8FN^uSmPX(AK\#\#*[/ZQm=pJ6/P\ft/(n1OLihr<3@_j'W1%t&$f+#a
%><kM$,a+_<Gk-EU5_Z(H"g_[://gq.Ubb&@.ju=hZFNCG,k=7/2<`TA=AU;J3c,6P,KkMpmFnKVGY.tF=>Soulb'GIbTAV\&'^oJ
%h!!l_M]dmO."i*N>8e5!"`#65Ws:gQhLoLFNC+JQW$.0c\`lauh$NO+_=LN9cnqUK:]]t)`f^-"aB!5lG>6%>Mg37!>ejt3^/8oG
%G]<@WYIr@(Vi._;I8>6WHIH`PG]07/)qn["</Fr+MB\j#.WOMTa<QDo08T5L`19fRK2Qg,)MP3N-s7f=M@\]Y8]uog9K_d?YQri-
%U)"q-VHZUi\=G+DW:[/,I8C<_8rkl!p#@bEND*OB!sZ7IAWXs%'dQ-ANR\cZ5Mijp)'o's6O=Aes+mT'1m1i=.WJ=I7'MN0,Z@U_
%TlZ$^La)-V7VMplBZ>ks+^ql';t[NNiAEq24Do2''>;j$:L_rbQV^i,mW@5=+.`\Ql`k<d&!?2D!9'$8P@IR:AqfZr6^!I[9hm%o
%2.WLY#Z'Mn+A&H=B9,qbS^o1i'Eg8KTMs[2_G3_a0H/AM[[WOi#+=)9E-O*$;TSi-!Zekh%cnA%#&DS!7LP&6d4U&XFL=WX:&P>?
%7f9!W6eU*]n=A?A\4eLZA9`foO6lhQfsr`2W$]>,oIk<,@A?QId\L(UX426Sc0U5f3g#mu>:*a6#rFJe[N&\18So$_,oBI4cq%c@
%R6I*V%(2M`b)#!3a:o[ib7"fW9[;XkPSLVS)bg?=Fs(`nNd'O0`0\K-A%8?S8K'>L3.e#<;Ue+5,Cq:MVf!H"!.*]k!BH(5Qm#>%
%nJ!$\!Fm*k8CB>3R&\7d.r/lHoi,a[`*%>h77I@anhEZR7FJ.c_>FK%ZB55.AtW*19E-4oA/m7)Vr9<NjY0@QT\AJtCiUjk%`]Vm
%Z5HMJQYRKdD$bi<Ej=]P>eV,-?n,iQ.[eaO3O21NUnQ.l;//oWaB5A#,E_$'^brg-PKY=n.U8h)jH5&N>a;Ta:DDbUdYM[NYZM`T
%/aiN_F%00^oS#<@Y&Q=tZVEPJ:;*A)Cn"t-E'+SMTtQ15LIFd&:/rcT7A4[r;,7<TY\7n\%lrV8(r>L^$M5f=T=V0:da?[1[,CF:
%]71["PJUApA;WiI+t)l1"J1s>?ia;&13>u@WRGJ<"Yi;kVSOScHCSSl>l`@hGV#"E""l]<`-cS5dr-N2QGEG)*#8h1%9'/m(a5)(
%_M6(mM.30<_$X1_XTRjq8Nf"S@P*bP_Xg]@j8isQamMdnbVpbu")lUb"bk<T[co4J6H+#lN(Qmt&p#8_)KF=b>@AdB6]6bV>S'Di
%OncqIGHN*IGcXnTQ33sTZLs#t17R2EFih#S,Tp/50Q0jTC"!o#ZVu>:Hs7kfPpA8Ad.J_o2^.,d+nSo3b@[TPi+rq7GK4;!M)e"[
%Q_g<oNoHHpiWJ3nHTJK46Ohgm!&6WeA7ho;K-DD>&[-F&<&!*Lh*SuC%te*8#Zc?Cc<d#sX=R%1#0lKmFe,WSdQp7,M)FQD@u!e[
%H5`STLl50(#SIdth@1Y4(eXF_;->e]_Y)?M8+bpDHE<>S1\R"V4c:0`n)S@k,Zuo!LaG,j.T</j(SM&<%$:`s>?:D>(a8Y:&?;T]
%br!Q31Fb+-CihO\4Yk5(EZ$g21-Ui#@:X+]EfI6"j,%u:#&46]Hm1>6VCbO,[3O^da^e-V3A`.LS:;_M`Zd$?i76J!X7TFK#nO8F
%.42<P4P4M^(]`"kr-S9H*DI$dRIoVc(#:$c)-`T$'=>-n<gtYVA-K+F3=/:fT:i8ZWXr3Q/I,#_]&k/E["E"19mjL*`%VK,mKd]K
%<i-PWI]Bs`NcgEk0Plou`\U3ki$:<LVW(Tp-m.5'5S&7YjKXM$<0>;>]>)G75*.Tn8%#=SLdmd8:O"0+&M`-bJ_*iIbJ9NZrP-DS
%F^(aO2):b"P0&hYn4Ca8hmbn)S;WTp29*uVPJ5;?3jRB:<>%e1[(pV<'b[,!dj1If-t[G/$TVKc%6[f<$iEMR`$Lh^JJoSi!jSEE
%AWc(:=f6hUM*OZ9T].^X<;21'$:i[6Qgq9inO@qIWu]Ys9FKm>-("RmPnhN)A(D:i,\o<M2Ff[hoen&kI%rI5WuEeHJg\;Z4;Nk>
%#0TosjifX@O@`eB7c&OtI]JG],9qItfqJlPAG4`.k=<kF1X9N!!RqEC,GtG>ZhJ?#H7d1&i;3NQ+8A1\fJB>pIY#lWmLoFOpr55I
%BLBXE5e'$O5S&`Q6h'VRrdEs5&UE&r.TUC%c_51_OAoKBc<FgiA7S)?"MA'nn:12)r\rL:,b.])$@e8f+k,u?/R1(-:,hk[TYiP(
%>5'.'h4:d=2l?E&p0I#&Z+(V!@$R6a?4\<C[h$hBdMLiP'5V<46.h6.q:E)%Zh"A:^Xh_Z9/+Y6%]uqUg"**rc`;qUDoKL8bA;(#
%Z5TPtAWqaL1!?=M`mpaJgSs>N`L"-?3*h[U&)fU8MhVZineR[IcRBu-8?bu,N)6W4Ya\0kB&"q0@d%UuQ*8L^.pS:1&F/9&%Sf,Z
%NOmJW`#e$j#[3lM:u(%S'2H(l4(Y_4:\*AWD4r7IWj>_FmSFU0V3!qXM##BA=#P:a>FJN".47oegG^&@!:"-<FKuaC)hKHB4RMqo
%0nCD`"N=6%$q=JJN=*eCN+>9ejephHpk$0.HXIDI`!unZ;GHQ*)3pn`)-$Z:qHH8"C.,de[3Vbk6S0>onu0E"%*pBmJ<c"'U@^nD
%/)3t4mq;Z;,f"?u1S"YUDt$8M-fdFH@5'(%cCVgqm+Jmrc^oZO4l:bS$jpssTIdW^:`n.o:hE]NMg@dPgT[VPH*CuZXu!%Q@E51X
%M2X$MHD]IRl>RVWl;QEAWQ1=/@8d[G:s3uND6e9(W#e"fL/H@#cDZ^Db,T<jh6EtUFiUL')1S0bfpNSIm?eW@g+b*LWQ`LV<H\P[
%A_3f/mb&?(gt?hr&W_I`ZG/g4o2"h(qTZobs4rtO&!=8QLHP0+@+M+8g]NNcC".HNA:oC1_$3CfJGU[<q2W([S@C-G!1LICS4Xjc
%3P2qEG<_XPgW=:2c,8G0AV:4@g#+O_rqHHfq!P%Er6PCWIb2@6X$?RI++(lSj_pnsDY]E#s.L<AO$EPqGZp)".m,_m*V.)^JVTEc
%qTjZDIUtdC7U$bMs.NqTFfI1S!^>H7T+IG:2=VT(.)H"+f>T)M@oERuS+72c0]_7!Y)2(glVa*$RuSRI2N"JR>WWP7j15'F09:d9
%HH].u>B@O(s6Q1o:XSgV+#a/_lZu?B0(GiQD-kc1TBqn.q!&d37-bXEp6YX7T-EN`5AY&9Z>i7t/garFf=q<f"7-9'kt-l4>rH<0
%14CBMLSm]>j:>HulXmH![I,R&%BX'n$n8PXW<o:GZ0\Y]lhD/cTDW-hO1tL/B[)P3]-2:N^S>_&^:$+l&7R'&%\_?MoR-4bbs/eN
%Z=Re$>eV.\2g)SM)V`!\p2GfaOM;:-o2?o_nqSg!<PdEF[HMqo%B6$K\ou5PdH%1'VJigpHA2Q;7nR-'c-GaH.8NgJ^5UPV`gWY0
%'(X5r^#FHW@PfoqXdp7$/GBg:qb<2+2$BF`_MLGnR^Qm-4.E]HI6H0eOff-oZdr?qYMh/3s8@'>PNpqHX@fMP^\tK9PunMkVY-in
%[ajs[^VBfl+91t?msk0Us8D],H.`!#rq7q&?2K:6s(D5ps)$Egf+'7uri^PGp]"a[rR6725Q8?D]#f\:,uF1Pggc$1gY8O5,1Kd9
%XPARB?Pm]Nn<mT[8#&KQAjj/T+mGhiJ9r(diqOdj+^1>RJ*1fJ<SOim&pB!l(U"fb<,(QiXJ)V4DR7Q7K6M"KaQ3_dba+2G"ZHUf
%NR2a_2SD02iV5;>Kq4?l>H^dWErUTYch]Y.D>H@7m*UI.i)U-)Nhdd9@pQbN1`%*jdI"j[lC6;@@nmpR`<".uU1.6rG_4<r5LB68
%_Q&#$r]q=-Ed*j=AO:?E\,5dYM(,$2-=?GO!R1*UAeMetj)Mb2WLDcDj_\&?Fc^/5J5fXWO/%)$ZL0k>$)SXM[toCuo+#gIfEEOI
%\OZ$5N#EhP]AFb?YfXG!KQIUu-tr)nXi5;Zc"dt#d+s'OJfDE"?<,%5]Pjq,l%Q+5'+3Q,<5$2,4pp"6er.l5pGQ'*4h71]mdZ]Z
%lF&0uR('Alp@\T?@g7AI]g6j`(Dr9]1Nrp6Mp3C"^`PWj1nI_24NqCQ5j(oM$CJjBDUI8[!ntoXJF7i5^$BsfU>UHaGrLejSJCD\
%GX>!Qp]\"aouM?h#"d+d>Il5/gJa$j]'ZMB!ab2;L!d$Oi#CG+nAmf*<+:HmWpT@qCi^7Jg"M!fBXYX?*QX>C65'^OeL'8L(,OIu
%Ri^Tq:5r7g38!#80g!bR`.$.Ap+e^kY#YL]M2fK.EO;i2RWq/8htFlgE0K+b4n3kFp653AQPh0B+?&=apqbW:2,LsPd/8P6H#$mh
%6Cb_LbNVK9I\(nl]%<M9^6&!Lb5#l$]&`\8<aUjRLgmjiC2DUJh!1pIFa[7B:NppEX1W[4MK9T"(SSO)"d6S.S[F*/s8BGtGs,_U
%,KLO^[5/0WoN"D)H>>1JP"+/-&bb=86G[#)DlnEl<tkra[W;^f2hqL(H7K:\n3q7!NFru9->#UYdN1!OCPVd\md]+<!nto\J.DEk
%*OE<,?gDSnB0.WlkOXA$^RY;Wang9QR?$0b'][j>b3D""WT@,@XO,pmcs^e-eO+8]9m[Q-gZYkQ\,!*mH]sF1Di0HIfO#-6Z+eU1
%j^qEn@QkVIJ'!]L)-Xe/$B+$B9khk#5)-N&8doV+*;`;_Ss3oHL[%n<G=q21csY159o8RrZ+ktsHP@ZB9C-#AZi?S1Y\dSq#Ep[4
%h&ssE6UKe-"G@"F,_O+Z+2sW)&Ls<\):#k+*E@elT$>U0fS(X:6uQO'fTV)smbN=Dr=H/3b0dHHi#RN'FZTp>6rgcmUO`qU:8g!b
%kVS^PX@T8;=Z=[6P]*@?BkO?p-2gd;[Y*324jiY,h65D?H@=[Ul"XG._+dH:cQpJn-"!Zo#mY=cj`Y<E/M99#5bK#TOkOQMWHsa=
%!qdAaS=V,%MmTX8>H9*Dlge7XgV@%H[N=0u:^04V?@?\L41q\.T-F"#C)7#i\"r]3S"#O9*o3Ehnt:,"h;mHQXoE5g?!m2"/\qH@
%5le7Hfhb[#>7%Ng`-mFL"KE<Q#snV:/%S<QRcZWKGOY1S(J?IOc$)ZrJpPH1)5Ub;Oq=[hM$PUR?U"1t4Il-7VFf%2C1c3-nV0Un
%'&`KT(6&rjR,-<fGD77U/07%j52&n&NLTbE^OI$p(aQ2*/W_m5U'",GNYl>l>$Ga1%URa?X`d5eQJ/t@i>fb6mPn=Z3:RbcHBS<l
%jJ#1HVa'XtS2p%5dr[Bn#jsDKEXZV?+H?bpS5N\?7mXh$8@_S;04t`L2&b.5m*3F^+)arKJ)K,n9hg\LUe&M^Lk_:/TKu8-Ee^?'
%_S(5Ie>AN*Z1`Zhl9nsfl!-sB36`DWiUr%>0<n&kW'fW-E$TmE>_q_lZoOclpl[ONhK'/g2GW>HVi8t):*/ID"E5&e5TGnE.Va,R
%.=^j'aqb<s$?6)FOZ31s[DGT7cZ<&9fRXU=N=c3!UV1i6dDFO'<tlR8bu2ouoGBJn[-Ao/+P?#t"`mSS!Ksj2,"gIBZ\_QDJ>YIA
%'69YK``@pjDhM$ofD1kCDn[A'_)6NU&O7l.AKVM(=H/ogReraX!,;f&5on[8nk-cUbc)N53[[`R,M1[1]$/Y.'UFPXj%<(dBi&F>
%q8$JM63H[c?FWi];c:gY[N3;XbWVYB[LTVfe&@D"XV3Qjdc3ojX#agJZ6UTi'd\\_oEsGkRAc2ZMH%:*`fX>V(uG[^DIQ1)d1K!]
%'3O:fin;%@D+AMrC)E[J]_(]eZ]W\2J<-99]FkUAro-\8"?BdX[2]+_P.br4[FL#AF@r()_5M?jP/9'Mi5i#=b9ZBJ8qRp]M<qG<
%aZ_1_"(DBGb,%I]c+*-U+WXEaH"lkYl#Cu]Feo>OfX-Pj]eO=a=>ZA]Af//M5+L^#DS2pa;`61ZCS/R_LtcN3A'lr.:nr\'?RAAH
%oImP-5_b6K2!;N#o[`CiL2jfu$rb2Qh[:geo.=D&7+'rYUE^4g[VWNZO6b^Xq@1Kh?WW8e,6IW_Fk'1@bCiirm'NBFrp2OAN9&`a
%s-42I?;6Hr3(i"TfV='Pe[>?8*o"rYP[+NX7dXN:YoE-La&"3>A]HOIN/?i<D,AOZd&-lD9AQ[cbbi;m*jaOm5#9@lCK1.q@hNY$
%I`F4#aaCS:gQ%D%fed/.2#bmf-Fd![S,V-Z3]IV!AXVZ3Kk2s4gq,5H#&uIE6(\a:ASU$q*DdP1;?;kIZPo@<l.'/ZO<SR1&##FN
%*/Ho7^/S^VG2Z*]+G4rnh(X$44_5KV!tY9WWM.=S3NL(e5_DsY;kOKR3`3/nc+]G3W[r)^,s\m+pE_r7(:AD)1Jg=&[Q*8\A\2_'
%p\no'>X.Aqrjq,V3"1;S1@s+_AQnP>h<[c@Gs0A`?NLN[!p+%ZApTLma/I:#p8(Ke-Hk=UH;;'_-0=`q\esI!]1E^h[=b0;Z5LYj
%]Vd=@26k>jAc.pn6!TIYPad(-a+CU$gMJisg?_JZHhUa&f74_XN^6Y#K9-t5'5(a,o<Fd5$.%*XlbhpWBH)*Hlq:1<pZp`kq@1Kh
%?WW8=*ku!Na@R$BAj.+6CY<V:-u/]].!UCUhhmH%;j1Yf_Nj0!f#C04_AJ7mZl9d`*$)-;gYFQ,_`_QJ#!/]0L']Q"Cfb*`)W*:P
%g""n8KsG"^Yt+;U1EN7f+8?#-4`]129^MJB[<OR6ll&Hq`f6Q4=Dcm^9(BCu%\qo8bkuTpR+?[a[_!.RACg.NKXfV,YUbEi@:r7g
%WjCGcC$jI3(a^_R]+9PKl:$5T5O:ue?Jk*W*+smYN5Klfa!eDB%BGLB(o6Q**YhUT<JfS@-raqQ_Q_U1Nm8RB^_\jb9s.O;h('Fm
%hNhS\i`ijM]E+>T5O67Z,'HJo*-cQ,]&ENrE7)f:H?^C),=53g7V'?'.PMJP,2MiH&.hXL&>KXra.oIVSj:piD\1>"nT>[R*3oOJ
%dmYcY6Ppo,RK"0<PK#V\6PN3*S]p+g5`,F?&5P8&RMO5q5"(&c_ZMA2OC$T#1qmgZRP)t`O>I##hm"mG2T,p]S1k^#UG@I-E4_,6
%Ylp^A60][9M7"7h'?UG&#,4c7c9u/OWkFoV2(6Op+rpkd6K*=Rg;+L)^+:H?6J"a6R`<Ynno4g+1uKkQ5KKcL5m5D[WCZb$$SF.P
%l23KW](Lm1L68#Cn?r@WHCuuW<*s(h77]B\EfNV."h[O\g=e:=Yn%F$`J#J*9YWtAa1F[NA]$eR0hYZPC%DV9"+'&U[J2in)anf=
%dI21+BYJ)o,u3Hk"ok9c&a`ej&P!\Qi$E0Sk7(N*iU`U/EfgEg(3+t7H9r`:=BtLU%"<ud4_FN05koonHS#oX[dLHF"@PATbdr-i
%Lan06SYNS&n2XnFdeISLHIR$RS/S;jGh8K#GiFS'Tj+P!TT`HL&[<qhQiMIO&ZjdGj?_jZPUdM2+i($b`KAo:n]_0Q'l(ZdVbt59
%qD>np9]$D_6q"C,0k!GT7oW5+`pdGhK_a2B'*A\t-$gY[aBKTqA:p+3Lda!,eEu2jn:GYA7&YqG,JhP(husqtLTn;B."cpMACAD&
%)1u$8i`kU\8<#>H/+BjoCV4\`Lgj197+"Z!0el*TH0k?_nV`&de=&Nek">27J.fO2O*qu)oZEn\eIJcI&Kj_4LWGJMP48hnPRS12
%1'Sm57T9%aUZ!C?@h=0QRC-2163S.,7SQ;AYei-1Vc<s=R7If2p@?!cN;=\!`<5X%,%)S#;^OiYM'.;Vo2D^585q.&19:lpL^aH+
%M)\F1Jk.,7XN'-dXuN$?nKA!U,?Z%=/-:Y6oP#Vf*.s?$m'6(X/ht"=>ilT#o[mT#d&`n9LMJ"S"=bgnLjbA\Sj3@?3j:0%PLnX5
%lW*fe/SB["lhOd*!qg$[5r)_QHj:nfml%EDF<!uTkQGEM2'B3@"0pM4R)dTIrn/8:]GEe2CrB%;L*0UC!B/IdFAR#JGpZLu*HX,[
%qOX/l;+(k-dUYk$/`1\\$u1E)m6M't"Qo^AQNT;YDqfnp9R3\3kgJ>0lZO`faDDmXbJYfY%4R$26*N<s_\NG0P2/E$(7)7+0?SX'
%a(h9nU=%j1;71'WmKW6I2Ejf??R\//R?No[5cG>n!!pRF"E=^'3;(Gp$b?p(3\;l*o#?hqFL.jc6)l;EXMbeNC^3M1"UkuH)5oH'
%P6\r9GrA5*A0R_Ic8@j;q,UU#6r(5\'WAtc/@6bM<j7`r>^M'iE%0'25"It6%\,U8K=VdU":3ul;F2hNcj^@CHR_T13<:YX"a+8q
%Ug.E3Ya`JKJN9"O>iWeJ?FZ_ZaUebh*[ci71@8I'V]g4F+0o1>H'26h<OiB8f5#"'Dd2@1>uj8k;SrG+`<+jL1[JCS:tA7=%PGBW
%\hY9O7cL^=/T`A=@U.(@qdTX)>]e4p2nl@4d==4PYqFH,O!dmXe1<Tl/YB\o\<TO\p9$)27)pQQA!_-46h6rY6+kq00lG'(7)ejH
%W]8NWqZ`H_MO*Sf*pS2NdI&hO(DM>OGa^$&T1KD%pB[R5`]B'AnqEdjK1(]8)i%*:Zu6P+;*lh6VCgprmR8$Vh(\)<dTnAa04UsH
%hSr(:.I-oqWbCYM=ktBZK$U)0geBXV'i&/XC*<Ck9H>Z.M6d>;<02qJ\;N_$!5QO>h!%C;bn23.JR0flS-k^:]I*Ecal0JgJs$t`
%Dl:[m'5U]d,^-8o:KhiU+Mf>RCDa]?abgf"7jf$cI(6,K-7N"?KX6rQl;EChRFtE9HJ'u;)Z?Y.8J#[rEp@UiRZTrJ2*KK\(s"k=
%7T`,ccK;8kp3DXljU<_>_8'"4:e$Em%AL$M!/p*=$*(CJp+\_"3>LI3`aro:TAsSbVg$[j6^f.10gkU<;Yo@i_'-HW`c5Mi>n02t
%;3aX2Tr#^T17Uu*fekG1<c=Hn+Q;3E&K,HtFfp?B8q?/&)H"'L9h.+`)^Gjh_e(*E,X/c@1DZn'InjjFG6j`cKEIrbV@/S1)i.QJ
%&RN>&MUAFL=)"%[H&PDK1[lYDpg<eUA;MGc(BE,/;5!0D+%meg0egk+'9Ms8Y(4ZbO<I9FK%mjP6QloN"Q6!`P-)I%FY7NYQ]`up
%.Ks>47R]d'KL+O=XX@`a/=NtdL`N"&ZRYJZ:OITsf;fk!#*EBiOrDo5F:DZ=XXOfKPnm?'"Ui&&7WN\.<ZrEA7(Q7B@:]I57X*-$
%[.1!SBN;2oJ4UE0k`:Pl?XfA]5%)-c8E\Q*Hf%PlL*9Sop75kCDh`kL4[n1h`s.9mZC^nN(Tg(hHKb5LjtJiQ6[r<a:0:)N-N<!?
%Mj4A(QW"dK2r]Q\K<^HM)G%\se$5`>%5Rt12h1P?d7e^f[=ma.G0/UKM22l/\mhX[5YhG`YZ!e?0pou5j6KNiM,KF\:V'7R==G)n
%SjeE,"QN;(R5gG/LtI?nh6(62hDWWb6P#*D;/E7J5en]W?*T%E*+A4BY,dSW!ogAXe_E#L=i?Z`NA!GuWW9t0(:=fR!!kPlkbbS)
%RVouq&mM/c@*DH1,E\*cCT,0+89uWe;t12]G7s;s93F"*;$lt_Oj[7o-B"]F,EF2EqB?#t;:GFOARA*r_*Q?QZOIm#_PSDX;ml;d
%53UZfQ>DqG%8S]=lhLE<4*dTr-)D:aYl?9H/<]:8OrUaL8t7^/cjsSl#0'$[XWQ4odFg/4!6BjNpd2f+\-N<9i10#S_I>W&`lX#I
%rS0D8[[V<=n.qG(kaLU9f%%;>oLhdU_puX%-<ASLNtoX_F*>.a]^LX6BPl<(C;u\!q^`qa3`A+R.kRd4k51LRY+gJJ!97%++@$d'
%"jp$fUM'QWMonToZYm6+[0s-d,4Cg)MR_Lqll"A+P)qS_fR3a"C`\a<OYYI0$V*;"GN#Th!GSAb!n-#1T]aQS$?SGR%-pV(qm0tn
%(gmP?n>5gV6gZna\A$GUBn<--CjXs$\nMI/-kke3V4a3U\B0"N<Je(")^,m*f4D]rl]l#!im-7P@BcLeh1=V%BQ*3@FgoiI.Q;PC
%@CbEqT>a"X&f$<[1i$7rF&sOE0Fs&RTX']7,uF#e:bCp*O<c!4BJ3MWV4EbV:6=6o7;SoJSg%kBbX"*54,g:V+[no5d;[`9'*A;Z
%9FS(0<MNFB"]a`I&^-/(GYrM*CU7cB#-Fd@=foM:,W-\6Zl;Bo/COqXk%4#kV8FuQ6ghdC1G.-C19tZ,9t+(5h:()h^)_eI,Z$9W
%'Pq,'W7H&4MDR'sm`a:-[*.?nS,%!]/I@m5H"6Rj@$[m`OqS*n0:&]spe0t4#m-`%E!n'8+;^?4-F04?3p;Lki2k'op:TWEOal7g
%hQg)YS'g\%c!bkQ?ZLr0ftPZW`rdJ!`'hMgLY]al).EjW@CHf"J.eU+>*lFcd@+U4RO5<QU4[:cC4PSLH+;PZ#!8KROD^&]7b:.)
%LCrCTn*SGNIL?sT`S.eIe:>$no*Rr]YM?7=bX?me66uCim=fTCiAuV2-ON:-NY_'LLotD[$jEHY^5HIA@k7`h<OJt3nh)1U=@0I*
%eg+7;bR*='2U\UE;<0>s?rl"CZU4C.-(e*^7Xuo4cb&BpWCmfd%fk+'(F1s.d[ZXd+a<=N_6'JUqCf&^@5Q1s9#C\#g(Qc*hAZ9a
%"b^;2cm+V+77g0;`Dca#7#&f3ad\`UBr:+K3cF2SPZAN[qZ/BBkgGQ]P4ZWu]ei_D&/n*(50T)PgQ0/]]=JaO%FVG7.U&g_^;Llu
%mYBhI+?BXDFm/Z>2#/V-1tm=)U>A#/[:0o.JG;tT;rW,a7Y:>+/E4jKMl=s=kS>)[D9;#7Yr7lSe1F4$MVqKF%5:H+K1RY2e1g2.
%QI1-99Ngh:4SAHpF%*R8ZJfSp`_Y7Qjr[^LN-Dr7J$.kre\m#/%QNBo(=9nD8C0DGF5\EF&mdR$<N/f`agD.qh0/nj5`9%/n<+E8
%aneAS%RGcF!5--G4U)A26Bmg1fhj?a!%H_1,3#bl<bkc]!7H=YE=EOP\q(!SK^c2i,)&kC@&tH;&?#/$%8P`p`Yjp]ih2%h.X!_>
%S<Xj^:f0\F*;B.$YQ`$B+@6ag_$XQb+?^dQ12?Q.cXHME6%p=pU4IEm.S,mO5r2$S9NMA-'S-C#?J15\b8bY$,CrfRhR$Pq`".,R
%=Wr?j,7VN^Rq#r`FUVY7r>gra1DN1_2Q6YsU!'a'gX,q@P#$*?/X-BSq@2a3ib0X\nV7Ni>>G:P,q'KHa>?7)Uk]stRNddu.>T`t
%O(#2N$kZ$SlE8+glQh.2`p"hJKk#,?,tb61Kd[cXU^u<27VTb1XB$$XHral:]-!-/>`;nS7_TcieT&*Lc3Q+,D3]kakWQujX/<X\
%D?*/d57fOR!T@#j+IE\=9PmV"MN8Z`2r=j2<q9jg"H`hFBFXa@G4cRH0LLBn"<E'S"EB:(33WJC>q[C!rBoAB-0Lufm\*Iq;$_,#
%a?l$Mh#+I"$K+C=PqP:k;@ScdMa/J6ImKVE7(RXUTM,OWNi?k%EY^2.E#bls3%7G=dBBHU0,L%3HY1p["5\qOYOu</D[>r)''Y`X
%n<k"BX(<44*,HZ<R)F+JA!K6Uma:.T8')q[AfQ5<dut%g77]UEPt7nOLk$d%i*ai\Rp/=N/Xkdm?uWH^Jn"[])hAlGkss7Yfm1.,
%&VObm94ArhS?t9Bnc3I'DKhNlVdU[$&i6JkAJ,ud(3Sh<>rBEL;CsgKOik<@b%#!t8-VVc=m$(p4\ZBLFhA^,-[2OJ4IGV(b43X/
%L0L.gp.F0bL6-\D2Z`aVk[3&2eod]fQXqc5c%3.\*i'q'F0[cJ2aPZ;3nq3&D9"E\_=m!I5@eeb.2?[f>uE$Y**H*@]6nmcEkrHf
%Q1Yo=H<H-,0Uak@fMK#erZNp+9aQWM0uPLd)iujWP)@Zm.7^dZ,BVo8UNn]:l'7%@B$#pMb![J+F@plq20mjdJ-])oR8)I01cF#p
%ZrI8/O!3gaj?&+.YC4;d86dis=$o"H\*SGA>RGP!e.t3-i[e^/W1Fb7flG!oLTMoIc+/I#J2d1@PSI'W`K3N!eHXZB'AqG.jXZ``
%%jOun>6P*iF37c'E>-92)[_Ml.;Hn5>p.X)<:eL,6Omh2,N0Ube*k4EXJ"3EW-5#b5G$i2Fp>m>Y/0'tRRa@b[jZRVXpPi@KPn/4
%BX?]fr^d/p<^b'"*DEJEMCRo'")=d85TKM^4'fF2_<7Bg$O8^=etOP<rgE"+n3&F62JQb)_K6[*`f#2L>9q;3BuM@*kunaK>akrn
%HMM"(1EJf"lO\$=*k0TZ5r_tsac.s--Fdrc]JM-\6iKTIW!@Hbq*('0UoZ.%<QKn;WD#a$9J&MP[giU57EfJ08Q(se'4/P@qDb@l
%_))@T3Laq;H`##PWu0NW.H_J*b`;.:DA_[_AQiI'WbDI4n^,l(Cn_5_alG'WL^<gMHV%SKBe!_)<V&"YBB^p2WId)5"QT%&+jg^W
%#69$I\?/(F+m3tdXg/YV\OohWnZbZJ7RYIo.'3\Z(?.B%ltnLZ$ZE&W0`XgH]WLC,A;FX+GtI:^*0QaV2mVce,0bZm^W_f8GVnFQ
%6I%,!A95>aqZrfqRB\orNe>9Mh2*l[V%h!WF6c0?$k)(Ii.1I#[UUi+CTXPJ3]9^Fr[MN1FT:n,6,,fC2IX=GJohkL2;^/Xfr/IH
%:O`/`\ad"Qro9`+Lk^G(>$[3u>lnrMqIVK^%Y,UtL="8:-qj.[[?i(C$ULQ(:s\*2pgq`M+\IpjC1(%5i2fP-Y$WKYYA].&#)%`P
%TrA't;r_W!)!*?)e)TB5ro@L!*$Ed"`qpSpW]5!hU/3ghc=).2PV_r0^(sRgJ/Tsi"DFLX=M@@%mgfn.Qsj-\lQC9H!Y[^PMVD)A
%C0shUL^@OFk!$T&RB#72JX(,)(l*as"qD3iY5RS@T\eFYINjVd2_LV*lu)/LicO1KY2gq;U/+s)28Mt4B3EE+<Z]i0f4Om5q#Sd$
%m6p92o>)(<,fgs(jI@?P:i7l?<P$[Z*dh'#Ri?7AUNso1351\@q7hEHD-WE!Oj(#P;X+L!Y.-<KgJe6_CU;0+79RQX*<"uZG@0bY
%jIq#p"_:jsH'K@L*YaH]l!b6ZKX@"4YW.l3<Fu\uL0,e6E9eThTdVZ-2@coGOCFB=&6OOq0NF;@h$P++9C%In.\PV%R4or;&EWbb
%Ck,gLZY0ilVEhJK^>*aJ\>oKs$q/l^\r"YrAT$p*G-iA=-eYmA'!p*?fnS_u]:WYjK5TX?)Mq'jja@-^:%`$kX-o=A3EUG'%Js>d
%Tt=`nB"5+.%o_<:m"\#*<<BSOM<U(.N<[<j#SeT1#'`4>-mKakWnC3[).q!ae^/X,lr8G@<I(9.,q2TaY4+]=5ZtSqAbE'I%4LGH
%1JuG2K=.`]7oLuL[&W82MlWr>,%`cNe>[b.Hi;biX9rR[BLs7[kccsD<@,Jn;48Ej2"U:Sm]-*bX/[A!;15p.cTjb5#2M.S+C\K-
%<aOStl+6bLdBBjTabQn0hjE:CenAlIS_AK!>`q7G*&_]nGQjeOW0i<][V8$n5#&+qeM`,*ZR-[Eq%dX#fTEd<8o*__):kl+;gMFW
%=btG0fr\T0m.u0adg`VU=:.2h5O.2F\N"LT(+"B;[sSqRScZel`^)D::/8U[rLfm`XWMbAN7a/X-_*\>R$I-7af*b?c+D\/>.bi!
%BiP;!GdRQbE@bXB,Da05Oh6R(eu[u>X?m[-D`h*(&1^uM?$=Np8m9;:'g6E$MF*.R>;WW8mb62^H[q77e+WYF>U[*CYTS7&dt'$:
%]1o0%AR;3Ai\>b@Rdr1jX)rrem<nc/C/!MFW5ZBo,%@L/=57!LdKjb0;83YO3QlP?V3%ah3i:FhBu3;29h8m[:-#8k`K?4o)=<#(
%fm)J#q(0T1T$eANc@W!:e:IduG!jh76&si%@]9c>!@[pD"PY?R.<k$L%.R;Od"SY!'u;a/I:tZ-7si#o(G&6cX5#8((V([I</g:i
%4#\@"m[gc"s7A,HkKeXD32M*TZ)fT>.8du$cP*!d:Y_6;*upUSmp)2_a52*@n-/Q_2R@I4p9*ggR".u&QjR2>@qn)P8#B=sG@_,/
%E+TH)`LWtCmN%_t+'b69+.Sc$?ZKpsNI/\mi"O_>^^'&"_QS0%C;HHn;p^/T;rE:l;rQ??3HkY=UD*-RX&Ir/ZW#cimS53UE-O;9
%biL;ChWZKQ-+Bcfh)RY&4h*ZVT/]%=^?#9XU3d-DTEc:3^]u58i/;JL.=,rd$@HfH$G:S;$@9f7MP:?2W.5,>W5<nZW5)KiU*t<H
%(_ui()X[%>3@aM5pF&\K>90M):0aS%n"$6U?ZD9%ab-?&n;42FiOuQsi%+4n.CjYi!^1Ok$@Hf]lIT+mVGd'E3!F\OSI0[^T'F?4
%go"'@i'7Hni^/p6pJ+]`pkg"j8fetO!Zt[H!q2\ZJmNJq[\>,Z<C-@3<C(h(<<4b_<MeWiYq#7Z[4:[^\Z5-&pF8cV*NXi6>c[uK
%S?*(4hT[MR%us\A&$At3HLGZMpkl[`MB3b?!Zt[M]j"^=X.i\NY1h1XnI#'THJS493aXuHHM=J+]]+Itp9;/:fAS9H-md6s%BJt%
%8*i9"M^rrsd,L!!GjgYmVRbWHm9Hl:af_^-S[*k8h6MoEE6S#u\T?#uMg.9q<J52EZO1#YcutPYF4%,lCiRn'm+f3e'n39[[S,V^
%X*0WZMmHIYN4lj3D^?2>[[X#?A\7A5Mt]KpKA0EcdL2)iFUMM\\*Jd^\4d#h\8PA%\Dk<k$HUeP]4rjSUIa<q)ctrjNngdem9I2[
%ZF79`']$BB"hs!CmCMK+V7UKBMcWa6SQf1B99.i2H#I!#WhD(@:sntImTkCI3-b>"@cub$UWLg']1'n"cs1_cp64(Qe_<l2p-=TN
%GHZIC_;W!I13\q/iq-5qn+P;<mhNn3HH=t5p<i[dke[4u+('!f^]/E@!e116e-R\q_%!L8'h@cj:M6igpRfa$_1E``_><[*L[b1:
%V_6s&T2(roo(BgN/72b(%);gal5G-Ol-q^EnBO0Ji$AWuqbO+BiqK'?S\tROgr'8$E>6/p9WHQAr-koc0$[pW&+3n\00"pJIl_]i
%^]/E@2""^hgr9\-E#cXmFQto9s67IIgj?DN+"MZVJZQ!?>f_e?SB,J)(H6Ai?ggP:P#ko1RZQ!5\lCeUAKs7GPZ<FIi)CKJl]PIT
%-1D)YZ3m'OY%8md>[0?LPpW?p<'!(/2sBl`$V:lSjp`<]_s:<XZY3MIQZH6-/i]D57$l]SZ?or!4DT_U\=SBWQ^lCfHn:lOF]+i`
%V[HZcW=)I7<LNPuBW:Ka,?i05aVFdRdoC%f:AYcMZn1t'4/=ecQN'm]U\V[`U<HD_p!8-ckBF'"qZuJRhmgEFKd>]LJ8>suoVVM6
%?Ekd=Z8U0+%AN+S6Ue-XM*r)Hng4]uK-5^js%_sC^jeELJj_smjg5rU-m?U,,1.[:P@`<!a?u"?X'43"'nZu*N&s3[j(]9a9n*2Z
%&GH/9al7lZ1HRkP+9tf,@j(MD7Ka`f&r'O=BLS''QBk'nKF%N"49,p#V]AsnMFLctOAZkW?sp\.$tV$pNCm<Ck@j*GlL?9l4G2e4
%:Y;mN`!h2Q1N[nM1uks\H7cALPfOjKLNc.\q,"qa"q[lU^FPlV)t<p#iVZ>1]H`LGll_l_;?2DY"GmNKX2G<0bncU\I)/Vp-&o\p
%1phfA)O;P=HomU)SE<J1m@XK-rBEd/g1m!`g;'F`3?L*uGpsqdIb-chig@[6n_c,&-_\lcFoBBSm2e`"=?S-c2`4U3!Bsto%1$:3
%\0H5Y;ZJ\6-PWb=D")"N>KJtq-*JX520l'9n3N*P<<@G$gaLIVBF4bd0a^C`k^X)l0e2bh#_XZ/+<_iD*\a[(q_o`aUCbk&-)mh;
%7DLGZ#-"f#0`I*&5t;9.PHjp,Ju=5S(lR&Sj\83;D5S&62QFdK9IaImRtY:9dIeCS%V,I.n>t\dlC][JbuBBfKW]G=-ToKeBUja=
%qZe`6$!h5(+"KBqV\GlrpQ.0j`mOW[@1O)K^]m/,dOek9rsiLT57"RLRms'E\J?u,MHl8=9WWJEr,$3p)7emudN7+!17SLP>S+/9
%P(kee(LiX5kV]DNWH&hEBNE.C66TXZ^_g/niX1A1=[N1`2t1\]X:_Rr8[U%SArSoZMC@\m8f&(5>g8$Yao*Y8SGnk'cMO5Q%$0)F
%M2qVZJ,-/BrTDLVs2TWb7sqpCDiC&1P&1L[##f%n?4!9n(\"j6(J^I=:Vg33%qNk,Qj!Rr`(tM24\:]C"2+"d7aM8i*HR/33Y=9g
%Xc;,h65/X"`ubW-`%6ujgiS5"+1ilOA.]Q8aq',M5QZD3I&VkDX+RkjBFth6U$2_;P$J3qKdE9sD[93mIK,&C]l2WjB90>!8%X5\
%FAM40&FIL9C_X?kGj)X:H#m$^qGbH&5E-.t\-eIZmlq9P%/@8`did`VN]U\Ofb/?KGAU^.3T*D]KqJNS3Z<2F*M'a5O6AL/aP[!c
%ptp9[rT<(Bs%ZX"Vs-BCe5q_YNn(G7j9bUL:B&L*n)[pC=^`(NZE+#nc]/>#f>"e/k?jIQrelWlf96">ohYQ@s3V.XjLO.Ym0be!
%IHp[4YMh-qFT3,`[SN%XaWEG@kUcR_f'GoUiCZ0M[\I\)`edtWmO==qQdM8]cL,@?3E=soecn.g6ISeP:,+)2:MAPukGFq2JIeB=
%qbCiGSg%lrW=6%&de@Tmh=U5\FG[D>>1rdnr4oahe\IR3&LG+sV"J*/qs"*X5<BO='_/s:ZS2(JVd@*foaegPs2uMaoO%':qB,b9
%pV2"+C7&`_q-)>J("O"FqHW;I4`)1V2Fbn;od&Uh5i/<_HSgQ5-M;3584F2:PI_doR,DUBrE4iM+R\Hg5(R:lo3!%K5Jp0IUQH#(
%hWPWEM:/L$\4+*@51W2N4$Y.#Z"e1k]$'kpcP:jBZk'DX?O5$ug!GJe\Y%=?nX%cbB+I*<?HZ%1n_IFOg<J`0VH$MLF*.=Wn4r7O
%`L)b?cj&e,WQ*eGpDMfHAO!)al16fS3hUgABcf\[ZRU2ADV<A%ChQ265-Ll+ICuHNDJLH@4s-air-"k?qgI5No+\pio,?Go&+Q.T
%^><'>.*BYrPl6&`I8\%4R6IL<&@WUFN6T)m`g'^h[d@:9o8:Zc'.(K(0m_G0Y>BWEoot-mM>`\HfiX9lQIn&P2'M(YPsq1ZM3`[N
%+/LDs9e-Tghu-<,rKS;SPJfBK+9(3bD):E*Rc^de,B$6A?\l$irHE&mhb4(-WMB=`IaO>>9u]r]e1<kc-AL9"eS^UGKncnTAFCNZ
%asQMaUH&!G-=@pT/<FsckaEO9:q.S@BN)tL]<r+C$^$Bal&7qj>uT.AY1\_OLa.mq+SOrH7`A_1eP)i9itf*#M$12Ta8ml]-BhJR
%I*jbgk^$2_VIMNk5c.=h=.q\1VfRpf-5=gE63jl!1crEQ1e/9";XGfRoP(LBl4C[9cg2AC]H=N?[j*W[mCb^Z,ehk$)Eh"hpe.QR
%fVXN4\/CIDM41u]qoR4AbjL8234G0@N@h!<]JoBQbrD*!7T2)<Y^u_8S+/;QIM4Rpe8J#sDT8s@-A\knT\(+<lAEF.@]dai5KN;I
%fPdKrSe+!DB(HPYrYB82;2i.>Z%!qBrm'$;//ad=n'U26p*/b%-berb$a]R"a6;=dWLbP1Sd,%ig1RB8.XNV8p7m`Z`83VHp@7kB
%BlS#eBoh`HjS:?;6`0qo2,5PWnAc\L8mUsYR+]gjlEiV>l^>oc9'&V@Yp`,jZJr>V^:*r=O&"ti]lKn`IWOnTUhEG:STNC>1&HoQ
%A?TZ:jH0<]_QgeB=SqRh_.Tc^CVkh7:3)1mh+-@kg+Q?bp2+Yjm'c?US&j>^]58_rflg$C$);8MIC5:847W&08^j$kU+-jPM!b3E
%3rGUgk!^(hT&K%<'(Kn1f\_C/`14eX;-Q6Qd87/3Q-5-VAp`MlGs.MC!o5_%D2^"A-tp\5;ju.eDq\;:G37bjMmoV25P.L4HrCr_
%U`jRui[9-)@)e4%@>>Z@<U;be,o7+7_?5rX\kLV1He8!56(+&iO[l^3XO!U0Lno.rf=A3jdGgF.Hr[MM.cXfB?Kbod99&TjRGn2a
%;hQ@^UEJsX*!SQ9`Q`[?9bfm+e[sKO>VTQrZ5^!e)>q%#3K43GS><>GC0XOo#=I)11@(fkIE-E'Oh,ZCi9?Fd\L38&F-^8+dRRJ'
%R2h<^mI8ccg'(B\C3G%pnX(o+ZDhY,CT@gmS\o6FLkcC[!.;*qhrmTQ,VGtAGujR7f&=ieGQ^/8WCPrg!X07V*12YS"7TdSjK>lq
%B>T8W<0t)!Y/OfVoP5,-$7i3bo^FP#SY:P.;3UP4Jgk;o=T#LW`p;Q.Rp04K)J(Ej@#Vad[47u_79Ehp)WdJY7P_Ycl`*X2U,LOE
%BF(&"!Xm_ZhHco@C%2\eH<h,JMn1WYXhs:%dK7UECRH?QU\QsUF?IMKd,_%)2mn.&3T5c6'"'ZG&F^eM)ol)ICIf]HGiQ%[.%bqC
%o_dj(N\]9EcqJH=VB;@IVkT1up`bd^9h5UG"XP&+pGJ1UO.2/b>rF.c'6>AjY&Hn'0h&E#?=u4@poH3L1iSOC*NW6W!8k/G4/305
%+C^N'G/hT[1hfd&k^i%En(%TKBnX<(hZZnL]:Q85O2du8hmc1?i\=1nenTP*p@?TGR5HXa*'"l`B]5,;'1qGBJ%_X&^T3GkrBkTK
%VH5N.'4N<BJ/]aX4M:k%Gn=lXiYW3^HJ1QM/pNMlI7s!)[%sF+oLfJaS>B$&jPF[VrTZC`@onL`)2;fVdE!e1aX7fjWMCU%4-nSJ
%_Usul:ts!CeH+glZVGDa[=26=+p%H]?.W6nGG0c*qFdW+"\hL.(/GL4d&$BQ/>.M,p3%)KKqo>G(/gLZ0c2,VG`e,WoN^!KF]iEn
%CsVuZ&B7G&1E]'JOP6P>/Y0r)+;^ONAunb<NTH,eM1"j5rSJKTmWd6QH0)dJ2`rL0ifOhg\M3LQ,C.s/echQpU'bmMnNDGl^+gdu
%7f%^GjcMflOs+LD$9j[W,WV7.SmqR_-JL3WQY0K#Alp@35aGtc"Cfr!$GB&D[oicq-l_>Og$L1R.Q\S2$8.7p$"`0@-rm_)L]NH"
%r4^<sMRU-[%B>\R!`aB&0=?@%@b6E$,uK#'n;(!8XWlhC)dLt\%M:YQMLZqnH37+88ta;q#Si\jk0=C>kq5`/-Ss+b>@4]!=*\F2
%#T!K<gKE?Fi=o"W/"G3b#fnM<Wh=e=5cGFr[3>p(J"l9=<q=kBr[;KdJO[:b"OptDIOI4>,9i;l]!8QEgnh)*Z;3N,mRVIW'jWj/
%4%\^pcAU66d`;r&9:(<2HZ,f4]J'6'5#/PK,gZ>:I+^=Z'd$:hE)9QVXFR<Sl=-b^jU'LApD@PHg2/<*4L8me3.\A$T&b_%+0Nd2
%b`5Fe=-g2*#3fYo?+V*b1*S>Ze.$A-V?U51mV4qq_&^+3U%o&)#1s2MCmL_+)4I'sTc9X:p<u;B"]/'e>uP<&Giid36A<R+D33i#
%a,thDC[j\3YBRAB6[Y->FV22)%+Pa')HE.Ys)ord'M[,7+"IVj&uu@54&So5NOViOARK7AoaKrPKEBo5\!)LGW%1Cu"PY'==Hbde
%ik=edb%B\A7S4afOq!tDXFPue^:ltF%RmjaMI7a%N@MNi)AVQ);amB>FHitg'm7(ZV-nUI%6QW<*Cu!O#"Y"tkN!Wee7*hIl4@O>
%VqEYhQ-dpM]`JhYkUJ'Q&aQA</6ZmV]JroGqU7U%3laNdQcQsn]%';$*HG#>=CU_pE.&$IZG<TCoLW+]baQI$k5H:,U!T?JV[NG]
%!l\q/nKcPHXOl!PDk2\k.KJ6JXPG%Gf'#PFbA(h=WUQ_q+=&2)ArtWMcA7LW#?#7<1Q3o7l,\NIO#KK>E5Z[`kfDu.ENF@!KoLe7
%eCe\O!20DpNeQ3_!"h[F+"XHDXiUs8UK&$]NKZ44PXdn5o.;u&PK1cZ4"eYZBcjFJ^CsSh]1eQJ7Ssm)Gq>.%H7E!Km,Lp0PGY%h
%<6*_Cd9-&)*0Moc<,rt\:uN_2!Iim1oDdRO]DgRJ"F)I8`UH2#h`1?$(2X-!HHCH9r[Xq_fV`8/\asqL@tYh7\<Qf_8(\gH"f&X4
%dWY)W]m5"nc0kl?2JWG$XsQ@4k]\@9&^(I?LiVJtdh&V]UW;DA[pW=6*`3*_>-[X\2p_,Mnh.cDf*'(-i]Defe;Egr1P_ED,\mr9
%PlYVWH@^%En3MqXY-'&<]+'mkc:u^"5h`i*/_u^V05*"V\OtI3)H%3GCZu0uH6,sRQQ+uoe]KU#4M@"[e1#o.1psC^SPg4=5Un1q
%GJD%>LdAm&p=a0>o]V2MD$FF<9SNqF&-?%I9KF-JD<KPLObb)!S"/@I_@#6[XDR;>>nSRG5gRh$&e+m\=@>b9:%D._(HmSZP$#0c
%?LHt;),4R+)9tP^P<q,B-+O/(^l:er6D-.`8sk,D@aHjkq2&\if0C(OO?Lm^V<ig-7UY)sHrW>@ig@num5%3edB&c^7Y8kqReoDW
%==H6VK3Ab9_dl@TZ?h8KZ7Gn.W_q_5AdJuXK!:P9-O/Sb(*lg6k5DeJJ%&P!%)UgEU7=q7XN861+9mttGH6IM`^I5:J`F:,i?O(p
%iLXsF9:3O'OM4hQh?6j7)R!9llj[I1Gc?f@(,07kdMXQrV`D"9hssSEa#68Wn7d2lg-=W&;-8VC02WjI&348W."<e*B\o/L,r')0
%UlKN^\t[K[FN+!N.n:,3QSu>(]95.MM8:1k]+aJo:5c%pNbZa0<mS+4>AIo9*>ou2[K@bHNHWpGL+8+ANl1Wmj?jq.9R#'c*>)Ho
%)WG7'Mj@A*<h6+iF!aJF(ZMoT(cf<i=_\NF0kSkO:rJ?:AH[ZN8Mk@eN534;hQD6Z%o%m2ZQ7/3T;nFJ4*0)khLpbMDpe9F7;,FG
%<)rWc;;7H9<[#Tc-rc^nn_k0[UUC?SB($[Q`^cW3WG?W1DU:@!g[,R,mJWO3bs@<B%\k&ebWb9Rhn3tl:O:O>*M$I"392eTeSM\h
%CNZ+IqCAqBdlopTCE[VkiTqfWosf[QRL\h^Xon<-g((j0XRA^=M]0p-QCGTqep=^i7D5UaI\GnV0@+_^i%NQ.Uog]o&&rm#"%)6.
%*=2F_/P,_[<=csX]WMR7oU.<7r3A5VgjN$AHN36K)NdXQ*a/)60*6T*1Qk@k\rkoP[3JB?Fo;TBYA-V6bV/6P4mM@4Sg8pZWhooB
%]<!Lh]3WsQA3ec=-'URAQit1(1Mt!,NYoC+]$hFEV=oSZfCc&$/:=i0KsiZ#:eIBTK[.4uk^9W=kh1J!a\'e.-83&#F[Z/P,QTD#
%`fT/Dgpr;bH9j[]^G$GT^f$HI6$.q0hh5t'9q9&j-.cO&ORV1PC!P($L;<$ZHjmWW&=C;a)tbF"$]9,%L_MC;,Y.kcMpR`hi:V\I
%=ra^p82t)n7*7B<8o:,[FDWA`d!uK7)[%c8PaY^;(p6,GjWfLl'1>^HW=`Q^!u+/GVkcBSIGsZ\0UAic<$:1X9S-"jMn^'O8.f[W
%8o4<7!YoDQ)+:%l9*Z>NQDEeG/]_UE_6dF&.5#M'hK@0iqqVMk_bRds&-s)u_#$I"[UC^X*7pQ9?nb:p5qlp>qWtT^JH3R?q!AcI
%TpPmMB"E,;]5-:X!n\9o2g!G>"9l,$DdP_mZmikAW2aM^rKU(hPe#F%R2J;dj\eb7pPCFXSX?Q#:m*h8`qha!_M9F^,Z@8oSV&1C
%EPVu\mNj9I1kTklJd#VC?]dG%4*@G-4qdM-qR*CB41\HW!U0^OR[B9A&W]$#+].B#]9UlN9.(FaF%!^R$9f*hUZuFR^jH#1_J\.)
%B_Isaq&?uX)"%4cqODD!^R[4^gK>I$pOY]:!C&%b[%6;?rC7M7E.-kP_1<e$Y0Pi5hTh^2lM,Pr#'/>#Bu`=5W3D;$PTN:1D6-:#
%_%Ra4U\(VDJo%A\,(8=.[DTHo$.>!mGNn-J]W'sLcTlSkhu4?]4!$6@7>QNC#lV2MA7bJXp@>YNm*./$,FDPK$:\6O#$]$fgU:M[
%jt0W#g:ggA]iU]Le+tSeaDq=4DbTHK:.mU&7d$YbR?KS!mHC'-PC]DcCB'002P2Ai=$D^/,IPUk2gfH5mt@aVnp0T$"F5&ls$CP8
%56'hN`%Uf[@i#dIB4c0tg3JC8@[^n=/cUVt>/aGN4XT.e%n7$sQ5-q<j>Hl=g_gFL8LjWYV+!ahN?\!:Z3RKCdPh;W?8,2\T10l0
%/"1e!FGnn)BRpD#\JgD,qfcmYTS2)LpigmfD\,@k7%fLZA/>LTOX/$@91ACpo)UkbX2+qs4SIue?n_3f/M"*qH!r8^l4*<`1;OAP
%QJ&R!pro"7<tpu>;;8a_`WY@UN7!R*eV#YX,Ot'hHj(>H/WVC[3aQBhQO.MB4AjX%d"pO_7C4&1qH;u^+a,k=Y,:<mg8")^g*X0`
%442Hj>]>MllR8-aqCp\5j)T)X]"m_Z:Dl4`<eM>o[-0o#2Nh<>>3?;s]L(INDEAB_\m^2laaY(,5rSFc5B-0md8Z(JLS^PuSR5MV
%j2ucB4%:iiNTaE'DeJ`PEdq-*FYTSTapZp)=tYu#CKZ_=KtABU/WrE?I^ucDjSa@^C@E0-OrT2-hfq"5#>IY1S"@.-I$_-b<uT]G
%O96A^1U^Y&[5ARP^=WV#Mj2=poAQI;+kY.=7%Zk6-bYV1,Wk2skt&0NS!)X,jHK5V/SZT^U,4('!,^m!5HaK+UuO7>_&`c$VI+i)
%_Mnt5Bnl/=2i+f;#h7VLDU9p!ND)=4WmIfgA\B>1Cn"Xbj1(`,hCj8lSNZIem\]og`U07L!:;`O;!/rM/Ni+i1h4EjJ9F%3+>)E[
%B]+pl(HrIZ_aj(BQB0%A7]jN`^'?TAguE+p97V2u1nZR$E77&o4"C08<7(FId#Oa24:k\p-QL)HD)hrohf7-_ci&\<IE@';.s-\4
%\&9/]@5C':Z.kE'UsEo/,@`doS,-K35(E;CJ+L^1q>9(,s7iLAqY`X$Q*f$&S"J:E291C^RcJWE]Jue=PD@=uC^4*04*=cIQJV7I
%A(rone-6S-Nb:kO&A@\/EM:_X2!1Jh[dA'o(+%RNG-lOdfMA*^T0-FtHU/P-:5SqX8+oEnG.;7!(OHqA^5Xg,BVrk+=b"+uT$J)I
%aclOa#L!ijqcu$SO`YLY5`CKl$F_JTc5r^>nBg#1XL[^+mD+!,BmqGJIe%;]?QhmRrPlcFY$;f6Ct%G10f#c!g7p/m+&4_iF(2c8
%NrH"P<hmS@Ji<7lj4?9!0/!?4H=?6B[c,-S]$j#r_nY3`O4)Vjrn@(2UHaKSrU;J:Y9*^@qQ^,e`dH;>JC<&/!9j2h1B7bh2[#fG
%AQ+*n^1n(<;-u-bT^[)V5V)dJ-39@FDA:`9\iqt\D"6*q#M,[+lcfOtd;CfQX@KnSRg@U*`+gRMiib3QbbO!/-s2ORY;[2t8%[@l
%$Vk>V*pnCn%"9$%IM`LM`*dP-YkqiPpgG?@@3PDS+o#IhpgG=jQ%_J`jZ)jaZ,`hn]b#)+lK8-B$Q$\99.knXL9]f^p:)Bm]5i_i
%,U[WODT!CYire2D+=B-8.N.NC_8mp'"@-ui#m?"kh$f3p$hoYgDSQJ2Wf?D)B6hR8Li%q/GI%t!N`4)oB=GcG_^69s]&/21aT.-'
%)a\?&l6&iJaM.TD3ic:NZaIq,jm_EU1/>o,[=Q'OLA9sM+r>-PJ@@%/@VsGRno[D@^d8K`eM0HQeXFp"-2?<E%0^Z_I?V5;H-^g.
%6_7q3+%2&_UMjb?dVOOihJ(%q6m[c8V5]"b?+*Tj8^:uYX%6NWJ0A6.N&itA0-,+s@fG>f'@1aJda\P/ln!GE;KpHung)QZb\%9"
%7p5ZU1Tu%mbW^1C9O?.]:DUr=rP[;M$a2LnYuOnl6u'CaF^6o8;I>fG?<R,5mDWW-A'[mVJ(B*U`Oe$[<qPAgf"S5DolM0,R#esj
%50GGZD/Lu$V,t52B@$H1SO6X_o;"c]oTNHG0[+Fu)LXU2g[d5,N1c=+C^c!#NM70$3f^O14uXi<8jDGNrCe],R!\VU`1-2OpP>EH
%ejh6=-#SR<X7jPW&5=GWbMpNO5*a>A!04a;32-=c?V.:k^"ncbp6QTQYP%[)c6%Wli2'l?)p0T^6Ymdgp"^=]$m,la3k%k;,YYiK
%5N!!JKU8/`'O\31h%6n%J9CM:M)-?JG*Oi[>%^p1]l^a"f/igR%:P,?m>)$sjbhpPaZ+]BF&nVCkN$En-@^uGcN\NJ%qiSc/^^[1
%5-HUDL(M=I`4CEFP=PD!pp:sj+$:D;]O2I-`uOJ-[3B!q50&!&gIZh&)5sFJ"NoW=7uOi,T8>F'eVP$qFr=DI)UQFU$6ZXJkEFPT
%V2l*^f4QrH;On),>70;:).L4o<8"P3hfAI+-8=2CR!*.De%<77f:?Es#T/BePfn%).C*aBS2DAQW-nY=(C&If3ND<g)/UtCN?9$V
%@=/_7QK5!?s*JIY6bP:hMVd+dOE@;dA+;Em8*U\*@P&P7&9b%#!)!P$eiPmll(])4/L,+JMGIR!7u1H5dSe<iQF7"K4#Eu%?/CW8
%L0KT0WG6t[2Va2bTJ]LRlbdC$^f':m4"t>Pn6?^Hd[&OEplggO9)e%,KSjW67&_e1+s&Q`H,M0`E!_*5#G=8t4%h",l-qNtI*DB?
%`C`CL!kfa.^n#7;U?$JK,Bbc2NP1bebdJj!,V8G`#3/Ib-2AqB6*OL2XaU8E3rLEs;3:Fa$G[Jn9h#md2?Y$M,#O6b)1s\hT3qPi
%.n>Uug-YgUeY%>F_,lKC#Ie8.c`j84+/EU7GsfN0,l,S18X2:!:)b/I%`IVj`%cX#c%3h\646-h$O%,=Hr_Nm#0@FN!:QBR-]$?E
%KiJuAIKBln$nOqog0'?#GM0;K"n&1n@gqMi;:7H!URD37D%-p4fpcXT?neWMSW!f:4cD'k:L)t*18JCjkbE]VcM"CE?$<7BT?d/6
%"^Q;PPBsii$p.D>.oPi!7N4ABgk]:hhHIH_)r1<df=&1ima<HV1f;Ql^4otJrE/L)rn#<+IKsDW=7:^d&E759D!7_?Z'Dr.4gGk?
%2TSqedMDX829pBjL7[b&%6`B-)g\f>[cMP8K+bl%LU,]h?'L9G_EQ,]pWB&6[<5n2D5C!NdtXI\Vb2[!N_5<km&:B(m%DO<T;.ko
%T&Q-D%@<hSCq1!<flVpGYMFA+W@Jo@=l@0JbDEd6q3!iV[bn")rT>,l8UBZij;M#93EC1]72JmBe#dV_6h1lH;(-:2D0u-"CbtL@
%+nh&gD(-NS/IjN#%>&OZ>]E-6*]R,n=b)tCpn-;Ej8c8Mj@K5M;$@b7aEa-0Il_[T+mnApn-%G\r9(QTH(W_k_Y25)&kb(GM>Kh<
%KO_T@oSABWafPgTDEarf?^\LmS_M/Y:"I0\dY)Y)4HAhT"Fsm3JVc:q.Mlq?`#B('Lrg#EH$_u>(m:3MCf4rTgEDf`M+MJ0(lXS6
%'=5+^Ra!JKkhi=U%,s8#qj5qD(YMJgT;4\9=o69>#?CPhj:2+rU8.@'ZD13^$/_&iFj`Ld9O:BfYtVC-7M)gPCh_X8i,B21l"f#"
%!lGqa.<-M&/@>Mii$9<JM#qEFLlG70H'N58&NS1t_blhQKTGBRdV+D4(:d)*Z=3R5l6YFmh#]1q::0b6f%.l\)!Wch"A[(pi6)6n
%g$9nRLTV:2V(\#1gT\H948*TM9?gd\Z=:#Xp0a"NSQgM@E07BA+:JG!.(Ii\OCH8$*jh'>8?O(."oZEVfVZ#aolnd7/8AEWE,?o&
%84F@%\a[/(:!l4nUnoh7+ENc.UX9Q;g`oX3`F[Hm@8AD]<4>-!h$)@./[ag[N^J6d<O1g5Vh>5$Q*cY:f886crX/4joL/h2U\0_7
%os!<[>W^M=l"b&"daK_tk_;'m'6>Hk`g73<l\<8aJIiDp192rSOsRt(1b/q<Occ+aQu.!PbJ==l[ldOF,`b>#*47BFdd2j+s-DsH
%+:^d;#*T"EQG?FN"27Cu<q\T%gHt]CZFA8K$3*_EI2r2lH;P.k<lXt,"&u^<$`>3l[4S\]9f*uAEb6"F,\/J7:_8Fe6<6hmO+M?(
%I]4g+,B@HJIVH,U.#R6?86N<Ikag?`QKfg(2ET=C]33l*_/ZEg#61;o*('6@c*:&LVE4QpSaNWPFio3g"jh*+872Ul`n03SVm(5f
%YF85rHphR#Ju0sUX4GJF];)tYUQXAb%MANMhAYd,\0i2VTepCK$+XWVOI(0,jS+M>??t<qSCQSu,,0Z@m<4<`DBr*4nfb>!;oXd]
%(2.E+6$iiLF`SCTn_Tn_@eJF]U]'2QhcrmtcVp[$Ec<P=K,)7T\q8*f\42AGgX>k@JWLaQT4Y5S!]"9;)7=TmI^V:[Gup*]g"PPo
%MMip4WG)E,K*.Va)`>n.+3++.p!Iid!l%K4PeK[l'YQt@d46i4pDXttM@-;cOA-u%j#IA,5*=4jO=7Dn#9)A74][_!$\FTR7WM9U
%+L6R-k*ETiX_2?i[CbCgXA7aL&@q/VVRD&WNHT:7D:CEJE#@ioarsGGCklJ9gc;__5euk84_I&l:\=Dmrda2E/%C@%1%7khGBC3]
%_VLMl$RUNI2:*f:(^V;I[0\DdI7:D.)O)7b2'k)tVHD+J'k'Z:nh+ALXRUeGgU\`=2EK4<]2>%-?ouB;Vu>-ld)mLT/T_?Vg5EjZ
%k87!DTT,RI9iQh8L5r@n/!<,scZB>1F#V`q94e&6_U<1S=LLhRioS'dm[;TWctmk+HgaF8EsRQ+^AV[AAK0mt"j]!l!&#%IOs,4I
%0Z@%#RYp-(aW&<N[+5^CBh+/QP\+b9a^s6_p5UQOEY--EI`CHiFfB'V97moE*Leq2mN9IE.p,><M%0AD\]%*cM;VjK]g?b(]M.s9
%F$q_E.JN%u5CI@&@jGJ#J+/G.aJ\ZU"7iHYo^pHpWteiX2T`])JR8$RU"WSAaQ<YK.DeteQeE3G>=HpGR\i;P.R1U)LR9g)$2)^2
%5h%eA]c6/jL0iVSXEP,Sq3tF(W#$%O&G6hYT>:^Eie#$daP$OmK*YDi/C6GH!Q#Z@D;0b6D8EZ#_.c)IfF]-`L#6sG@[K[F[Sbc\
%buPXbpMSP?`c)p`ID#aW`;iC-m0,#RVn2bb(]dCAC]hG<c_(;Gk-S1a3j4B9nfkR1D`[MJ473ZOZ6?;pQPgBf^!)?hfSds%(A!IN
%pb\g*G="?,jpQg&`ZXjgX9CWTp&Gf"m!*lM.Hu-._#eM(i$Z/#@&6DqN"=bglVXU$qAuTeb:Tl2RL'm])g.5^45^C6<eU?kdFV7e
%40#/l;qltOZ`4Zeg5(Ti:.oGC2K4QmX`agnBCEiaEt#afj&e_cGU-b940B)8[o.)*=_sgl`5l-6QD_"Y'^5]0=2+7\M)VF]/.h]2
%X$8eM+#4E?_F9IL-8aFVBrWSbe<S&RUH6_G=)H)m]*"c0U3CRLbM[\h-fYq.i98tA0jA7W+C5kq*-n:EJgM^*@![S__*bauHD?+r
%GpWk;UZ"##;;D:*o<P#)OV!+k[oA.,Q'k\$d;Fa-Ek(N]YCAN$0krcY<k0A.gl<2;=EK6?J//jA;[,0Ks"RZOMB"SaX.+#6#D.Nb
%^^MYP5I1NjYd2h;U#%2G63BsYe8VCh.:n<cZ*r@0Pb#K,+3lU"lAgKs<\R+_El$qk:<^Q_'4m1lK3KKfhek_no!%4qqif@P#,K;p
%S8DLq7*muUj4UMO6G6Zjm3pV]FZdF.eToq"b\:e",@mS+]ai=BN4MagHQQ&$5MG=liSD*!-rkN"c4q64g:$<lrsjWUCn7_d7(*\W
%M4&q'>P94/?L&e*7D'AS4].j^/.&9J`=!@f8;+9^K+OZ`ouRXW#^E01>)*-d9udS$4j19n8C*t`![M3S7L'G+5%R,WM)gYg*Ti"W
%>"aEqJt-E/l%^Th6<l!nXMtd(90h@K@[U;N[sAb<(8m'T'pEp@aC`FD$CNe;(6)TdnA-q3N,%9_`$\5#TWGa7XG)d-#d+E%Z>uQN
%,B\ioWBAHpRGj`&]2TXtX0)5e,8NW\<s_*50LpKNEhdh!:dNU/qs!H15'qB1jCIlD;p@7W?Zs_0JmW(I.=IK;TN7U<SD[IO:@>_7
%R8370Ckolo)6Xc=ANeu'RI>5e=f\FS*J]_X,o]4JD/Y4c<@3CQ0/17Dld]j.;;XE/R:q^-Y.!48-SIKCX,SYT"6Jp,l>NHD08r]X
%#Q'M@P9EO#=K`&,(`O:[UIflFHnqd[(`Ep&!Xg00,T\hU=^[ql;A1+VQCNjpMrJ8pA#RECVTFep<5P<JIEAnM2:d8H-r++np/f6]
%K0[Q(\1OuUm\Yi52^W^s7WS&o\t".5@Q2if2)QP4_[!qQaK.$,qoSVD:WCi:Ed!-BZf)HNX#9%rR^8L7>`9'T^porf,oUS4ER2/P
%$aImUj-+=?)r#A<]?#=Y:#iM>gCcS,>.Z,p_h",EfT7;%fQ8%on--a:j-,Jim4:G(6uMF9Hu&biD0IG09(h0Lk(!7T3rCM6<?Hgi
%s87TfGXY=T>tr*d*M+Q&\dG2e#2Po*[(^;c:b@7,_j?@Wp7W?)EE@f*Aplb8eg0>rIkf7u/LWbcbt//Sps/'A)Y&_-@%:*qgiPl<
%c=D8oi9K2+/K0"+N<Z$'j0UULH9Ut)JkR,V?9QrR!rMfrWmr'*NGc!MJ5m%dD)=59e(YaM^`CSiZ26BrF]Tt.-NtB:9dl83V/d/s
%C3hSOpbn4RYFmcD,,RV"n+6mPA8+V)8MTCQ7K?omA;aRCD&hF,[j^+qO/Bc:cla:lrj>IENCH[ca.[q%Vmk-#!.K&;3nNf_!r0af
%5geohEB;0"37,&3[4Quq<qcL`>i6Qqgn#mNCSsr(no=U@(?O:rorgR*oW`l*o1XZXb8BFcd?h<)>fiYODei3<>iT`*389/f:5j]$
%L5Le(HXf,Z2g.m6*R6HJdPF]eKf[daL1m+KqhWL8(7"UhIQU3NQ_g`(gq,^3.O2\?Z!Tc>YH6\!,5.3*Eq_?7mNQ(,ln0=XUCeGS
%Uri;<%Lo!PebrY/8X_hg;VrN:@3G/MG>`AGSuR:XGfsInTG3Tk1UnQ?o(h7Lm;E7>%6\GJOSS6*ds&9Nhrbm-5Mtg,;j6!5s+!1p
%[E+OUg26Kp6R,m+!npt?V/FRd0RTf=g,(fUXHEC-nCDqZ(FLC5fg;5LT17T,F4;`q;1ij1*UZnrmN5Dp7tCT6Z]\c@MVAi,>(YL`
%(D&)2OM6rE,Xlh<IQEq<2`i43"1<3B=R1>me?j[A53-SYECNdhfppthbfQpd^-44=5Q19@'hd>,o2NDcn&b:=VQV'O,0\N:+)rAM
%p!40!^I#7h:&WbCm$es>CGMS\]U%hT14/!U,";)@h5AXTK,e*"DVLLuaD\%k[Lo;^92ge/X%jl0_qX/)E_4ZUoqp`CB\")b0<r)b
%p=Uq0-f*rG_mqPoQIs@3s3Yq\0D4?s0?',>*&sE#@XEc+@IYG!fO#79:[4->\hCLP,D.A'q064_)Tc4G#;X7T-*g)KB3d]3Uk,8.
%&2LBTB.5\1kQt_=[Y4sYg`c:0RA/@nl#3G4^-Y+J(he8^^43nt`4;'*2HJ_+Nn9Jm^4h:25MUX6SQYK0f)C,sHU$#n+6q\nFmn3#
%Z%&^!hl422n1a;uNP:OOmo`)bd/s^arUa+hifi`a)PEE<&X)\6kpG9lTCid`^obaLTF?C/X66@&/)XGXd]H0T3!9J$HOM$L9A]6%
%P7Rmk3h,?"j9<jP2i!%J'dr8XPQT6\Efoi>GiF=%Wsq[UM-VX[GmCkrNT]*\6UR!MgB;sB9i8uV^A3?nJC.Am0G+]POV#!O;\m=#
%M/;tO<6FsUaTR'<3q9rNCdJ<?3i+6QF]'l\+(%`5dpmJ<aJg5A)iq7u@6N8(nAXdOqHoqIT%Y954l8B,nFL,c8VQfI+4_BTFreTe
%fY2uTRsS#TZ1Z6t[5RAOg0_\DI7=&%gq6WXQ*J(C@U!q0``06bcF9S32q3tY:eRqt(M=3aNh9;A?`9&EELCUqC&`E)KgYoZGLQu1
%[(ZcHC89BPY1rZF0f_43M[AVnbqh>kk&t4?D)!(g`F"GR:F`/9AoZZg](,2Cn,1tn2f*e->.;DJGE&'!*Eg'93OLd$0\?#&UU:I7
%+eai8C/!"ubO`H&1OX?q+2:nKit"<69FlD`fDj-5QTlhg23[iYL<o<ln,/kmr_PG$.%3@7bo_i*%n6*7%A-k*BCs8BNQ@7tg&Q<,
%P*rL$-,`5=l6TYu4o+-'f.<=r,oaQun;Se_Q910sZjD"j?YYa^N("G<%sWJ$F&:A7[$E>kj<SlumBka)gUr&6$ApaYqV1qVq3QQ^
%O3W!NXVNE_J/[/8&F!RfJiJ?Q]Ocs_XshA:F??PrXaBGjX0rVHHAQQL,V^3Aoi^a=Rdjd^l%r!h_8-qZpf'F$W.;Um44O,X]ac,O
%@FQ3MIZ>Y(LO/DnX!L@:25"'Ll7#6O]plskTJe6]0&(R+8$f8jD*,Iie0e]$Yg=Y&p=BPTC4l%q+>Y?fEJ]?O;13qH59ri)6>A;5
%$qaK25=11UdWQ:\7b*m2.:S+C=sXN@93*8$0J9Dj>p.`D\h9XO+7\KbD(r1fKA%aDW)1?:+XY6[(fAb3bZG;F4's6Mfi$RXQ<"g+
%pF\:;V0)p^SR*UQq(bp&OGjf%][J,o\Q?"3DLn%j&(7IkndO*'3#BjbBUkk>JK."d2X_s_=+bm99*8gR#]LD&2)0m%@-tVBfN8QD
%L@@kEPn`341d^\N1d491L)cMJ;V!?7Rheqggm(Oa&e\t@]+3c?9FiqG3b[aQFH4$l&i'plkAc]\@lM4@C1Vo\,VTFa-6E*i@Wk0%
%Md0+(ENj="e2QMH:?$qA)\#D7&hZaO'R88P=i&kG3+U-`ifOiT4;&39m'E@\)_`g-!0*.E!t,@qB]ii.TEg<7)e3,;]F!k%EGP(K
%3O1j&YS'j`p(j)@*2L/(pQ]DW0H)UP<G^'+$b#K=_^aaWX:61M!RSbsM%])4=f3?"`CA9Lm>,^_l<'$!KCrW0YsOurFU26i2N&Bi
%A(tRji3WIp'"#0J94^D-JjsPH>.?j!R8fLg2A!Kp2(I=GAra.i)CLsb7V?GR,=)<tEV-+q%iXCd/_Ec%/>F.q-OE6M)i.dF32L"q
%]Z/-N(ta;A&.CnY!O<1g_eDcod1#&_T'Km\>/:\B'&*/iD/4=SfRqp2>3OokbY6Dqg5[R7E#QPb>5mIB<K0*<s(OYeKDmR9:dMs(
%;$0P/[\rZgXD0*=e;mpBSn$@X62#>PpIhlq+?iX6$u074i8[b%pFt/i4JIR2M-Zq73[ZtIPDEs4a\PkQ`nb^L8k^?!MfF>5i/KlE
%!\;uX'2^">lg8Lr[kIN`Obp^;3%rR_q;o*eB=%hi7U=qboYi&Y,DC]?d2;WrQ0%lfS_noXVmQ*e88H&&e34g&iMV[JY9ip*3n6sE
%Q8ckk;@u>=PjugG-@t,a=68c?L+rnc9lb_$3S_,6gZ!miBsLH:Srkgos&.s@U?N[1@2Ehp1,C0oDVNapoDi0"Y&!btD7=>`D,>ok
%X<nu"9TYprptPSn-4qou*"Xmg(/i>tNR-XpSlN(cR&mD&pL<jrqIb@MnDPmcV?ag7X>sH0H<fK0SqV'6"pmSQaCq$U)VI/B7<0UT
%_\%T[bu4kq([)a:2(R;:GSX_(<h3004jR?FAuoMQqJCfYFOCDI5n3d3X*M*Yao*(.^,<34:PSQHlK:W3D_I]$hD4:&E^@[%1uW\@
%S6QTEfs]QGiKblE7op:5Hq`9)Igb=Va&Y!?/1=sdZY\"\Z\U>.jp_N7-Zj@Y=Km,SMhtu_!@9M!<>.2gn.>2bGfRB4(ZGN@.St]1
%b<sH"f;c&>'n;aU[8F,2bnf;G)G7H58X;JWJeq;gOKf_E;^/]XZRl73Z"S$F_6NhZ2p=QK3Qa%o"hZfh3Kfn*lnZde*3I1(2#Te3
%*"[-kA!&YTAtaFlr,h-TM:mLMr:nV^pnCcGAqlLUTOiR!3[SlJ2l?Jn(F.8BR[`l4I3e(0<<eWPqU\gTAM5j%4<M)U7[!'3+sWfN
%F]OZiS6)+MZHc`e-^;?j:t-@p#4oF6PFcD7**Lmpk,$HZb>C[ZJgM)q+I]ThbLir&jN<Ah&DEhiLct&QgujG$4-qnV9h=#=;(tkb
%1hfU*9ijT[USV*Z=E8R\5MM,jl8fDUUFFsI"(H/H0[\`oM^Ze%Y(LM2_C3B-.Pt-&e'!N&Eg=hF\d9rffV$si=^<-+Cj&]bl!FC+
%*LYK$(p$WO3R-^!Tu)ETDS)d0jg7dq,TsI@.Q"O"r`^l%Y+&3:9PC9>MFu3]l?%8DZ]b_hp\JOga@so(\/Xd32N%kUGnd4(0Fpef
%Z7o$68e'.VAi#[>&(EsdH!is8DJ;LI`:8]4#`Z-lN^?rh'1)cR+sGVWlcA>L*,,4LpOlXHARqbk>-H269+ig1'JH;>B`_Aiob?q5
%`(a=6#i=<JKrR2-MNec)j<_k9>lrAq<"0Qj&Q@*mf+dLoBKd5M#`,Kf7&2Us'D4\f5][@2mX'V*:+0f-jK+Kb`Y]i.i^(l9ak6S9
%gLuaW-+r7=#2*D]oF0q9\gpN3$OVU?efJ@n5*#kN->9,`->.I2\dr%#@ZpKL)sn'!'9)$%-*$nm,%M(Gr*mW,A\1lUrs.Su)5AQI
%joLQ+V?=bsbc&`FGtFsr[Y)8_.X-sk`U21*p)Y3(pbMt1o2Ifp%qr>f*!m9IG\NOS7nng$SidVp9a/:!G<$%GnE5faA's"jUXR^G
%Vn'*p.=ffYG/WSmFp1(F^m$.Cg$=jD@7(W\8/<H'$C;;!`empq7Vr7]dUo6IUT)=)5H7)4B(G4Z)hm^#87hf*\.25K3uRF6-4!d)
%`jneQEC_0[>b3(jfLT+5GU`/XF+oq=%$V9E&=7Cf#'DQQ;H>PrLr1qcs*B.8\G[SSeI?3@mXk-BNp>aTp4H@406'J&.oDI'oV8YF
%TZDRWj"rQ.:d>=TEJr%E0EmRIj26a*?HCeUX.s#Sp<4Qs8;GW7FoZCU0l.7Q9DT3!a#)=sgh=0`p"]^43lpSsV2\n'`d<4'HjhrB
%';k;rk@5d)cs7;Dk7Fj<oZW:,,rU*=e4labbNe2PgN^fOQh<2O$)`8F(Kbgb#\R8%^hom+lV=?pA_%ZN1m]_:RSAEG@o"s<;OSaK
%4j:<u+:a-<RLEZV$0uK;4Scrgg*?7B8M1AFZ8mZW@%S`WrlD%S0/iK2lkCnmSDfpB+jB2^ZtfIYobIrmRAu@L>\D]).DQAJ5'LH/
%K[cES9Q5\>>>CJgP#4>V=N,Ner;d/#<-m!J0\1E:KhP?Tq[V'N"5OmkH%Z9>W1sAb.;<7"URL<X:t3%ZZ9=]doiY0Zj%4+"Hnd(T
%"lmP"oc#&#mOs*?QB(J*JrI'ZQX1lmc="4^Nm$YSe0A3*!T49`?Mnq<,qC04hR3ePj2aM[OtC4rR'nb+R3F3H`a\#Wl!<XcNhIt7
%U1N)f2ClX3p;pF/V5:$Ed&^(i^MlE2NDB%'OR9`H:"2)pNa5Jd+58Z+'n[J.U1J>HeLnD^CcL!Vq_^sh?ERP7H5Kk3I<W$9EPkhT
%b:n/iRUC\8?rVgNb]PF=cs]d..=n^!6Q8r-'ljZ7'9?XOSsJjs_Ar>K>,p%c2(BM-F8tAsbj;!g.4V`1b,GVO1R4rHYZ4^,L93-F
%1TM5^LVg,W%C.acG.8Rs*GUKneL$/B'!b]nOi,j.q]4,+6.*a@,_m)X:ZVVOM(cDW4eTDt%:nOTjhiER8r+t"E.<07RWM89,g99<
%MKZMZAY%sAR>lCR^?P.^&Bn?p>&'NtDtQE!?jR2*3gbTnL/U"1M9r",7M7rXLrY'2EY9rabB<Bfc<TYGXm!OeB?<@h3K+kPs%^e8
%e][BInLV5b43m];T%FHIGse/H?f_c^53%\=?TA7?$Ej!AqbPhS";cbFo?!laYN6JFif$rh?fi,pc'RpXfLK;c0jCCqXsaeuoqaL`
%E69H_;oCjrRNa:;m'HDJEnV_7F`b8$_IG>QVh/$_5ZhAY%I]I%oX:LNjF6?I/l`3WD3>`sl)0\@fHuHH#tHSL)ACO8ip,$_+#\SU
%%#G'>/1OsK9XU34\gqOW[b4P!%!#%W1u%EEIFIBL+YkerX3"8q!bo7WROLp,A*$BN.YOBid,7<JAK4YCNoDr?0$#a!\6+BCP<e&M
%SNT?P9O!_bl7jDsBJFAI$HDbra]&*MN4-t"jX1^+AC$TjpSV6ur%d0&n/:Djpqf+CYB,c;&\?+Lns&8d#AnedC*%^$l(![gJ,1'I
%dM[H6-cttS(\,pK.b3&i]=HSmolh*JOF4P[4Ki/XE>E999W!T[&Nn2t.&?Lb)pV!&R+0HQP=4-!'9$RUgM+?.\gI"Lp-+ug?`I6]
%qu$7DORi9b+Hg.,30]/i%d(.t0AJm>ok<K0B,T74>`@FTNUnlkeL+ZE::6W8ZJ<R%\3CD:40B0BhCRe2SDW.Qj98dMjaW4G\\PhS
%QURL7?7Q=>Bf>G%8739BEaY?:NF"rfZ*sk6:8mO@9$p3H^2th$[?MUhY\Ak)CME*96IbhW@Y_%F>)/=65ja6m3b,6&6V#D,G8\0l
%(LXAckZ5dRT#.4^&^XdE1sIR4gBdETY8ujuke^h.&sn8\?!E];kf.&4c^rou:"MUZ_mLu<XEW`bZP6E5"C<cuB2nYoaiq7^'$/ub
%nFM*c`Q`()jrg#5kt28.Ws:IU;:,_(4UA6p>?=?SP[7B<="[*scB/mGM)`VG_kNG42.n4PM,%sN<H'W'mpiL`):7U;=qh3YB6tRO
%Ah?jJaF:4/41Sk3paj[u%B2tjEf>VXM"m]hO1pU^>&QJ:Lj6Jef8D+EF048D(.e6-q,RV7U04pgSQ6#mBQ'[5`sGe0V'geFE..3G
%>.2\^@oB)T#b\Qlb$hg;mtt8-,_r]37UjVM;ri,KM::W@O9i)0WVk<4H;0"#>pIg`Pseq922\l1nPrQQO*eQ04ZKr;63FGLOuOMa
%RW1^b"8n1b[d`^:R6_S8):;uqj"pH>`33iBfB%lE<L(Labue.(dm8kD-glkT2rnP\<UH0+NH4K_2Hc4),'nDS7?]:>#*4?R\LrG$
%(a3$;V-ZoN,FOtYI:)cH17G+%Y]Q#f%P=<6J;:/TEA@@UG5R#XFM.:UI[GB9nq21'6f^X[Y9Z]d(tG9!7#nY-iS>Q&V`-eUOW-A0
%/>01.R*69DeFj3OC`;/VFHiu>i7/G$/,mC-?XTh\F:LV$DusR_;+R4H$e1sl'[d4t7Ou2l.o%'LX^/D`q#?sEIHrLpDB$+/Pd)Sq
%Ul'qZP>_M.MY>MtOla]Mj/BXr#Sl_B\HUZ9hin[b7Jg4a>b7n)CTK#!T0T*iaN[u&`<etRi?g8[o-'.U<EkN"e)'[n'jkMCmM9``
%oBd#?k81gZ'gjF`7_PdZX'aWq&fdN=TaZ@n+]BuM4UpU-j(V]Ip;>ZFXm1[h.(;NLF:OV-W0;S4JD+i5.r<:g[C0kiG&l1uoAp,i
%4'jGsP;1I0WoTIMO=\d.=E8qO<n)'W\qs3@E6lIW[LsA(@i'oXG2Gt!`4?s:':mNl:s7a,^d5G`-omLeek0iD\L=&\e5gCaH3^FO
%Dl$Gqe]CHPQc2Uk'rjN<CAUNEo-0N\n3\?Zosc&28-e0tI>nc"i]?@A.UJ0CTfc\o/SJ"J,N#F,&Za\"7_<u9h]'+5he0WG1r8O8
%+m\6'DtP^97/U"j(:5*!D$hfl]]>AB=a0W5"j/g8XagBHci"aCWTh[2VRP+_*je/Y_.=l*r;jR5+>ns!:K\8j2J(cab>js%6#G-Z
%`9L^66RCT/nac>BVO%+tLO0sSfqW87;=+G:3oouKh9q9dKKT4!]QfH=d'UsUklq7t4e:5!!/YV1^.BoW-<<GsaGceHaDM.1M^]Af
%?%'7d]L7fHkBK^X&GJA26--0Xe;2A#[UaeD88fu:]\&<jRu5+;Q2mCZ/p]`RL`fd[RhT`kOHr[\:JB"Pl<Vo&B^Bo^MZp4Ipfl.S
%BUb7G#VF(**uI+HlVJ;,9>o+i<RVJBR'3?l>ZN,0#BgJ'!bJL6*W.U4CRY[e[mX6gVJ+K-@c@I+SE9C(dV995$<,rlSXm)D:d4jZ
%,`Z1(=iOI\GV2/!>WrG\j9@;7VKLc/g#CT9$/OK>X7j%H61`l6D*"qLQa(*dgb7[0G'%*L*aMXP1"R0Sh.&0=6,L,55X,O&j]l)V
%$SKQCJPa-60L/m%Z7NU^*VY)'[@;%.eG^'s:Xg]8pumBU8s-#"I[&rh&Qs(WW^,jjBche5AtD41_S^SEG3KMEG7G9JmaYr<+Q+gI
%gas_0$l,2?++ZcIUe1no&FRt0Ss4_p<qgc`pk%?#UiBpa4)5o4=U.]:Gs'k4pPTFDDdVQq3[5#m0.*Y'bX;=4!O0t@EOc'^ZnIO&
%9?r?7U7=-%XI3_G^OR^=6!2uo.!W:pBS=>+`?!XP-TUD8M/q>F1E?$rU7Am+H6_H6'0kOE"ChKUZb.j",2ka)R`.=B'2QUCKFhM$
%j(Y1F"j@"ps6'$B_=D$`g_5*6XH)i0]I9T0Y$OU)9Y7"3iR<ILT]10>;/^_Eb#Hi(9@Q>@@;%^N/#>bhc^4>o*lG<%4Wo5>k_jV[
%<c8W>\,`79)3FW`>\_\]Y@@Tm\9(-G^V^/B+r*1#E+C`_1!9j$2f!qf.SFIm`N?&U:>bIuLo,j;GVauMC52dE0_YV-<D(8V#f4?6
%'_J[iNX=)o/K<b/,uIiJe.ZR1UH^$;M9%;=]hHCD;kO@M28XD"92W8i<u3_P**X]("FOLg^+<>'(a$bZg.gJ&I>0pYH$\?^]OY%<
%5o^M$'F("]Y82##DJ;oOTjU%k>#@@+@)1G%LKNW.B\7"P5U.F,kL-r:-9lc?8X0XKL;X(Jm6b<EgaLa^H9rsB>VNGJ8VG?O#W^%\
%hkWTVMl8nq=Zf=fB:Y#EA>c88\-0LRS7EU9RVV+mN7rNO"EMK&J4VM$#fL";V$mnckGTsEEI60f8OOo3!?0;i,pLmQ&%FVk]>QIS
%\4b!1%qD%9\1+<3N3Ygu304Nsi-mn.hC[Ld]`i>u[[[U\ai;V^b-WJ:qq">HGie??,aI]8)CXl8>o$)4UAsGb!BF.;YSR)SNP%^B
%P6-eI,Kg_%k+c6j>ZNXuk.mIeX'&Lf91RYgVMN%2?X,O^EWeE?>_c87<3\4BD$h"N\CuPH.Z<ct"Nu`p3JK?+"io,2@LS+7CQG4+
%:>skk?7p^A<2FD2S)>KKX-`=?MpUl'R[MTPHoUj#<X2JZ2[d&E:Qp;]*S2o%E9T;NUDpIkA=CD*A/s2cbR!\^Nu_`.Tf.KiG'70I
%Kic#Tb*\\0'Qe@6eTmA!N'Lk^GrNdJAL/LZYQOcXQd[stCu^N1I@Rt3)UFdSG!+uG*"s*"FgtO)\pS/T#4_9"jF&U1Dpm3J!b3(T
%M6WeRhka(#/j8"8Cll[:)%4s1R)h6_lUn%6Me>efGeUP"-V3+:Vd.<1&D4X?783o@R"N?<7aeHV`pms"'MFM8$D*HbiX66s+@1st
%OFn'uYE(TiYb=c[.BD*SGEZY;.9p'b>\m=GlfbG:!/nY4VkK%=!5^lk1VrSa3&UfGbb[G1$9+[`XaA2GQG31=&bd<G^Q"^Efp7BY
%XuGUi*RaaY7@b95V0n.YVN2\!b<!s\].Zs'(u+dqR^'t1mcrNAQ4[3C@5;]O1A%B9gca/L\H[f:1)J-6h2Fc[ZllNaZr*+N$LKn)
%Fu?K"f3J,&*c+%cWe@$CfCf</,;dtKon.OEi[4<%=M\Z46S8gRE_<O/EDA7?<R\'<>h.K%Wr;_jI2@`DI'01OIT8t[@HG(h/m#E?
%MRq_9<F(VS(R9+W^94W6oU3QKpebVC?*2:B]3HGiWj^(sZ_QM4pec/=IT:Z[bCisIGEb9ii:Vue6%p-QU(T,gkH:iTg@S^6QV*==
%]\lkVGq"/=S_k!$fjg;G#F/WbMb:Z>G#b[%E9bqT'L&JhZ7N..pN!&#RX2_OrJU4opef!Hr0!5HJakCnq&>/O[:m?gWkRCmQ$mHh
%f@><&GRb(q^djYsb[8tdIPJ-7<;TPf9^rqsT_\c)XSe"8o;_X?V%3e2^h6.;i7AJ?."2%2JC8'8!Q"M#!GUlb@0!.-*s]1?rII5l
%j,lSF]6YledMIrJ)k(Yge'k(C%,oq!5^;JWnR085>7K]dL`lKC6NU<Lj^Z/>ol'N;e"_MNR]D2IPeMTOfLXMO3rOFE]iDIqq_7bs
%_>e!5m<UV4NAJCt!W=,27R11iSNc,n-]GaC;cmE43NIi=)TWa("Ad_\bb.Ta"NuGnpVS@Ba<2#NY,\r\ZWl9cX1P[/,U5jO?n`E`
%#&bFC\abWa@A%bSYD$0g)9E\#Pn=Fu?dQAuVBTk%)o[pmmQUZLYm@@l`feVIO"2Z+Mp2qPK5;jKQqb7S#e9#AC&MkZoZgK/VRm>`
%@R0S%7"066l16\*o/]'9iauc4R`D/5>t]eSMeD=aQ8E+qUMIkBlYe@+J]2mPR[^l/=-mn.C`3%Q)Klge^?\KNf3:&Sc&X7ll0Ksf
%2eRL[bZX@Pbdu'3,5hG<,5]CYQ!a#plDbgM[ri^J0&'k/WA"&%HiR`'H3490jqjV_S)a(fba6#VEL\Yjc'@l1-_rY=Qe,3rR8]UI
%,r\-B4A4^=k>PT&8i^/U$[kcS(!/;b.]>S$(OQ^'WX0!"<?i,\XKT<bV8<.uA:O-E12Wc'C7QXi\[U?q'l8YIXDO?YicL;e''p<Q
%p;bk_)D2QqOC1R#C=@:LfI3rqJBu8^P&Cfoc!N#R/M$*KetTF!?@j2-n^oBL1U6p9JmE9:mnI@W96N^8PIToEJ1NP9X,?Vum,I*[
%f<&U).i.LlRbl>p=YjL\^"TWomGa/c1<qu]7'EcLIWk)lhd'1HEZK$Q?[c=u*KHY";fK.A=*f)XA&@VNgDr3fqBFbJTpJcjO`Kmf
%]$fCKG;CXN?g@&f[3j]U+1Uu?;t?:<_H:eZJ)mAA4e)-E'1mD\3N+ldZUhQA[H?E`A,bX;h,$NdegBG=-aH>!D;4*Z<aV+`JU_q`
%DHs%7Wp^;3hEK(bg=GMiIW'/&AoG33p-NV;\!?@q&GN0/%E4=9mTs21lch`/q3sgag$^VUG.\YB56Kk.bLoim3mJFHBm9/'iV'bT
%P+T7PADn$AE8q^&q7<%e]Qk6EO%g__%?i]13TcQ3Nq$a3h#?H5nb-lb6$95tkN=/I5J?@U2pDm5M&T&F9GV2;HrDB^lg?1=dB%(!
%!mH_=@H)^As'q%fI+0kGM&nbP2g::kJ+EtY\%"PM?GcZi>M]:Uol5H3SoPS6o[l"^=&n'HP?m'8bi)!_ST*Vl8^6MDXi*Z;s%N-N
%kKTRXmGE;C_aOJ'5;2:#koD,6mDlk(EDK0?^pFq*M!F#OjKGPo@<3D7iO/K(SJ17*^[oN$G/VRFh`hcei-BD,Gl'Fli9-D6f[!4#
%IsO'JH.2UL5B0?,%H/!L)"55>E4<*07m,*UC4!Pq2TL*5E/3f9JZ64:(Ad!TLARa_I<4Fnq_rRN%5IiN$2;$KJ#aF3:$X$Oig0.'
%-B>afgo5a6]>UP7bAj>fl<P1nAl?+WYl2!^LHe_^*H#a7DuXD]DMbj;gEiI9h)DHsn;1Al'/+KooC]6R[du]\R2YJ*olX=uIc-;$
%4,<d#nu&t._p+2$mGH.9Xf"tO\!3L-gc)?rpk`3I,Rt*H%K%aO9+F(3Nsor>]s4DMlX2._7e_@)C&B9X<W5J)*H,g8DuXD]DE3UI
%QfS[(-!g'rl&I^IO8+Q98gFKhkIL2,J)*@bqgA3q0MBQc!#[*uWTDjKQdNJ@\lWP>>=nS6NT9E`/CMf+'*#6=3BrYV*H,+'nIrBr
%,i!hfV>Rq(&g(&Y9&L99HNQpilYXae0"R)KEdfLs^:A6rrL6SZh=!)n]l^0Ak"#9d4XD$olYq@P'.1u"aJ"#K(M_f"GAVMIaSBL4
%hFmT=Dj[>i43-*jq#mbqrVY.Sl+VT4os=@VX)u+nks->[AG]3nJEpOQRq=iWMT=]L-VVaUns+t,UXFR3kBQk_TAVGL5Pf[n\o6:E
%q%G]Pj:=rME7:fSY8jI!9l"BH,;'e_/@ld]mkk9@Db0UumgmW$[uRqIo*N_1TBD1;(K*9L=_bLGUVG2@^4#h+?]CZ)9k\TtkBDFK
%EJE@#JO\ujs7=FKrp`eal/b_@rP/=&YFf\r;tHUJj#u/;Ha]"0C`i-!52NVo]P%+dch?nPpM:r?ffn9!IJj*ggW)KDi/bMnq48\t
%IE1ik@sHlc]^H]oG7<q%LA)_+qi9W`a7-fQGi(5pVQs\7(#Djp^8DNi:EfKLP<ohrHd9FQ4^moQ1[mP?i9+BLGg@9&Sholnj2%_h
%S:PT-g@%$(hc.,CEsB@\FMHuIHrK9YcPcMTdf#ann-t*K4_N]B$MSnm^pfTspRHeQ.c'PR"5d"dhfB"9V/X34%")"<Ia8o,[aP,G
%1[luMq`STMRgSn:cG2@Qme<6&D^sQ23<S/>]&.Q5^8Z4hk6u`2iI9)jpm/eqShok1V>EDgi7gluHd9F9'^k^cJT!$nml:L-;S(b,
%#/7'Y^ZQ#Q>NpU_)>L)WrLPh79r7_MBAcudpNt3$Bt3%UB:sVHp2C!#a$2[S=J`OipT$L\r7c_sjqj[3S:>4S`Z_22I_^rD%&EDS
%CF4_;<$%*o!?T!j>Dh4cqX=FRRpY)U><$D_HWdK&\//gTg_e>7VjmAi\!cKh2-kstE7#7,o[<#6eSoU4ZkmO_Y-s?995[#;(NftO
%dUSqseq75/O"U9cY<o0L)V>FXDKKpNrjKDq@mGP"BM=Y3-o;dC"_UAOJ?Z=BZinc.\7]]PWBVD?*N.Z=L0>N;/:G]$&qmii1!;<(
%JhceX:IB"bQL@(c!s^jR`MKn''#4;12o#,D9A.-ZL7pUKp`E$+OQ`4:%?YQij5t3Ed5lX6MtW?!ke80c?/$ER;7bm["&WjllLfs\
%WOM-.C*4.ff$7CH<:G-+bo.@<'t9#I./@&WmQfO8s!V-V7a2dup8@g_>bT@]%8'><F59;5Ak<DO,SJ,d(ol%i+mgd`,W30iERfW+
%`t36u*OgnVIJ7"$\#\"_\d7+(Bs=YWRps,1a_>E,Xl>I;U=m@;k/<AUB4>;MN?2A'c>D%dp;8`X*Z6"oa]Ur?@0\+M=O;3UP-]^M
%.dOV:K"fK+\p"U(4J3I1LPW-"gYB]U[pM86/&6On5W<3-J<n=orok=\&eXZYr),O`6BSk<&`15._L5\7o4$*Z:UTQkop:gFd?T)S
%ajBg[6CCmhOu>tQT2BQ`F44_KndAabIS:a*)GI4jV'K8rK.)1NdHiX7^_!&a)nIm:W#SAm/W'E6f*s)d%+=(t7dq:W8Ke@3)$U($
%YHj=SVbBp//X7I1A\6*=H<en[?=DGX.1*S5At3Tj&k`toQh)NW@^2'TI[0WU3?bn"H\aoq1ii.*&<m">R!7p:;)8jJ/l>0.)pdjZ
%qRiQ*o%d`4SuQk4VGD^H3BctRj\,k&5-<#YKrJILehm`D,=*)"#)UrnP>fIls%68,F'b<&8@+KO89trn6Di@GXQbNR_BOp>\K^rN
%d"kM^]GfT/Kr/83p>K^9JNoN%cAYT^%J>JoNKbiIg>Bh>"Nl6^0GjpZBnC#1;m(`j.ci3B^l%9p=<&-Q1_i+Zg)@pP-W$feKjM8@
%c,_>4_'Xf!lXK(d9AemRH13j*L$h??q/W^i1SH6rHEm8/`(\9i8NdmtP/0b`(TpEbE%[MH:LmaaRuA&Z3[!`\hrH6/bbNW^cV1Rm
%3)At^3>OFDcsT^e@tl1)OAAe08?!9)+HeRS%)_SaWe.+F(0hg)k@n$:R_/.$%,h`'(;qA/\_/(Z/k=-<JGFUqoU4)H:\g*BZj(fD
%(>Tf<::)c!Z?9EuqU,b_-<n<$g?>#cm]1%R<Q-68V%o+'C(/72<PaA&Os-*K94gk%>J(6:)>^59?*qR;lLQC01ft$H'U-[iU.oF2
%I5N=;WgoKW.fc*Ajg82l;ab.a.b"7F#2d$[/LakO%FhK-Qrn5RPa>R$3)PZ0K!UPC^886+gZV08/Zd2kP!@/u>='J^p.K\fpJH]D
%$3h-lf8&F'5tFO+`2od$9NICp@hB<Eg&gbhf>&Q0^GSU9mE^9jlJb@Z&k#Wm!)iqO1%ascnpq\/dF0+PLbu('[C#>(Kj)Bh=?$LR
%g'ABTMC^RbM[#3*&ms9i"%(h=brf/e48M(5ACh'p]8n)pHNVfa5Atm_(CeiZ-3DgjdMT?f$d7Tr0eAhR%o?L"_ZZNp6KEiU:Veqp
%h3hs_,4.qJK$m=X*WiVP3j]<HT^r_.A"L.=s'`5X\>C$:8"FR1A)[>F5`^^P+_Z*cnifllR&_A;8ip8_-8CN%!bq[h\^(cER4o@C
%QD?hL(hbK'6=pG2\*4@)fhqVi?(70.<oP&HN:9d\Ul8&)(t_"smP1N;..rj/l&bqD[G1S?\8n7gN;cZUV@L</d#c,P"g]aX1pS//
%Ofj>M=O>,k79Nh;ij=pJ0Vd8CKIeReU'uP_PXEU`qE#g7=D].Y#$]H>8!0*,N=tC`UiFp\f!/gs_Wi:BZnEDI"OEIP1)O[E3bJh\
%0#1`8q-h`RX'6N!hb8dPV@PK8IQF`9ppM67Onsj_7kfY@5R9c;6Mdg/:'H9G;Bp4%!_/A)g3tN9_@*[oM`gl1)mqC7!`@e)]TeU3
%BKFP^5pEM'h:Z\uW#SZ6-TNkE9W4Kgc*l]hgC<e.GulZ_g%O*.WumS5Lfth?XA*O9Ve@3XrLIW$?4`l3Ui*#KDEm3FUrNbjWLH3#
%WK!MBg+@D]q*9;M4f#M]%;Lfo:M"D=6"ebB\[M<OMC-u12s<dm/.E]"D'BV+ST.Y$"#\d;dF5G?"g$_PlSCrU7S;B+6]IC%?VW\p
%YcC"6<@<?B/pSq&S>3!<,:>I)\#1:q8!erTB4u9_KdTc=Kh90>R:nCmYACJ!32YAI6s#\<NARiaKHco18JN.C<FJ/`^8"j@(BWc"
%S5j"e@L\`WY&,nN\%9pO6Q$e=[:+S`pNFc;/[buWGbBJIc)"`coKotE[C_WPek7>YWsoN:g(6hQi?^0McA[J)L&n>3/V'U(>Fb!*
%L&J2E'6[(B+NUqCDUk3o"JZ4LY]D6QR]h&,d`n=(`"cu+aJ5VFf^Kt"4c_-9QZ`OsXmS<GrS@ueQ;+WT1TTD1&0Vc/ZiWmu,AhgA
%0;<eI"snKU1L'C3;R5+Fa.sgMG8T,#hC2RGhE3dDk(9&u&?36m-RVHWgLTU<dAEj_8h4)75\JeT2N(%k?F&j0^JkUc>HN"=ALaVR
%"T^LP2\?b^7OI>TSfKlDO1jtiS$lbAJuXJAs'\6&dQ=7G7BU<E;ZSpnZ,#aF=W%@*(]q6DkCO`[M(H1I.:9&9:l9c?EaD5an5\\+
%gFNdR"`<FUgnhbJ7mJo(dTCu_9W/\\/H1;cB\0F<eReYWV@ER,V$Eqk3]3-#3$pF<26eRW:/?g8Eg"5d'Kis0Y=dM66V/4nPr-qY
%*L"Ir\7SA'4m?W:Y>6Dmf__<kqU/BETc5@ZE'lu3:c3@c]K\<3f*m>[d&fm8CIbX?Q9Jtq!uN%q:t=!Re4J>6L[m=?@'k#B.a"UG
%k^mR6936=@Rf&l9S+Z`tKN]PBc)*R-\qsU[c_/PF,L(dU`G0U\,mVK6CqcWb\Z%+0J5X\c*O8jrq09"%I%Dn'J_C=*asCr!Ao]a1
%3+%%6gFgU*(no"j=e)np.,7]IdgNFp;HA\d%PDs#VO.)g-V&\GTB>66gd3@aSl/"/h_sA\6>Se-V2.CqnUU"/p$Di%0KqiC;tMh5
%Nh%ASH9Curn*g8-2nsn=F?hHF7#:N(J,%;69D$%$<3i`/J;SeO%G\];o'LX<kaHd8n(E*cGCT@r0/%hSnFqG1f7-3IRh$5,<rMU`
%]j:Qre.=7BJY^0-7nl1^EW%-c;ROTtq!oX@r%/EW(:XrI-8&d%8#?#RamgZ'1kWMSG$KEM'a\e<$j9bCZ%4_LYTc)WGo3=Y_F[Ij
%#=h3ZZ(1Bh5qds<knJF/U]t9fG-Ep,PNn.BoT9=W`clH*CpHcQoAcJ-cb%X-Qk@`)F(foKLOD!!@>GCZr8B?'(qG6LdYYjBf61(?
%+t!I!^8L`b+P*DJaTe`#jg1qVc;4PkF.l<,lubgtmRL,H"#13Gf\=qJosV%eI/1iorS2D4OIg&Tl-FkUjqhaUiS>pB`pB8VN2lW3
%1n&IJ=JP/0U]"]FkAplTSAIlcpH8B9;a_Xa<3o2c&od>`MFED13?fC_4:=mg_=QWSWEd))4?V\6QObddPD=9X8Y)+*\i^C]MNChj
%0Jcc/?7Z6iq$^.'0cW:-)qIUR`aAT;'1i"DTE3q1e4?*Kk?oMR_k"])WcnsJcU?^G.bec_]QW=MZQ?B2JTa88*$+9W>IZ!/l=sHF
%hl,bL!K5r*6JH>fEk_L8_WuhmLEO<jF>Nm/6-n,4[Z0g3S:q1)JbB9XEhaT*rk=-ZLQCZqmAL-%J)$`EmiQgc_RP*^;>^@?J!I!p
%bNDV(3X\?<!EV&S;=m`L*(HdhX=-hcP"2AAU?u+]&LOH!^[NHk"8,0#)nn4ZK:I.q0$nc<K5ZNA\*\^fEF9-NK6Qp>RN`Es!G^p]
%XjMo>B7GMYYTIoDpCB=UU>8'#8.9b3^n^>R6iSX"!*9`/8^R06-VbGpK1RF-g4me[IqTX'9517B[V%4jJBaH3fS&Y#_,1:lY3ekk
%iF<XJLEdgqR<Om%Pou:>iM:.$X0I3ead09s(9KQpcj"6H$h3i/o>0or#^,ZN98)VF'Pp"\UI9j,JILFep')"I]c5T&IdQB/\+AA%
%"b-LH69+EU@:[g!IuI8%r_\,uR:0^H7oojTabCqN_jd]X]n2gc?6M#S;*6<A:A@3tcKJ=o6)e"9WNs:STWsod:^MbZ_A>34FhS3>
%UaH[#`@)Sme5*C"#%G)cYd\Ms)L],;p?SmhmNZMaG//[d5NJbks.H^fh`'o#HhY=j`gW!.YN[i%`C6t$S<X!se#'XW>s?/?XPh4R
%kLf)8cX7@U&TGBs@'M;4L_"W#D-YA:e$GU=,#lstKo%q2=tDV76P&$r;?IdF4#WP(PXa-R*ko2;D[.0LID_#4G7HI0hD`s:^Y_'(
%D^4P.8)&Gn3;S]s:?UhrLgVCZ5DTTTbn&QO+V`VZ-b9T(Rg#=EV70qLoJk/h#A4Z9(bo0h/V")@-#:;RO:Q+0-A=\ncC>E*MND#^
%XbE`RPS[1YV1BJ<"4VKCV;Ci;&)VgffF9Sh&U+[?Wnob_BZtll/PEl"KDdiX!l%KfY7qm:X4,\:gGZ%UGs9hV:H]i'.!u3'd\W0Q
%,77R$W''4+2cL!(=<Ds:0]\bA>C7RFq'mZU9][3!]jN:8=07Z*OQC7SD;ZNq\oI!'CM]].)<0J`YoRuFpQ%DJF7(&o?@)#[HdocZ
%oNu/I5nXqAG2GW9boe?"l?(nD44a\(c@^Q'a?NrG*@Mp?aQcMnl0o@>F,`U`%1JIC6F##iN7IQ.fa9!ELJjj8EJ,UcgV]SN5n$hI
%C@_kAhMFmD^M5keGW^;4P@P/IeOks3-+#8,D0;'Q9$nADLQ`8QN_omISFi_.=VQY4g*dk[O^=,5*t2M1a;(;?/T!KN_[<r,3].!W
%[Kb:UF_\T'fA:u,dG/'6iG7SB)s0Y(9,uai`9d`kph#XSgE`U//B@R2"H(2D@Zka*s1jS%kF=dOO"YnBH_A[uH6g4-8/Fc+\HXd`
%r\6jQAZ[Ajf0F8u2VjP\`i4NnN6>qpJMqpFpI,'BIK[8s25G8B!!ekTFl<O%e48eqI&4TO$+F()5^:#&[M^f@36Tpr`tC\T<EVs*
%-YI!P.c'a]bQan0k!K\Tc<_EfFd%it92cSEZ#<<\oSJ2+Ed&4mbEKA%0=HQA54=rbBCG17N_PDELkk0"DB2,lkhZV32")tP`lXsH
%O5Cgi:+fLU]P=k$bL/i]kCuW.T!tiYhFGFMkD'f0%t],09?5fN^<WFUVRNjQoT(V+d<uBfFSZ*+X8'VDLT&C!%_/![NF=@n^ZY`^
%K`WXMTXl.,jMKc[:s@5@6p]dN@7?ZS8dGqb#cZdm5t@/T@=6t46c?Z\Z-3BBS.R#eFH./6AIBZc!V!r.`h7/lX9u\l]gn(!fR07O
%32jafH]DdUap@S6MV^^rQ9)aQ"r/,b3OL!;!A6pn,4d93gs65#R$*$!-W(C$NIp,oSkbYtQk_DVCM%9>W5IbMms-dS9JjnCQ'ZE2
%*>7&SP83<'a_;(nf/j%@M`U>2BhD6Ygd5KH;;Hd]q4cpeZjN@)#T[q7>PXQ@;I0`8%bGOLVM*bj\%'`(/@!:;#MQ#`E[;c+@dI1P
%<8):q)l`p+8iJLrXo^QDn7Mu4pm]YScr$a_9ls@4$h+74VFqVQdf<Ss,MdW[>sIQL]>MHQq:)!7[5=gVQ)#GASsH-0jICJtfCpb#
%W#_LG5kClh[#%AR#CgL/,M\re]##X\2ekB1GBFTfncZ'fX4p,%?^<3jSrYVT\k25>LDAo='Fd)?Bp/O0F6S[/Ii8I7niasC/U)HN
%P!4\)Lq$(5JbmN5jciq8`iWXZ$M)($4g_atbk?R$?$[tje%p^?4\e%dTN:N3;4nluHdlf*/)<W520774MKR(_&'RpdX*D?l4+fT.
%4Lh&aB5h7NO0_(j+[#uL(\;2\1l.Q\q3kb!d3"KS$Mi^c,[Ft+VIYQ\eUcEY`\pOr^55TP(fd31BVfAn1c+^a&DC)U5%H*8PZ"Nh
%I>C)5L=Sje1GV`FKVWXnkSS>6&booi+(gos-dEW!;5nX<=#)>+mLf)Zd?oN!<BC*&=bmPPPgg![2sE&-@,]T9=p.taF@@P<#q1__
%NLV*ML"k`"e`(\'>qT!3Oc&J@#NnlSS-#PQCc(1NMf-Qm85X]H*"jHq+`^KC,6K*mJS1r9keT^uOeW#1B)%ML3JHQVTuH3m5r%_.
%kZA[BM%eC'mjWFuKU-_!/se@k)BJ&0,09ZoNCcmS:.qt;l\?@sM>>@3:MWca_(.Z0,UTlQ$1QJNX]*%_)c7CThKKe[_VgFG/>G(U
%5&]2cZWKS!8tul,2gGJ-1[2PMM^RGOWm2'^GT&sfThMM,Z]HsUg$T$a)<>U">YC`S3aECn:gXD9WYSATGNN^Cd)MC?^J4u/l\FZL
%WqHpS(*Q[nmhj-u3sJ]3#6PNMX#ot7=E[a'o$9-m3%^4eC,U<3=Mfh30l$1\N.q"a_:-aD87oHLKB,pN#a'60RSmUd'F!LfdHZl+
%3:WHBGRS+V*eUK;'D0H=Y^(ihk*`K"E7sW7cItCj'pjQF^=[tuO"G%SH#S2^7m#6E@ss@#3am,R'Z?j+i2k%A(&14G,AU!"Ffs&H
%Ls8G3bERg'a3IG:b)+EFUfY)[3)>AT\KOY_gngfB#n)_i)JG`Uh&,S_>l!C,4=-`#-8R$2G_c5:3[Fu>B#F[l6D45'a%=X9-:""H
%7.(]8$RSV)BkBc+gob(V&Zs&UFSFR'"N$9kR:\j)T0V!P')&&FS'6h)h^Kg,D-A#,Vd,i+"u8!OTK4<Z:5IHXQk@Dr'^Ie)`7VIR
%,5&9RrIYR#Id<#S)1b]gDR*._@n4!$rnQ77&D]l<96a'6-%;BtNF0fY_#,m[f$bC->HdXD'=G:*Q0rr_Z[M^Kh81#&Z]\C:)Rgii
%\rc,2Y+W'$LR//S3h4YOE=u-[:fsiEOrG@,*W8s]R5KO83>V2P-D[XDL"&pb^M:"V+4g;->3#C`SgbJ8%j=ij,4m`?0qB_'q'%'!
%BH)8&X*C4j&3HHDo7G740@rJpq)/7gP[V$p$QMDm_!2p4&J5q'JQ68_C^CDTb3B1F6Sa$J;UEN[gWkEo=oOQYlc;-(M?\M5)s$c@
%l>S?J+gs!OI/ai%<%_oD]C+(XNkrp,U1fXhOcuo>0N!H[*qaD^m7TOoqK+SN%:t4aTK1>632H[L[SX:<H)c'u+.3h<(EM1gI9\?e
%eP4JOrDpUbF0bM%NqJe;2Q&PJCSjL80.5($F/!DiZYo1MaI)i/<HCB'1i-@#Ofst>JTb(ec((VM'Vp]]ZB8^>ha#3:T27H?n^XWX
%JY\:/hpIni8CAnJ<FbG9<6]i%3D5S+9-#M=mJpc?938YJqFs(mOUeY,Drf!,qbq:A\USJVcJ1(UaYN<j"$<kSbc!.k%BBCA+er.H
%Tu0#K]mB\?ioN4DQ\]9$(ePB_cRD1"jIA8[.;RgD%\h/S]CJ5mJ>!t"#(&WU,bk*IV6d;0mOFdP-9.$"e!cK]9qj)P(OlXBX4It4
%*?YhKAP"t;Z#gsmXdhsm5gn:_;E!b1N4*^s.sCF$#O89el0%-;8/bY.Ftn()n>,uCB:K<@o`AXFVNduLOXP;Bi)kbV9U$#&O2;>o
%B$3QNTH8l._'>Q74;F?6^ckLT(%KZs^8;'hpiI=/Of1/@NmhEAL!MA4AqZ6r\;FtR&^It85pSjc/;aS+7kuKLKMtV#G2m^si+]/r
%FI`298A!:mQ(kjWQ<hWafiOP?qPcerXso0&gLh&Cj_OTs[eJAQg]OWqjRE^&6Z^&ZoBc5tX?g@X,M!^l6D;=0BLd5S^-Q0/m>.@^
%AuUE-,D<BQFD;"X[]%p--="j(`P3)8$_W-M\IpsWVVpZg;VH6B.cNbfA9%Pjn[]^`!--J^Ou"C3?6BJ.GGM!Ydbr&pgeJ:P2TX%J
%j!Tq1`fjoIUOb2inZcUJB->*9T\@+G:&Ansl6J"J)8s^<T\k48R5tTk?>K<n?Q%UTfS"a_OT"bE?Q`sjVJr0#nZgXA6qr[N*UCO=
%4M=&@[$<q!oNj!-HUdbP+ntY98`U99GKJk3JV&^G&)R;sT:@Behr/r^C6j7D>=_IM(I!-^A&db"QYA[(hunbW3-Z;2JRlDQA\qO&
%TjeE#LRsc,pF',gh^H;EF38+kSNGcYCu)rs8FiHtK[(BC6)=s"MW1EL]Af(-5a81:/n?ZRfnfA,3\B]Xi8O)T'mS\:$J_pnWjc:`
%>s$`#'q.3NgS(k@k7.\+rS9OTI,saf!TCZrG7=l#ijehImX*B%"5)Wd6d-juE<hESSN,HA!G.d'$Q_@.+9OhKp/:+.YCIB\7PkH!
%n]D8\##_n:g2o0f;je^9[Fe/M"==R^L$7#SDkEc!'12'>eX`dX#K4KO4X>DDoA2cao"06Nd-`t#k,-)DA*8)pn[hC0*X\AR$9I6p
%:+'4e8:EaX;\aO.'0U?BD<T=Shh7e97]%;5^O-^%PO"=9IGp(f%(8IGfTZkT9j?)WZb]TQ<:#V1`Hi%UWCoa*o!08G$\//+nE%VN
%LP.;^gbgLi%=I?Cgt",LHUjc.389RTl[o?SZ2d`_as=\34C45P4HMs^?Ua%GM5,IJ^"B$-\k]7Mb#-H+0o0@M31E-'Gsq&\\K'b1
%LcCa?.AOk.j#a55+1I,=2\Ho*bcth]mi;k9Kfd<Wk1uRQE`5G8BC_N"%dlNpc=Oe32L04QBK0s*ek8I8ML"5m48U<c,lRdm12%@q
%=aZ[/S:Q>F3T3$OqG<7<*t1#aW?<SE@&jhIQI.lb9eVad[C9A(AN(qLr7Rj^).W(S(M%HpIq4YCj6j2*bKW"Sc"DQh+;W_!n*#>"
%+ubQEfIZ`.T[T0-3k:/*@]n-"m`bK/IHHk5BLSrtc<0-ap:(W>*!s=AR,L=&bhrk9bSLi2A[*=EIS`)"L4oSGDr;*?VqP247;g]*
%7]mQFlT(2^]TX7iiRl!'Y]/e6,MIA^66NIpkosGa@>D?&7"@M:g;+\`N9M!3Ua+3qZ]7s&*bi3*qr'V!(ml9SH(]sk\p="WHY!)A
%"Jfm[MJ`6GZNh0a6s(,rn/*'4k[QGtj(Pou`S.J]c_kk_9fDg\/^#m-bnWjJV%'12;`8L-8Bhgm`IgVEcrUYf&+OK"KIST8"gQit
%@TPa+3$Ip5MO5jp[M_uR?:btFB[$X91-.ck?KAO>V5GESOK+YQHjcbO(k*7]Ai9/?$m/3YoT3&bRMI>$#dTK,7/S`im=VmAI.6d"
%8Wgh64$u^E7AM*tD0dr2R.D1(V1An>WRsL_/Comir)0'D.*)dG,Arj6ZMe3(QQAcF,D'YE3K62FXoXZ>JW@O$.Q;Tq&9LV)1]I%!
%%69(&Zjbi(V!/aVpF`=GjrjKAB=XYqY3J;]:=&GgTdK:ZS3rrBPcZ$YX4![NZpJ5GK#gKS<EF2jL?oK`-6NQ=o,.ZYOnca]"!/FB
%+L*+\%$!:cG0!U[,)a>Tlq*=<A*Ap-d)hgDe0'l:eM#]l!DiF`d.Mn2iJN.cgEo(B@E)RWClt@Vf[Jf)c_K#TgD8<(ceM7X-0Z8;
%C^%\ZefasW8bUlbSQ+b4F6ub.O]23?8RsF&pf'"36W.$(4TTfS0?V4#mdH0lL1'1i01JH4BX@jh@Q-j=#Jjr`"\at,h'\aJBuB=5
%=`b8[0H61U-J.bZbS`SXW>MR$DJ,G(\Dbg9b2]@V7Br$hmZ+"3G_Cm\pcO>'VDoNsfC5,t)#j4r4L!;M&+P=r$hn91^Y:"AGXRKL
%]9uCr,^niL;0iq2hl5W0+'nT1Mh6tD32g,<r4lt=H4D4I#ZAU+EgRp]!^[f`RR3Aa>UTl(l:!ua:-SH,.m>Qe_^8s8RJU^glc@7.
%nd8Y0[N+->U/bZ!1XP&p5]%N:Uo%h;J4CGI>u"\EYrXp6AB%#5Bpk)&O::XmZfMVp%SgIQNPaEaPl9E8&C0g(*//9L4%/Dq9eq$;
%PX_<j4Hl/oPrj#$(J9a3RUK)^[U<se>A^q7jYF`H#-gjdqos)6cf8QLUTMEP6KU])_H!%`'u3OaN`jolX$4hE8,YJ@:L)=>7u-"T
%P5`\PU%aHRg:#bPo4o#0=<<HZNa0_tY<jo"a=DK]:Bf-cf!_.)J1P&c8cpf'9:`Y6kq=]LB]Hp=Srpu<HQ@on*llCc/1%8?`q.!&
%U;3Z4"sSKSpD-I`*7Lj8U1PQX.t&9`?N7C^n6Kh;>QoE3#&EON3SOccG3S;u0)bTX2PfT?Einp%MPE,8jH=.-O0n[1f(L:KgqH?.
%ZEma`o=]#3^CO;8(PUIC]gjG'U5#^8Zn_6$TO=G60$#uB3]RQW^(ut<#2F3oF6TP@QemVLe>134E"EE>lA#\BkM[o`7Fl$TE5ro<
%9J`:FU@pRgrn^LoO&(ic21m;Y)$WMMhqp-;?k;00a5AG'"@&])^"DP8d+WU7]!MG(-Y7[jYiBZsO&aPW=]%OC@OGu^Vt*#k6f%VC
%%f?5%7?2G<hCE]_r;HBDr2\aMpudMUg3'monW;NRIN37:;ZLAkVN><U^,J2AE?i$E*$>1kmAL!3YlFOWNedZ0n6c1\naK?3ZsWeq
%!WZ)ggI4el%l9)qjq2Uf-s(HiOdQ>CC^l))3$IM-Be9MdJO+:VpY+];9#^?TO>Q*RF3b@RePMX-775gN4]j$Y^YEE>,KL8e:>7Aa
%%ub6.[IuF:b[Z7'0e_9Yr8C//'`@D!@V('cf`(g>QndS9]C.`>TDKopbNS%l148QB7.&h)>k-/:U>4)\2eDpDYIYb)+8X2DL>Msd
%s+126I/E6-s82h[oFh(]kM`>$qQTZnnE9*S:ii84%GBd-cM)C\rnf)?emGVd3-t;MJ,djppqt"YhuCm7*<2\.s7T6<qF;uJIm+qQ
%qX=FY`uhgQZ[Z](q1&D5YFAmHMaT9K3BU\OgWoPl,=BMJk":.'Ms2lG!2k##s"o.F(;!<">=rdCs0oA>'hE39hb;@JN'/JOCOp*o
%`Y;#sD/\[uV1AFKMncf_qeM.u^GVhMVi<R[_=5$GNV$Imf@Mp124!1("jV/Nf_3.hmH%Wd'_n)TFgs<)n]Sp5iRs-5_4K>U>@X,:
%9Sn/Q_1!WNrgS[]?iK\!UM$r1(bPd"^\W2=^Jt>pfRNn`Q[etoTDm<_TDn_;qr_<NX]aGne.P3tBfj9\Y$L!!B1i'*U;#,6R5K40
%ccp']5dQ"ki*r?oD6k!.NsVQ#/-]k-'*<;6:iY\,hJ'kQ4pIhY0oZcU0i/$Z$rj?GL-^)Y&2iT]4,Q7rJNCO*MLXKLS.*p;/S>1Y
%F2-jRKT5H2ih,m4B*3:(e(I"bgon:0eb]eT)6&OF.eptJQ0)B]d9F,Wo2u9to^".<e6$LHGQf@Zr$DUtqA-iKKh?'/l^=1UDUoS0
%aH&5bCTchr\rcs5@)%_UqR$Qt(\1aWgI*)s^Q>'624LQo:7m!<KDdhX.d<q9CSLfTOR1RR;8;g4^QE(,]/*<(cm/D;6nOJFbJI#"
%*XIW<-YOojCpagWPaX,&ULL!=>,kF?bAlTFX>2Ml[,u)W`oiu>!$%ajj.AD.coo"'@\%W0=DceRXHq0iX+^F*X*P]jIpR-<n5_n7
%oKV67&q[<'<oFL"AEIneq7+fT2f!lB=[dqI/j<4k^/uJ+pB_c0W5jIi\NX'G3rBYn4s(a2:U7$%??W<gFS#K37iQAEeEYBHF#_<F
%5C4s=DQ3YU2E/\K;iOmV$ElJB+!&NXVXR'-I<0aYPN9]c1=jKQpgF,UgJqo%?K+@>M$%I]NlTpk9eUG;<:B&/@;[P=icTjZXTFO?
%nA>q&S->eC_iGt#J2X<>_C;gK#B'U=o,rqmVFkC>'.!sY1K5&_HP/i?QkI-Rf]W@U84NZ+FZ>$KXB]Cile6AK9j7.qD<%t`!eA+@
%]76>6MN.i!g;A[`:!J(%.GK^nE1WOqMr&!?)\=#&#:6:&)[1<1K<h&:JV:.1$l(V8f7g!4K3YL"6c#uA7!t$M3l+K#PglS2062ec
%Pp]pEIkS-Im^<W^>5>-R5i2+!6(1c[YJP>AgG/iXYgg]\>]54WQ!N)kTc5YuHHDZZcS.)8[,u)W`ogRipO!qiC"RH\KZDjR_L@M^
%6u[tU9\Aj_4-oG<e+s0-99h>+(r@Ngiu/\mSE^R@,Fj,ljcDPOPIM/L%W["%AJ@N^OJ>uo!th[]/.*`LZY;rf+eVspb6gNZ/CM%7
%E-+CF?+[,b6Dn8+6u*nQ:'fH;'U2L#d7Jo33LL_Ye(4_B4'U<7)k8:YRnp.jE!ZB0d7!eV*G(5QVkT^RQ-^(W7lbi].\&R0&AP+C
%W&92H`9ucBcq=qe4Rp8_,Umo$TJTWRHj_FQ"Xn85#tf+T&=W-9IQi9[?Jlig)?lj6rj];`A6bODXsfrb.7sn-H9=2Z)X:s1el&;[
%6]m^6;;<fJPS1k7ip;\U6LY'HiS0#RMb^jD>IH)8l-\NN^/3n/7uf@!V:6U@_"AR3.As8AHqPDi;_H"G*jjk3gdm\;Lm(X:U6Lt\
%4WI&YdLF?3f(V%aU4FR7]:5HRShaMZeB`[jjY]\6mV%oAM?$Lo8:i7$3$<^jT^,3nb3);U-q-_2JW&Q$Pr9ppU'RU=,)T9a5+qG]
%?%N9#NbbZ_BG)G/-(Tj-&A?]b,^#sP-gkbMV0F&X58dTb+*eqF\ahG]Jf^/W$#%JAQak1a!S*kda1;?5OIILD8(k;#_?%^\OYj5^
%Z$^l)5u7gG<0j\X#te9;WGIP!3uqj5Np;<FHdDqe-t_^)$<@@@;<D0YV=B]T;"?a\)SGNM3Qi_qPHGAG;pmK7`0\&2aX[Y<,?4n%
%f,Sfr&,9k1)*LB$%aHN#-m+OG#Nqj,e2LE`U9&'jBZ`nh^;j?h/u!kM5G,H'&k-eR*\OO=p#%9@+JEdT[%(:O,_%dB1HeAt"RpXh
%TNIF(h/^C*<(ahp&G3:[[t.=ei_f"?d1;N`6KsN+U4H>-dBdKfN>OB>"(&=:E,OrKd$b)n"TuO`>&I^XB@!4'TEr9o+%*$AT_t\,
%?j#G@I9aH?A>2'4kU3W>S:2DLM"]&9MrUm'Ftaj"I>MRoZn,Q7l6BPgNfs9oJ7PM-mmZ$<4EN?,gQL3n'J\MpKt"fG>A0??/aE$+
%Y\5nM?_&#8=Amb',,n@CQZIXP;@WB0Vs>OM#*^O(2#D)$PZ-n/C"4?:K$Yke!j>lIcmnt3Fi13MYKuEEj/COOHtc\ZIR^.a$8!c/
%JSLDR-!-Yf4!hrU3aG$7agm+ISr5A!dj_BS4l>oGPV;cS,q3M.V9?Fa[HZiAd's8JGbo.SZYY5J)HJHHp-Y>qT/?Om<(0f&b3C+J
%C+3FXW;7Cu@T,,6.Bc?0HLABcL(u72ceEEDToRYu+4!:1`h`JHJ*)d^Q'/k5Q@;i0YHsH3;O:\sb!.U":<CS82b1<-qWsq/o\)m7
%q*3@W:m<o#h0Nb]\/`LH"t5?qJ2)'oF%X(mG)OuY\1f0T)f2$B'WiO%HRO,-3S!7GS,c!(AZ_G'JAdUDHoV._lc,0@g2'8UMJ'Ep
%a;bqZPPL@nBNhEZMV=$A/lsnTkm85Z`+BYr<4I#CY9\<6KqN7oag+X<8\FnX'eH<HM,j>J/g2[$rCj0u#SM4X#[S@khiW*FRC>%'
%d?SA;o@1LskuTrk3_"CE:jRGo^5Ehih*"K2o:uOO3C"n0LVX`dCF-PJ)@/#Cr?MnqL%%os7/NG7]dUjE82>9jOWi\r6B9qe1uk':
%+b#lo776+ok>B?m`C)ue^j)_2\NYNf#q0"597k5X7Oif>Bm7D1]uO'B10k/)Rf/m-!_^(W?(V-qZtU&P4Gr\T5gdC'QC60_PXmt2
%.@'"SJ>[,X+al$7*'[4t2$\#sl3X'486UsV`Ic8)7p23*7S+_6D\S0Rg'"C(Z`_&<Sn$clG-Yg"=t8PmPG;n7d:aC*RTR.4\i0kP
%A*?G4`r"FYO(Q$4Q^,%YgmlG>H(MBa`gV;k77EF#`a`A,]#mNGCeW*jJ4+f.C/tm2orP_3aD-@_YJgZNds,<DR6IBRZ@jD"Bf%=d
%YBB?GiVN:N&5a=eEQl9k\T2fndPN&+1<e=FMn(C[\KH`5<E'b&>kgXrTX)]bR;7t<@U]_<\ebmO(_&n'e9,-bM_*NlSgR_F*]hnI
%*\gl<DmlZ@lLk\8$c`K^"!JnWg-B*u;(gK6eDQIBA\%ATid!;rO?E;70&9pQ7G_.YYpYiCY,od)r<FaVm4!3&O<R;6R$>.ep\&kf
%5N-E>`FCSq<A^]?_V8p2:d@hqQL@\O>W7Zj/IL<%"p@rt1muf%m:ci\km`pD#09.Z%RU99Qj:ctXIK-<o#]02fc(JJ*gG+O6/^18
%m*OUe:ols2-*#Fj^0n7#l&=oTV,EdM:=55!]:X3>FI'ImfP$,=Y%Ad32e>$hJp&M$%r`Q#8O!;o"hP%?oq(emU]%X._lQHBZU3&<
%M3?'gRb:Q5ZA#tD?^:$\8=O"*"SG@\b:4A$P.BqG,n6K;!438$Z^E@J<q7p.XJ0RF*to0Ss/lO:R5Grf1mQTS'TaG&VnH/5;Wn5'
%)FB@:lE)BNh@.gkJHHtQp/&^RNY?Dp=G!eR]fc*bf^Y]9;2_#C'enn!iPs!&b/a:(80d<c0iG=Zb.E"n30sVZq9W"/373U[]"^d@
%;gmntWq-9J4C,N2M6BU4/LW7)]2ULVVZdRU2TMh`QU1l/^HtTUaaQ;$J@_ln+.k1$_HZ[G;Y?pT$PhPB/aT<\0#c/87Y%.P6Ddrp
%_en(DMW*Glj$S3YjF7n3-$2?12^P4gp/o5Q$3R7(8&Z4tmA/^F-"AD1`1C8B]#6P/'B#\`Yg;3/LU"8K\o/Hu?Z<n7S^_1\qf$e[
%@7A$O1G3N"2a^L"ijqXr,Bo%).OQILN$bfK5fX=mSaYAe*\R;J<&*C,=5>H/[Q<Kg)PYFc8l13[7elJcLE>NL,?<'2j)lS#`@Q8G
%E"-<iR)%_5#WCdVI%HZaaZtIq2t`DJKh2O-4YIKD;+Q_YnLI/-TU5BT"uue=%9#cZBGqY]+U<dW&!j=?0<D4NH!5%VU!pSrp3(C1
%96/!o>SIYF'.jj`%`bm[PSS*SQ_$AMVO*=8PgcPE#;lV._]gKl-q#!lV3X6Y4u3^Baa3QS2m4#;S`nS+]m\:YVKkH*9>Y\(]Q#GN
%7_C(K<>;EDC3QKEUWp8EXJ7P)@FWC3)#-*EfSJB3c/)*jE9c2\P;4ArYUShT#k>Qa=0qMJ4X@S@9+Nj&,u6/[ekL_e!t4b<S`-JM
%7R>Zu@YhHe%>Pl,jOm.R@67%Xa#5(E^"HbR(KaEsZ,L]W\Hi?0\V`$aB-_#CKq?fs;Ok'aAjL_T6U$E\k`"RYb!!LZjMZLZeB.a0
%Die'8cc_qPNE#_B2c-1j2W`%mfSI<</scEa-Wu+=\Y=q9.lp^o]n)=UlB6c):*m\(6+4[))VM&g4m/Kb$d4XC<dV[A:2dQD\mcg"
%$?DNNTP^qu4VnOnl7JNlPnNa^A?cU!3Bh`Xl@O&=8"bb8I;gIR6Cq88(H.-cQ(/n-oO%dj)Le)q0AC\5DZ0LrYID`_&&OCnI"uQ[
%Ef"kq.p2=DB\WLkb">/f'?W)Y/4%RrSdk8-3INku@n0=2'G*1i`!2quWMY9Or*nV!,>8J?`H*`o^EQrXDj?RNm8b.WmX:pA%"V=R
%_NLA-c%'n:Rh2e(&u&0R+JC-0)DRAZL1Ya6@g%+<WW7/56tnYi+@cXp7tF5;0XJrT5S'+\%o5OGP_LFh-'4@E0-)D@&gA^o":KOh
%%,dO`B-AkFHV6@LLaE\QdC)=)m>r0N*areQ+<_4U%t;-J-Sl[X)7@W'pZnE\,%W8%NguBIn">h_P[mB\.4t([N"TMS&j)Jk>\dQ-
%6i<Jrr5FsS(BV+EfF$1S.aNaQlXDs>#H<7:S%bZ8@6Q)ai"@f\FE4IX=k0%lOg\Bn9Jf0UN.t#UcWIP0T"&sl:HWG^0+U=C+%[o$
%7UU%E9(&>sY9<O*7hM=0<dM=[]0R@[6cT:X-DWQn88*0eR<V]ilWF)eoYG1:eeD3HB+Q8*!V'=p**V7IVSt'M9Al]ag4#jEP7K)b
%:F^*#2%ftW07\\9,Z$?LEo1:O:Rj9ei,*]E;F].tH,\K\.T&LPL,cDVi6A818M><jV/RCd<@dK'!.d!<+QH5]'A$`>bFV_W1FiXS
%X412:[OF`S*[*>Q_t,%-[aUA'6$Qe^7<Aq])5s'a\=Y!rSciG1R:Q\#KAj<J^b\CC=-PP])*[BM']_*7*#f.jHEN8=*$roe-/erH
%d$P&%aTSDaFs$ddA-?<U$LD%/8;0XmM]R@h?:"Bt\0R4u.$B?E8)(*M6JEPJ0Y0LZr]69WR+\nY(%HESaJ;aj_1@i=m:_DfD[aG@
%3HtW[iNXB&%Y4itZu1or\ReQ,M!(E9JS6%Sk-c$=0t[u#_\6E^RS*l7SS`t"X?$NkPEIZYq&6nP7]E26S7i2"0?*@D&0G$k>Hk6f
%_P0UD-$?p*;KW&IB[=L@o6[U:-!AYmBnN%fiec;'Yt-(J8(.]']4DQ3ic/Og(4hTT[N'pGi&uZJahZq`+-GA`rVJ]s`Sa[_^Z<en
%Sm6qPb"b6p6g2B1fKl]]G7ck];DZ8XTX53lON&ZnR`DBdXkXthZa`aCIX(Qjp:6hB&$0#aarI"^k$qR8:3+\/m.3>b%jqa`SYnFe
%9/9*q\os/:&:Nt^8_3.#+V#J.J^:AIOTYP/%4\sOM<c20Pt<LB_E$O#A,XBeB)m6Yl([FLUhDtjLWE\$l)Uf+UeGt$CoCfkiadq2
%[+-R4,YFi\.AWq!T@KV$Bs_EV7MgkT#Z^b,o?:]Y!"sDPE5aP-XFNa*Mo]K<'!I-i`eCaoK=$o=`QOfY6+X_cf/OmIC@YI3M&LcF
%]Nk"7J&5hjR;?SGAK(t!^HkUfE"*/oZad8B$V8SsbCY2kmEb(;Oq5L;Tn0\:3GroT9:W[0Mu$^f`K?+qfZ6@p<%pV[/-uDhMj98<
%!7Ed1Dh,oZ^j0"eZK9SgA1hS/:JN!,G#e6B3RIRi[_VG6SWkBe%<X3$^$R$Os4u=S:J@@cjg/5@Dh^03+5A1N;?uu]Y,\V'+>"i!
%1dOH3+?8XOAo#?^A7,EmLN/e]BBr*8!'G=#@e9^@)pG.2dQj2NkJ3*?$uePS&l^*(6H4JmJ/NRa-W4ejjG/S#>F'YTY;WN6UOO3H
%"=<R*A&l9"R%0s+A!.DoiV(F(-,bgSgj"&W!kNfIj?k2G$/@9[Kse7;r+U.0F*t78`D02llN0t/Besd/i&U4R'o>;"7U?>fZJ"r^
%7kT3^YS7lnTG[9RKq2PoTnJ\Zk=N-ec\F5l&6JI9<Uo5Y#%'\[W`%lV=Qqu)XoN^pda\=4>+OCrR7[=!p1(]UC"oX[U;@pM<Q-r9
%&:j$92"V7^qio]J]8"1lKh`\ZmtqN8iK>H.-&i6919bA#PmI,W'8<HtP<M8aWh!;9;YV\_/PbRJ,B7t'mS=&AWlSqF'g&uoq41O_
%dqrJVfKPT-8t2P99\'laqin!nqmo.W-_5Fl4JD;t%eLKp;fHau:L<52kEAVF.ReCe!N5/X6Hj3m>-8gm^<4<:>^]tMGqm<0*8%1^
%oc!chRarM&3`5KsH"I//!_+.0+/T+2N0JHo(_m;bS[hrLCjSulW2>>YT4#b0OSUY@kQ+</QBK(J\6.K-82&IL66&C:C>FW]aC[;6
%eC:L`4TrYBU[V(%&&W(Uk9)bp3m>2C"&qtjD@",LdbCKC,6ApjWWZkU'%J/rA:84KR,Au_)\kV<'3D;=>VE'6Wklo&03gt!\YLXC
%a9^TI2%S6#Y4RNiGo5*jOQ-'n68lu;kjBN8on%G<P')[J&"OBfp)g9/AH+.\!I=,fpf,oLNj`=7En&KIfhKtTTpg:_X\DLK:89As
%MUF+Ja%X;BS^0$r[%BC2)1:.]a]R"NHEnJHq_`(<=1s!*h50G/:F/Co(ro"(B_U_COYpr1aZlUGq4ucm_A0[/9cM]3c;KZSmWjiW
%+Br>:$92W,2Ts`QpPD=CC6Ek1Int7Z%:XaXSQ&4ffbn9eO$L5#IK=##WKQJJ!E(0h57A'SlC00eCRD%8?(>GN(/WO'.6GB@'d2%`
%_\#3r5LkPJ/g9W)-3j?IMWeKpQ303d%bBXeG]Ur)"3mEt?BC][WrGdn=X1Lf86:s%lTq6ka/S+ad+(S:-?;^U9NMua_:Wm!.il04
%e\.f[iUDH`UA8?uAQW8e.I*[<cPeCRZ"R@_"Xa\d5SSS1bBeBnl,l6GI;0leWFN/g,r(pklp2nd6W?VN28VC7I0\FMWCDjC/BQ+E
%Sidj)%#Kb&?!_&"L$j+!=6VECN)R-C/aVu?MT'3*ZNWogfGbdZniK3_`eoNi-K<EYcf,a93<.M,^#D=Q\9umu73'Q]SJl-_@dgJi
%=f6.EOEVXV%1(2;fmk1"iD:->cJi<;*qQ7%h#PF!:<*(iHmaRFlD+Bj+aQ]K))&6."Y4afBNS2.c6#0nl(s%Sa\^oL/HLoSkoGH5
%a,c--V1D;Z'a8TW#]>Mc$Jkgm=D+SJ$gUK(<\N!mhC2`VGUk=@$A4omZ")1t$7CgG^LlS=4lR#H0Ol8VN!6u[V')kep/1a\1luE&
%'Z@V1c0g&uU_)b/VI5@:!&(WC;6tSJhXjS-d_i7-M'ishXZg!jF7c]&!TR9@RaG&VGW+L4Lm,XiQm/8%7o5Zr03F@)gA4HNN%-H4
%(UafbUYAIanIUg+k[YdtI<&lX26l,OjA!S>MX1^;@uH"/7lA7n_2rMiY]#6V%0S>jApN4DK*d0\<V_`L$QZOO_/Ls8)\T^W&Ioc:
%JGZ5,W0a=P$Z8V7BE0;_b5E1g%e1\,9I?jR+:Zp4qDj:tr'mTs*7@,X%Lh/sUp%5GUp:h]#Q*Lg8AMb,l9*6LkJ_V2UXtms?t5J;
%B.J/RF1"!8H?MrDpJ13(M*4JkTJ-2(kX-1K+rtVmLpi\^P2UDT0PX,!?R1UJTZ=a98eM_MUP8m3/9+Zh&Is]q<;VH1RAVYt6dSDN
%_@<-"N&lU,Sp1*h3_2b\aTg;c_VkSZ9QZgp+-3Q(pj4l)hlFT"AfPY;Hq9]H7:^BE./;!m,U,=h#=rJbWMruK6g!ElO\LnF(c=\[
%hrGmnD_qOQ:N*j9OV)h)@&4@)MEphp7jf-CWFhWko]B;S6nb%KgA/GOHbo@FV)IVmbCA/-e[lb.4IWl"%=Vd`1*/uQngPf8Ed*NM
%g3M;KnB8Wi+.)6NeT=3KX)<4LBN1=(abL%AjP"ZWIjDn#Yp2E&k>Sl2_,nOT./]sUJ3P_9;+.NJ`a.h5KUVEdM/1ROOgi0(D-Ki:
%s7!IrmC'pB^n3EEONl$H147\]:=;<qDJJ2@GRWhLjM0G4IUm+aj$,(('6p(=T@[CBj>56CBg5rh)kP)-K;2>!pJ9+EokE+K7%DOO
%Mq-UjO&5V9oPCcM,6"[KSFjQj'!%O`>am=l2OsSF1SDHj0"`8HlS$I:b]>W9f,a2B4kt61qmM-US$<IU0=K\m9DIC?2:`l8aitO;
%2h/)k[:k2,X@36hV'Tc$mBOBn[JA;"3Hnd*mpW;7,.sa^YE0$.Ri_@Cr\3qPX_'Bo2UJ^GcXhW;TEdZebDV`U,MR[%?AY/eQ/j_c
%g'G<R&#pII(+er0;!m9;J-Ue-JT/h!OV_nFefu8A%/VCBaECGs+c]Gt5TFAb%u(_Q:3W"t+>;.nDHALR`lT0oFQjt;UWh*<61.*Q
%#.Y88*TR,V/@^k-5sFe\F']((Jhf*[IUkNdToDBE`]0!bJl4(Uf6^=La;EqIl54_;3d@3f)<0&D?E1J>$*F/QdB2!rT(D%I9\m#R
%k)4U^b8qtH,"Eb.n.-@R]MM=o?j3/Mn:\\R%[H\O>B!QnI!dQR;Io*ki_N\V`>>>rU`L7?,2J!mStU9PE@9L1O.+t-*_d)Q>E"qq
%N_>9lBH&nqn'S,ZkBZ8;FN^e,?B:LY#;+b/Iuc5;:-"e[\Xf=q%o:sb377-dpZTIGnR]S*)j5<SKpcB`eR!T`0"brrRP?J.MB$l3
%R!!ABg["=UR9T.nNj.:?K(p%F2;ACLl&PUeFQ%u;!Qm0QJjqUFDB582pA0,XiJ("LLL7P+6u3YW);molfAE>:[ib.3I=VaB]CL!C
%q$`<s/MaG[h@WZXGt))cmq!s7d6Z_AWh..egY?P6DkQF(;l^.<g,B:R_5Y[U.$_!n9^Jd(en9..[?LoM4ZYA]e\O-u4E8E.DYmUl
%"uW1cKg!"$9_uEN`"7.>cF>VLW$OSTm*UMq1S)g;Xpb]tafF27e<1jep?9`)WJm_@h86BFSTq#3A.33AH;N7h$cC&p_&%jbnbNOs
%BF0arHZW[toVL],>o"Alju6+0H;N7h'>mo"7hIPLNXC'--[&M7+SLq?oQ`p\W)UJtBdrDr6/el56EF[o<qgtM;l^.<g,B:R_5Y[5
%>'U'$Z"rQ#kb>1jB2CtK:tVNN6epHC+da+<Ef=jI3)E7o:tVNN_u+aUW+fk"du6/e$jUN=%gmZ*B%Y[<(J2Y@%'*^TSJVjdO>[gH
%keci=>UYnHn=9GtAnY"6H;N7h$cCI.eKc2F*5um"6=WhbH;N7h$U^`f.BCfPI3Rol-ADW1U^)T:3\c"6NT;q"N]'5d2Fj\.#s1tE
%J1I[)6Xc#c$=?XT'fhsD2nP^#S=2T;dm-9/O&!q`:T"M5/AorYEVt)#%b-Ru'_^b-0^spMR3-=i`-"rpe5G];[c#"s;@+rAE#S8H
%>mG*n%gmZ*Af,L[_ki&1p&l[IVSk_/BgZ<i/du`!H'4-tXA:)`bG&P^[A4%]4h<>k](_d5[Q0S5M]Nn;,s<[Cd@"E*1lp8,&:).J
%7?7r.:>/!BO%p+5>U*g8Z^suOjWrY]%YnPjUlq098soXX,]%RBnu\3&aJQ)\+l'eOUq)J[.W0BJ(t;`>K>JZM'Y^;6MO[CSBm/F4
%B9m-?e8DDnKfqIS)nJYI(/53WIr+d6%+#V.p%R[oY%aoW3V+f6o?al%Mr.*']@.W3p?9@)f6)IG)>;Q<MsEr396sFeUC4u@3RB..
%8^<$lr[1,dks8a=c4$1OUXpS'L6>m:idt(Xb4M@27i-nsR.<;E)TXGUjJV78V;&%h_1bt=-\a!\D9L/V>paFk[?LoM4ZY<F/Thc@
%gjSK-a*IEc\6(Y9U-W4K)@BhK*T:tm=k@8Hfkm57d:k,_.I>Hmg$mKf*ql"qRGHGTdEu[kd4+G0Q!r_VNsii[].Lp\:8Bt*4h<Cb
%L%qpGM;aiXQ=392d[e5r>o3c,8a@.HAp.BS7RsAI8#NR]=,-[!cA>u%iKg*f'B*8IO07iT^.pDf)\_#tlf^aJ;qRiQ_r2uJ%-+Va
%-4Y-d[6%1-L@4AFg<*n8C\S)eRJA-IB##j5f'DePf*J8h:#@\5g$=[H[^h%!FeepWSV%_<cciq7%6*@=jk!WD[fK[DU])<?\A^s!
%%QH19HsLpTV:\18.rW7XOlou^1T.Pc`u:-Zi'b$*hkMtdb1UbcnKpYocSaQ95YH=NhkLQ<>YV23k*@cZhTThe'AZuEO"T3_I1",;
%l]2'MDB582pA0,XiJ-ZdMsTIePiV,HXFh0hXhFtr,*3RuhIa1pGFZ;.h7Y\m$u4>WTWgpn,ERW_rKfbfV8U,*\q?l&U\Yar6PR&^
%<4lS*+l>-48tNO1e5/%;p?9@)#m8u:]8W9+ESZ3`e<1jep?9@)=##^mDMRj;r8,</E1iNhTWgq!L.Gm$PVk4Qr'JH7DBfU*8/hn_
%FCC!tq%nM$aQ;$%Z9^)(:1+G^gcVKl>hGVF8CPFnTU,/AYX`>\Z"b3@M;c;8fGB8E[I\N;fV<?t7Dj1*g"P"!`"WJk2$FG(j(3k[
%*ds"r>4*i>Ve/TMc_]:s2%;AVp?3Kj5b<)?1,:T&KsT71>69F\dY#CX>o;Q>IpU#d8C\E7F_>/[96sFeUC4tlhZ[."3e!B<@5q(V
%H;N7h1W*gNG^_E`1/+O4#\DgA(t=X*'_^b-&BQd,.PrU@2F@\VU^)T:\hJ6cpmLofc":mEQ>Wn?"_V-rX&$noMe0A]25m(OK>J[X
%P8G4@cc7oMJ7k\Rba<796*6&n:tVPH&OXGd5].&,i,U."WLR0U:t*-E?jk9-M;6u(Yj=o)?.I4c%:qn8O"Lj9jSYPd;MpEkJf1L5
%4Xf[EKcqKs#cee-GFb'+P<geb6",i"$n9$QUe50MG$\64K,W0m_B)u"-D!pf6g-.O`+%81Jm-TT_B)u"Ssj\I@Yj1Mee&pq,s:J]
%d=pC"-f/KZ:=:1hFIJkgoUrEY59kdR'fKhu85j8+2J\2qRl+a3n_PkPZ5`##n-YYmWR\R5Ri:*Ke%/D)$Vi93RjuTtCs+@gK,Vme
%_B)u"p.a)UY]%]3L'+iZ#DG=P0^P:/M.,;-9ah8A8Il/TFCmKj<L2UrQ<AqH25C\84h<>sD:QS.Dp'JV"1=@TJM"BNl^Oo2?/LrB
%liq2R%gmZ*AiM\K'>qO9RhuXbcIY?jO%p*j/UganKgm!d6qWI1imTZ]fnp[THh924q09R!Pr6.5(Bc&\AXbj0fqkJYp?3JL`KP,i
%o)n+40=NVTkj2;!fCK)G\mp*.RC";qGf#A5Tuf_c:eQ+2fV8gAb!W]Do^Q5q^OS9u*2k/H..#?8+l41Jl]D?C_gI:o(t=]i'_^b7
%&9$^.Ett-C1a1c;^E'7q]*o$nFC?"-YFcA%)5iB;]RuMfYJ(/V?;@ViM4&;)iGu`QTU,/AYXdRtT\oHrEK+sI$D2)BetC2ePR20B
%=,H&u4,,O!cAfiu]GDs]5SlqX:tVO9Um*W5Pr1CVK[B_2phr5Tq-2#(+R=dM0TbL@UP5CRqOAFHF<]Nim*V)lQNW.$_c%TWSbOWn
%&ao>dke`A:'UZ%KLj;C,`F&PlJkl<2\iFT?TfY/J7gc<<Unl?/:(03FOmWqWkfV7f2U[F*T'Wrif*=@!mM,BY)U31N)o%:j0uV85
%Qcho%SL/3OYX^o*RX`(=9)ZjY8"!;>>"FKGZ7>]5UU0os'_^a`n.g)oWJf3Sm%>NKWS%BE2kN]NO&!rSe\_dD`6V!lFCNif9=J![
%Jho(@9TtI+@>5S"H!.K/$u._$H*\7@crGfdT*q,*#(A[W@5q(VH;N7h$UZ9JZ=\h^C3m$\B2D6I:tVO!6hnQ[8M\4Dir$Y,6\AQn
%*Ye>3_D#r#fpQ2`[e`j&IKR!B4+SunE-')c\4R1C9?CC(bKb%8NJ#(hSJ])0H'Hk&UFrWs;Wi)5J"Y:LGs>_6fV=2<=4B]#Of)6\
%*`tPS7Uo!TAj*AMF,S9g[`jIE=T$WKAI.Bd%:%8F@@tIO_la1jL9o%DBr;.fkfU,*ie_)F!u&RTA`U3s!uH&f3$tnA37Pb):7YBS
%:-1=P6!&e%N@00\%8?\3Q(aEi4g9Mg[m#WrG$PPNlt2NVP\2jm5o57]Q^s=VHsk,er'XJRWM@pim1f9Xbja.MC[U*`d;rtqdH:g)
%.f[?r%N5\$e51CDd+["7*^lK$h,2q@:1+ITD)NOkbAII1/A$I:b(IPP>oE>IfYk!!d3aSgSOdr3HZWiO6XUSF*^lJ7G'"qa.I>H9
%i<Y!/%!rP&@b=ONH;N7h/&ND0ZOB>8bq^:&7(Q=LUFX5'"Ig6C'Q)j-i'b*,hkM^6*Whh`ocVu,YG2cq:194/$su0)LA+p3&m/Z1
%fj]3AVYGVURO`<m;>V(pC8SBW4#;j2a>Q\,m]`[e-KI%ON0)`NdP4D#=5JN:UE8\UN-_GH0N)_]WKjsN_Pi7"%&4jf1Q3$;BPQW\
%3&;JHXhe\(`Wi2u=dm%p(0h\j:s8@m+Ygl)Z&,:+h-g\X*m-6SH77"A;/@GUQ+,\qBS<SuUE0ImN"ha.S6"Ku';O0'p`R*dEg=iY
%+%;f7eFlQ$n$#[d24Qg.PIk%3C@XWl6IbinChiOnG>5_lgGZ>%i1SdSDkNNEfPan^A&i1A)0@9WHr3i^R[61m`2rFY->!?#KLbt]
%[P7%EXGL*;WD1S@3XCfC4)ALep/mX6fVM__"s'F"lL1s2RI7:+?@@SenJ^VagT,7cKi?l59s"3ZCguKbC2VPY@2$!!GNPjO1cocU
%mDV=bcO>Lj3[hXm1M:HFTBl*?BVQ;#oDM;QWWW_d1Yq47d7uRcVYl2:<=r>fA'/#1\(&<<g2H1]Q%<L+VS-Pc91<*`reBi@+W,rG
%l<=AiQC><YrsdeB;R$)=oXFblWa__*Y#MT^_6P"0^p;^qMk(d=crGFj4'aDTiO5.:)[!M>F\p_c'>mo#7]B*_DbiX?]]R97ertH<
%R]W9WYX\qPYBk3+qiKB@\,%_\a5[RhHX2lQ*hAbEnSMVKL(36W0^&%P".d+X8n!c5$k_Fk/&1\\S8g\KB@,>r+p>@4b`0Kom_\D=
%lc0[NJQ`T#TWgp&L-<1d)5\r\cHYPB#&6^?$@?l'fYcGW_gk68f41*N[A4%]4h<=8GWW#?dhE/(!'E%WW$OSTm*V501B:mPKL;n[
%n,kY:F2NU`8NS?ed>?g4q/\[h+9`^UUM^3[ghI2M):X?&%#$k@)PQn]%)HY;h8WA(o1[CMW+houYXdm7-LsTF#.o^8DQ2/Dphinq
%g/-Fs$cAc#qCG"p^>d$mQD$Srks8a=/e!lTqHP<IftBB&i5BT-QLpiS7i-o84<cU<FF'Hi@Q71WH;N7h1IL5?bEI1$+YpFpE?<<M
%TSBhIYX]La\78Rk!;m`,37#N^TU,5CYX]La\7\iCTkUIdrL=]7e<1jep?8!!i/pJWeMT=CKL+5NC^Sn1NV\"o<<D[2QZ>h;@RNY$
%/o;&>;&ho2O"MSNA:t8,%<3TdbOs<75c8>H.I>HI@5E<kQc-frln3,aF<]Nim*V),>I@pCKAsu/_[.cX`.rq>UcX8n\hHP'U,;!&
%'G[m`Zo-3E>'11!FCj*`T:ArU5mF4P[B5!4MF/fYd?S,rIS*k!#$JsLf<tmp-k;rT7i-n$=U->EpqZTS/!p-_".eRkVm&\K+qX55
%NqSU$*&k%AqogsPaT0S*DGu%G^.-6gLY1dYiruWdV_uN<!::s';1FYP3F;2'?s[ld336(pNgBcAA@;7L>Z`05R?mbHGbMOTj[G.0
%:1S_M4Z[YZf.Z1Tl1$NGWUlH4TVXa8n'QhnO;DCSDW.kMoc]P#:3:j]4h>UMZaOcIC'TnoV'YBQ!%5@krZ7W?iN5ti!]P,j#Xc-^
%bEDt)l-endd=kdD+3r\\\KS4W=I:Nq;=1dckZ_R<.]m@UY`=J'eB_0R^B=lIN;T:Eo2L,GNp9tIjcIY>/IcU'8!gW\#'\G$Xk2E<
%;fgV,C4l5+>iZg<m@^<0X)GhB=82;i?9%UuKI%s.5XT]ohgu4hF^e.Zn;qm""77,9A:*u$\F>**hOP%XVV]K7*Zgt#gT,8/R28:6
%X:WH-M0M/rd6T:j^%rLLGTj5)`B[lrCk>A/3]^rrp?Gk$iK`Ihe&2X_37[[i8I$j#?@<2V]O#HaL#dB?rqjL"Y4B;Td=7#XIbapJ
%VQ`QtiIWQ/^.W8<B0:3_Y1\%/31=LGn'Ut)hgq-VNkDZu)\^>fAipKU4h<=`o/g:,J01@Wi+9_FW$OSTm*UMqS)iqnRi&TQ0jN-k
%)q:#l'_^b-YcbOQM':;d?ID%We<6t5*q:aA1N\)f%5)g63ELA+1iu7\/\(;-CLV6;Lb%YrR^`gV;B?PGkeaR*M8<b]de(>oXraMf
%?)An,=7h]ZV]PCqqtbCmQIeeHIS6?Ci8rIOVi7?EkE-GFRDG&jH#9ts8Ij"Ej"XNIDOC4D,!oR2&QC`2Uf^!Ugpj2$1fqJUi?`>`
%RN^FHdSF_kG)[Srr7.G0%dL5:a0l]Qi>shYD0nh`+L"8eNYOt:E2/jC.Ter3&#EKl%]Sk]fS_PAbf,#5*d+G'dpmDKpC:6M8bF_Z
%ConT!\D4Z]`%%CFP-/MmB(b<r>#qX/\/mZm\c!=$qb('4Pma&'8th==MTYf.'<5DY7J.pm6#l$2?<Ur;e)M=rdHRSMa9g?>+/&Eh
%'<%P.K9NgId`MW?YUE]V`SA%\1;IUG/AkeB$_$A<:DBUG+!q>l`tMVCn^N(>33%HmInL[N&+b!(?Xdc%IYipN"gms;[t:WV5?KqR
%,`M5]-5]&+Tn^A,9h&USAqjr5JmT86*ZW_F[hHi3Zp*(g$6?M2VcVc-o1,:kl6oD]qhH$;g5ac]!BYBD7B:F?kZclu7Gi8TV0qRr
%"^FHFdb2cYddG7nqM^uHrAYU4i<9BXTqR=0>ou*\"kTT$Wc,^X]I$4WA@j+1E*5lEqA,SIE@Tc,QmLMMfN:h5jbQ99>BD[A`e*7Q
%g\QYZTNB9ImI;cM;#($Z?S&7H17VE2AN6`KZ;1*tkfe!P)EYiN)=7j1R8qg`Hja3s:@"r9SC_4]3,@fbCAV6!bcnnSHhiEfK&.@T
%FC)PD_B-D4d&oDCl+ZF2\ubp*?jj-<c;`L.4*8jBWsu;#&5moa?5D$V!GZ'&A[P..YQZCA@AV)YIe?ogRDK2$?I;=CMAhAuSt#o'
%=Yh3XQ#Q$gCn%=-A:m*e@@r9-k@<Tm@c]>A7#=pkNkfpBO5(6H>-pCQ*6+Xc9lD<6!"5O#:8&Tt$Fp7c@q>0\:=M[FgO-IECjV24
%DdYB]J_%6V=5YgC+<P\G"u6.lK);AangmksA#7>'_ZAco%++/ekLW>&V@9+AgsS[Q"i=Z_p8,<%+YQ:'iMb>L6+\=eS'Hd:QD,;]
%H1p:6gRfs!26]gUki2b2r*VCTf\0&]k:m_8L$QnO5$K^VbpHfmHfFg#6cb*Y/^]p;._Xph/NGiU<5Z62q</@_p=437#q5U?gk:6t
%OAO-0ra^2Z;M5A_*H=r,Wo9MAUWfRgJ@V(G7g?^<ico!L3=t&4_f6IG]E?$KGT%2+CjG#tP-k$MT1)e%qh4n4l[c+M&n=5M0L"+>
%cu`)on7>a55s6lW03-^b:ko2"-P\aZd^pWHq[q2;K/XA,d`o%]CdD;l'oe(q0I\g=puJqTAgNbFPgr@"W2t_'>ePFs&7;<cd$iXk
%?M)eo:%("Ji^6,g[t0o$YTTeo(TZVA_W]sSYbt]><Q:E5,B]d'i2Hsq;a'q,2,m>9!;0uo,KM[ZO&$iW4`G"bZC[m>K\GFt1,@s[
%/sfMn#n\aS*&8WBO.0!Vn<K/aiQ.aELHN/K+J]Z6C!^!nkiqHp%#o6EW/_t*(Zf@iE?q('e_,uqnWrr)IC0>&P275oC'-5--^4kN
%OZQ;c]kE%\#]_s<&p3CPgP^*`k.h>fU0<]U2&hF;CBOfe'+U+BlNeV^[RuYuXr9:c\Lf0>U;HY.>ZdXW-$iicF),Qj&!gI4bJ:=s
%KW=26eU"e"6]MhbN``._9^l-q_AV)<q"CAm,,087X5Fol-iR`:35c"P5u$j'o!rD+aGEK\>lL<6@4MB\M$QXR9t?db<]rU(;pt-'
%F(!N'%qF$,..sNJ.=6II#Uk_N&B'bc[\]pZb_3K.qOHhYqd>]P:StWeK4o6]ZVcf#RGKRnW>nZ-PaRto#$6`23=1;Up5ZY!E\_`O
%Vi[,58Q;+EEQV-k1'I*n;8uTG5b_k4LlH.+T7V/u8kVJ#["rU`L9i?i@,ZTE,sTm<U!J>5-/DmUX9Qhc//tHDfrCiSYUt\]H4_V5
%:cXeG<("Iq2R^=YlUpn.<?rAZ&qYY77Zqkf9a$u-R@ufQ%&ssK9_pApB-3FQGPGa<2KW2Dklp127S?K"bL`IBI"<!X3=$6m.PN__
%S>"5s+NPDh1a6uaaq/e(,QMp@1-&6P5Rn\4ccR2]8!QZ,i%q8t4cjC;kXOFN8a6dGDbZ=,9Y1"((+=mC)gMO^-R6^24&/of4G'B[
%5ST%>,5K/V/2ufTo0gehK<%Fdd:eW3s$@PVP=;GBZ(WVJD+[#nJB3P1I7jZV$5*V%8gZR4%O&&M\rj/:$Wh-[FdS(ekIF^$c"<Uf
%koE`%^(]e_raf$tZ3qBj0(cc*qW8ScZ![M0chPhike@gDq;q(+LYqSCCE2T*^Yd%=(qrCH!,pjN$st25%Go'5"C@iXJ2d!8J_,]O
%K6K$f$_+9f$Hj35K#]3dKuJCH@I$.fi8mSe`\qXo2Y\RjA&iA;?QqB$CL$CF[)RR\.t3K11jg7KRIOu2[W*7EcbmDRh+[>1$$YnY
%$SR+CM;eC'pYYT/q"7Y*`U194#k>o:G\4^KkNljmp=lOk6tmR!?"@Sbc479N^0eYSn?pNh14?Q9P\4R4JS-IicN8#Id8o+:;VR#R
%4Djfe6tYOCr9Y0\C%ul!T9[5&[R@j%Vrmo>GB'8^T"jD7(:9iRqn%[jX]<S8gI6g.KsSgD,JApDXXf-o:7DO:3Y36T1S&]OU35i@
%I!<u4oi#bd%GtI@BO/RchbE1Q'"J&C(uIcV2_h*7^+=YI*,.oibBKPqRs<AooNdd092'%iIJLaHaO3at6kq=:b&o7Qj-J!bZbS-9
%[rJ:'Ot'P`EZ;bKhaX+g#(^3sM`P/+q%hjAhaO.if#;%2NBgcML+Rjc^5YNd9GPHm(QFmJgqnQ*q7KVni_gQ,fJf/Le<]rkojSnW
%@T4#RRS&o+eW0A$YqOM)eVkF#C_s?[q&3aV'=AIeLg2fqm#,@T@(qJ(ELX-$Wu3!6,:JUI%*QF2lGVTna("NNaT?jLAMLbcZRi[G
%@YndCh:P"VWjNcg@hO9:C^UY0d4L+AM/P\!mYl+ib["[_$JuZ]inAUq\PRD^kn<c4@pN@,NbB4YhAPeAWcpnE\EYs6"ah-Z@f4N]
%(K\=0nq@hNrn&$%n"O1%0&IWJinF,q^ejdn(`4akU0rr;)$`Ojq]fOJI>rq8H>bW6C>Tg<K20-F,)4fqa2HWU]gfsX^G@L^Q1']k
%EU>htA#OcnFH#PB)'@mWG`@dkISYo]X54X=iu)lsP6l\>UeL(1'e9qTE+cP:CYp!_'@jQ]bS\&MB#^,)NLKA=EK-FoIV7`#(Ti$o
%B<j@$U1_+`]/P2Y[I9*JELZBUTlKJsU1hDhNMA4U:F(qE^2#9ZnU%$F;Z"aa)J\.K;<,7^`RMiG?__?;h\0)OWqSp4\E5rZ2;.U!
%(716!rS'R7nIH.Id.J=.DnbH+3C7U'HMcOu_Vb>[qrrSem!h4/j5E3dr0RG04T*Yem?`=K\#A"CBT8i^q6fLqmh5-#TlZ?-*(Z:I
%VT#43cSj/ZJk]FG#rb,:&+)_.AS(MT/J>=BCi[Pa5scYC6M6H;3uX3`A(.>l8??[pE:'*Xc!^oOM6tRL@u`roI_=1I$#Hi1[uD;)
%U\lWZc&Z7cIRf0=#[7=9OXD1Y!V$Y.lArsT.hI%]Ff,Qm#H)t$i6q>-&'.h=4gs*i@duiZ3mrbB2LO$Q%\E#C"=`'dIb+enBH&oL
%[tBuk/4KlFD"PnJN][)SRnRoaSQ'r'g6Y>G_*0b=Y,EJ-1G\7S'DOm"f%H,o7n'AU[)*&PlkEN2((1r1p%VMn3;2i,a:mG>jOEnU
%&rK$X-,Y:-)EI;q%MIhcXNZE`B'_X=U!=L4_V]clV%l)gNBmJjHP"j9N^Z;(<bk6f[l31'i9$.r2NUo&Ic1ZAg_[&?G/tdSEHVg#
%9Vq8]B@MhZghg9]=Q-GCR^qN"r=GGDo7Vi+_ejk\$/O+@RF8T:b$VtNmR*3HUM[PNp"9I4e[E9t'FlnD0c-8n2aK-5)O2,AX!mCm
%[r!U+E8_1n%6?j4&TQP_nK(,m(N,4C$lfH@IE8@?[jVs[`>)?-"(F(;r(4M#>Z(/[lS_C40"GT(N!RE"`,0?6MM]Qo#5QaO#^kAf
%=;Z)*LJQ\D71V9`TD>)HiFsUKJI7*D*Xg(I$<B$7HW+s_F=/u/[0RbnChFXt[rco"=g8",#;hpf)mtoc"P1-01B'ijbMccEgQ9j6
%*@Fu3%Ec*&:a6s3e/d`ZZ]IYRn;G)L:H;3e'r%^F&'_)_7_qPS;G&U<m&\]<V_<[3cg;q&5mK3!2B<7/V97^V9uV`bU^8bK>buPj
%D3?_a9b1joYsMh`T;Kq#P=T_5NXpF<N<hJ5Mr;sW_3i86l?&+)[q<MH[ts(!^T\sj8hV[4_S[D9FN2pj,sH-WhMYu8i;_7D)"Imn
%(cYeg>F6k'6i2Z%H<\BbXP$><VLV\%'mPqeipClc,L$qc-,R8FaH$1,7b\!#r?WT>DAU?MDU'0SpVU_SLqJ9%-b94)/d8.a5e3a1
%:AWuB`%;,55a]ZkkGeVIq%70,Lm9O/I.6:*WH$%hd37!k7;SVo&8="(<'!#A)86=*#*u]Gi]NO\MoL:Kq73u2Wfs@l97t)QI^hRd
%#*Mi4@^_HYZNU7jEeuWbPF/]l!*Ka2q*<A6?oV6PDAsC`PA!7V^,5q41rUu8ZDS]l6"lA77!3K!eqU>hf'ThZKaT4Z9P]o?ntU=5
%ZB19FGMt#K:R@8O^\n%:n7MT>71Zfp(-Y^3?i4*p0+^Cu^0:_;q0jJtf(Y%FC>UOt)">.+&XDf#`aA`E%qAZT9@-tlYBRN+k04D1
%KKR$e:2DaN0^;#I#!H1O@\lL7K$b@7"en*m1oU\J<T'>H"XdX[hCHd8&ZY(ES75)J_jJZ#6)c)pUB.3&c!DtlT%\\Y-ndu%SA]l6
%,j5*0U(Qo^:cOPa;8tf#*1YPE00FR?^_m<<]Ch]9=buiF?PI@8Hc:`XO:2!CS`MA`nC7a:Jtj9Ugnhd;PH1ml1^>uW8aG>\Y_*%;
%#&J#Ud0q.KSp&?&.#0nf3/S3g`71F^gZ'+"b\GL$Y5;6G:u%=`LY*'pW<is'SB72a%^_3bRonUrXA-`);p<K#%gUNC-OWf%".h[Y
%Ssm6j'=5bfC/J[cjuh%qIDAsf?#?2q7Q6;ugB*`$VL]\J%.FpO9p%=oLs+d05qFMPA:T"!n:CY77j/.q+]PjVEqCihq)F3;n(,(/
%R;k"!LsK05qMq=Y7I]2=E_&U_o>2=-=X\Bh%E''HLCgj4=*`N%b?Ls8i6RWLe@f5[;#>.`6fiZk%h$Upncuo'9-A;i<sI?:\Q9.6
%6f0DLXnM^Vp]ZR2pP"skPI!;u@'o;\:P/ki=#a2^Z\ms4N#Bb]MSc]54PLYV<'un26?t<q?\MgRY=(HB60,H8:X[?fB^iF.2"5>D
%)1Rb)ND"bH8O=@(q5qKe,<YI(74EFD-lb)nFO3N<FZp0WI4:0ZB9YctfFfNG(*^3@Q]?eO68ut_G--TQ+i8CZ:Wh?c#dm<Dhe$Gs
%[rEjnC6sB@`L5Jf2:D[W0-*8se1D*9Sl<m<;Zq9U/!DE6K2m2c`hs`do;Y`P`c\n.^b^T_>O;b#3sJHICf`]NMGg2#KfEPAWXH?k
%4f@'m=q3WG1K*F>Pp*gsc)KO2au#2_gC5W9\A0]WMH/2:W/OVE_U65u(.LUV#(p&&/7Q+-<1B4!%cQ&(i2dT;Lo8NBF<m&R8#?0G
%.tn<,fGVa=E^g,@C,I+Z.%\(Od;O1CWiIs8mCniKi:fkdG&d9"+)9[dJ^"!t)+<lhV3#o)GKM(`r,,(ojh#(9Q1(&/AppjFI`^/$
%QYr/2MYCOJBk[]LF\/8!PJ2Rg_cUT'[KZq?YX!'GBW4^f0!mE,$SB'lc:8Ig<Af0K6;*B'eZ"r'K+PY:<jp="9PPTpdO+4=a')%_
%4YbjG8m:^r8/JoVV$2,k8'CVM=4_YhKj?%=+@a@4B?<kEk<#Bc5YFk`ETuplXVkU_J]q<IIT%q>U_&88a+#P\Jhre6[A8nc0BF``
%_(gj03<M"j(]?T]gDupM5%t([qZ$XrSE<&Xj`5)Y+F"CcQGCO<.:uE7aFH=R&k+5A8;-Kk</8@R5'U@,o1=tBPTOB\2<H!5035da
%"1'\N+**Z(9eDPFFYV5BNQm&2Gi;RU7-%4hjR<.bf]gKQIdj<u*04q,ci#8_$-q,PPIu[rPL<!Di1uHI`:I+bKM)j%qe,49`<#@=
%p<k3MD_<?.3QR<XW:ll$\jf]63$[d3TR-e"kN*u,]dMGUQ.'ocD1lFUU>mG8"f&I[JCqb2!a.V5'i0jO^U/J'Cs78`TC1U(@,SpQ
%r>WY6H0D34+>elVcW4GX0g#31-'^$nPnj,,:6-IeD&+])]WHD=h4kfHX8oP>.A\tP$%j#EY%,qH;XRT3BC74uVbXmUiPZW>_V,6[
%6X+mK&N`"GJ.jF3<18AKZfo";3<"f%*rtgO!HbR(&;Gu\#6c-nS9K:"-Fog!Oc-[dmu]FG,*\0dZpiiu;b.m\Z=+dX&RD:L%Ia5R
%:n*1"aNoct^DMt'nUqqa3Bgb7TfNZ.FM;knK$T*IS(Vp*o4,V1&FtTt>_*BDOHhPnaE(6g=Gd;HT)it,"\Sud3b67E5trF8STfrP
%Ngi4.?h=OP'P'BK75tGj%A4RWk[\@[l]YpGdp@_l0q*?YXS5Q\+N"cb6F%aOUM*mn_a1Hg&u>AL7NP%pa9m'nGfmH;1,emu!X2@N
%>6qdC9@6P.BO]/=<#%ojUKiHp2_b\Ubf2#XWnY.ZeHLsjl1"kGon^^VLo+[J8RtOma/?Jm#ia>_k5T#P?+k3,Sl8;>aI+&'Z#QE`
%<,@l6^+%&E"P:%YD+ak(@QQWTK4AM<\r#=J'*'WY:<j,[+a<J`UHte&b"fhN%%`1!Et1eiDE#?bmJIYa`SRV$XLGj+\oa%A*pr%u
%<QD"\kijKK:\lJq#$*cmIob>u.0`rO_'%$g'p!elWAYqpCS(.-&L.23h*Nb1&(sg%;B<"^44kM'8bL)1qY8M1+TD(\B]kO>j1!X(
%HC*\2S6&'u"`-WM_Oi,RXl>m\eS<qk=KUl%U.&9*N.mjh4EQZ1mDr>jd*"MINk9S'gi5:AP!&`8GKJ_/&c1%"bk)a5O7:/NNgloS
%*Qogu,8Dk$[NADhKeDC3>S+[P/8*G_+%Y@]<F/J-$Eo(aa`+Ps/P.qU)sEMsG$.<h)MD'r>Ff90`I*cf-p">ffU4fd(opV08HlUU
%Z83I86,h]b;69L_8R;0@Q6%[\?gqCOM$\r3i\G`\$okLW#Yb(kE&9^4Ekj"&&fmTqCLB9_]Ds@@.%JpK@9j7##iU\n5/SiTGj==?
%%8;IIq@f>d+@<4_\NDX=DFua]oe\/M5V"b._foS<4rj"Ql_,[42KSr7dCt6nEo9[I!+Q.&`j(ATp`Q+j!qqriEKP25EEdC(Z%5EE
%SLr_4`2gGYgHf5`mErut/t+9R?i`2?i:\[_/3o[;JUpAja(aGJ2Us7"-@n[H8h<D9p^@`NJ;Src`rO`pXL%"Yi_^=Ln'kDN)h?09
%!HcJW!?oX;k6=D%kc01]cM%Yt8!hmOVbmrFi>l/?6NAX>1D?/Op+6W7VJSStR73Xl(]pCE+:uRP:8hJJ4K2e4V\5cO5="D=/U7%8
%ECp"?!qJ6!ci\lN\F@n/J2i#OK^d1'5eOU=;2dPZi\[mDe]S5CT/[:A%idG\*VsK6S?$O8$nt5u,\Q^GQh73t.g=jg#]c)\gd-sh
%$8K9g&od!GF:KLhYbcu:N0rr5*]QCkKMLY6m(75P]-5-l73(#]8]G't&siQAHgf[`=`U$hI2ARV:gY-6A5DgX4k#!I8B"kBNRuU1
%CC:gbUHo]O16!oH0I"'S^NVk]ac&@F]\QkkX(R1B*e<UWVbZ(m1F"+h+sVJT=rAVOMW/k6R'0CID^36"CPA6K)(nBET7@#`R?<JV
%Ti'KF;+Yjf31*p5g*.nZ!P%6Z]Ju(.%:@,D'^Q&?fBKPFJ9X]6)A2:c2H8c3`;ietRI+?AijJ_s0>e-AG3K=7l=o.lPV\APLac_E
%LRF(\8N%,,'AbduTb<Tr3PuZlc\oD/#O.ZMNCDAkWCnIR"jIPhf,Jh.891m6b#U\KqB8]!*+<+e+heT+0+EI(PE_Oo@*[Lt]3<93
%jrR(4"mi@:gPV2j;6qY8%\t+ojF[;?#Yies$VD'L0/V>B7CuGj5gHSiM7SQ&S*98Gke&Cifm2Y!M)gWb8)N1O__dg$af>W)gjX?R
%#Zu0<B)-PE:bpe1`/pac*Ydp4I,on4A\YBNNtZ#/gV1cSGhiQ"*Mo2HRfurO6Hj%/FemHt#246\[u[_oU0ffl#JH=P_+#YOfOPdT
%4UCSO(T,'._,mnM%-GqL^8<EAH"?HDZ'8b.OY83\J8YUp?n\&uLXRoW1ORR8e#U;74]9bXU(r\<c2,]\Q1oSm+7R.CAcI#-?:(4<
%>X;oCRnV^\i.>r"paj^DFF$>=Bot8&&3l.!;@,U3#,Mt^O&eicNMF\/M,>n;EPeCt=jG#9#fMSDfTIXWI$0/.FK14-bp20qCj%df
%PqdMCLF,5]C'?&)\";b28gY!1nH&+jn>U?[.R-n0YB458_r%b(AIY:,Yq`Jk9e>@;A/?B$lr:V`AVE1"ZS.>N3DVcZ92TkiVQ#8[
%eU5^j.'<f3?m=P0j'/6MC-_!6%S:^q:'0,4=C@Qc;&Wiq$a2@/Yc>8^1"(4kZf"IXVh4R5&TVT!Hm>T^VO'\PBU1bT*Xf=Qcq2qD
%CP#(mhQ#-rl/5*E*g$#to(F&2@bI)ZE%h'j.AnhT\X<kfSkdP!)M/ON#Ld':lX)a)i(H)o+X;N,XimJP4P%MjFVSGMi-f(!mLn37
%T0@ND)c;s)T"<Nr*WYKi0fk]k-=s?0T%^Qr,A!s,"E2u5$]e@\66%".:XZY8qBZotpS2#9#u4?=g[Xi.36B=q'XWmOi>mnq!*\e2
%P\[%3M1j>K!:639VW9Tm=Q4u#Ap7_TbS#'ue"08nqR=j#mqhhUo<.,uhiZ3?\Q.c(#sh$?64@oKLd;>Bi+6_Jju^*97R),KF!s.B
%_W)=6M36ai'VESZ8>Fun/.kM7&tC^Vk+0k%)rA\A(?W*c7gmP%qj.a&jT`K_ml\(p>TH)Qbgi-W-O>0bMpj*UIIT5A-9b0;(j9p,
%o"bF1FH,n-U@X5uPL35"#X_`_D4)al&A0'5e2'r/2Qpmp:X@PRIB6m@B;$O\Fe%N?*!:"2.uY\lAV1uUZK;d@i^YL#i3h<A-n6c5
%*M0a5+H$tjmaNT)dRPMMs6q]g'Hj2J)M/AHf6'Z9"aRtb*Y^(@d=]1n5n]k&4t9=\M^9s*-*cgUdTA0W737c.=D.dLjQ3I8GBaV`
%<.n:,0]=SRH%7.od^(rZL,[%C.SeU5:#o\)5-Uj)&o&U<Q_KWibH_EB+n8R1e-kSo'7(/a(nH4$69l<]!W(#L1lL(@eGM!HnjK/l
%L1&8h0q(r'L8=_i=>Q=,4JpO.nuZ=YioQ=Z46"@FATV"V&\2au2_ZYt64jj/N3AQi-'j!/r=b=u$%+SONltH[Zh%k6A]m2*?/DMS
%jE\H%l,q?`PuPDHE+=hYRmfd_9B'-\(*E2V)RHMK3T92->2$9pkuK<=KslP=LZp\RfI_22%ajVk\jh$22kF90kotu,;AkbilGclu
%j1a?m.LXp!=5'O!--/6AFTKEFE5W9PJ[-0@33[F3WD+Ch_7IK_6a4EoR@J^DKdSZ0*3'P=bN-3>erUGIbu*54@4T3FFTW@5S._kt
%?9qW<&5UV>S]"^%_>8"O3ZWr=85Bdol`fN-c5Mh[8B95sH7D3"7?/R<IORf[.lucoMa_B_E=NK?QQDKf4(C,c4ps6JRZ%trM*cOt
%N?,(VoWVAXT"0h:IH^1?\Na&A.NV-m3BKFd;j]U-<ZdLC0pR?lBI)7VNm<_I;WX7=YTsg91bPf[<(TX1U3MpB'%9[^ZDQ-/<^WcW
%6<K`"=C.dQWX\W;U(D\_;hn"4?Ob^;l_ad7=W-OZ8W]I"B2Tk9`7]lKR+0>I/tJGEMQN!^N5Aad>ZEoXSZ-VU"0!hgFN]<hXE-A.
%d3;rTCo<%*DADUcW?9X]C?oEDs6&-3ME'NFl@/u$B*"NI=;%#L=1.@j#s=(.:kT_57m;j>Ct(8&ja&[IE,)tiBh_D2CtY7l'R:<t
%Rp<=mNT"PNLB4F6jBsnO_k7G)4&Rc"aSs1/e\4=O`_<IE27+Le8]2d0nhiU`84tH/;:RpTe.<1S2]1bW$4;nb8k25X6A-94Z2*&i
%O]HTAj-)YNs4]cPMDY][lf@n>@Uef"#tC]RFn@fY%-g8s),_DD/HX!/ToG]%&Yn))PD=NGLeebBCkBu*@4i6P56XC]/-6$AaQDFQ
%66]hIJ<4uq5b<3'ismB-6%.j_UNLJ4/@&,(djLGh(]t^cX'(Mq%ilgamqaZjMf@DKj<J%)nc"(#@FDg__][.&W+r)BDCdig+M9uH
%JU5tW"W(X8IYGk=0N.eC5QU#,TnVVX3sVUd8pjhXAWs"m(=j<g:*GHLMYn,Da&Whqj:Z`Pee!U[SUGEJM:C1BT./%o<\ORldF'['
%7OK@=0EU3rj0PFGc>&U]#R$#CQH9-G0','c%B4O'@YCu!M+O>&6jCHN[`"&n"sK(=a\=>^,csh;YD><P3l"M`@d&M%3_/&^lQ06B
%4)@fZ0Dh+?6c?YC![iSX4Khk_YS<JF"Og&#X:F7SNf:n)0eQ!r-F\u]2g"!l-':G5-k'7_LkljFO?kF73rL53@5`*#-2h/3fR=1K
%]X!Uap^3?n]%h'i"0g$E:j_;n`2B"d`tLBO=3CT[,]TZKFDqk\GLFVV6r?tEe'j/83B.K6-4$=/d[;uP,jg=qr"RZB)=gUX9-E&;
%+aOA]h@jN2,)lZ0Enc><k57h\#L83!QdVO/Z0age8,VT(XcOfml0.tmaW+U=i%9"T="F-1Q%bA;f+o19Ye![#gA6D"d)?a>NF#du
%h!1_9`^R)41S3#F.h*f.XgQK#KL/&)e27RO/qV8I@<5;-e230IWj:_s5tG]<kKs9$2ZfcZ(k?UcXt`)`#.#b6OH.h`q5Vegg0'V*
%Cr$-E^H=S+S%e>\aN"XYrWn\a%I"+,iK4X)p!Y.kUr3kaM;DQ^L7>qN2u$O7rJ1PHb_cTKm7G+pMN2@LKaEg;4o&CI/=d\$RF+Po
%qsciJ0Q06c>9f=r64;fDo=TTuMiD?X\>YM(&7!!Y!ffQUTlA@t5YE<SYnIeOi7nOWo8ZWI4]:H.,b4ol+BhA[fXW.V_\ea8VOP]$
%MQE1SP9E?,=#ib:r6.a:o3'O-Aoe(&/if2d8$>'?93VYQjh@+GV#fAtl-_f[1_:hn,<+gK#C5[TfKG07!?dO@3u&q.,ut9qB8aB2
%B@sMui9lYfCk7PuO?Bl$N[e<KTn6b&Qs]N@l1*`6WJMg2Bs>EkT2!(.9k8CRG5\XO:(P[W<OKUq>?<5!AS#kl.r1&+<%k=*'YLlg
%;"ETQj$k]'0bh:1b#%`a3^_#I/+%D<:3OnBcLkN79qd1Z=[tb#/6h'Z:I*.NM/;NipV[4?85>(.`:-e&Ze;&s;Gc^Ij0L"SW`bTQ
%B#+M:Nq)^Eg\GuNEdGSYKFOmq`ndG#+/"C3&I:g+,)QW])PKno7Nh!GnQ?KClWKE;Jnd@uR!`;1NN.kZ@C/R][&EpA?]D4LRar)M
%5j,%85,B);QLf0L\naCE6)2KGp7@o(/Otcor'kXG$6LNWR50s4N!!o`b*V%@mmVZK]Z^%8YiX.MTSP3M.Vet*iIthNVP]3/jsD?Z
%6Kh=U=D=sE<QhulS-*u.d)JZ[#G5i$%%S_Sc;0eG"**f7QR(qoi#`uulm;?jF#[H90/GiXp#F%I37]414[8I;,:s>NpUs:UhbatG
%CX>g4mJ/"354)@B)0/Fh*Bu*Ae)U%9;(_:\Q5)XTGko3C\Vj)gO$g'$/sNuV]XYpR$]H%<[)BK<Kgd?7MlnTe'YUm#53MR61$#R1
%SfQU62.1Atr-u^02%anq=ce\,f-H[33#5#Bp@S"(37kB`Q:n6T.Z;r2!c#b<_ULrJ4?@s/UR[on4OPs^VZln?l\Lp6oj":"aaqVT
%T,iln[e6un"lZI416,-<ntB]s.U$eu30$ehZ(bMES`d!_@m$?T+&hL2<MgsE8tl/mfekg!6\&B#%%/R76gifh89rE'hK1uD#R[2K
%??k@PnsJ0fckPto!&jpfg@4]GJ$L/9fAF7<q;6]%LL9uIkmtQ+me=Kqr]_J'(LTK)#%G%,m,2e'IfA7(nGVg)s/uqtqhK[rqkp>V
%56(2c5PuEAs38I]N)0H`s0qL[?16X_47l;kknfVh5Hg^Yrq/<42Kl-E?J&_qhqbF^YmfOli1Z'S?I7t.+F:i@CJ'i^:%(d5?k:=[
%a&tV0kR/\<M$Y=:HrE]ZnuFZ:&fhP@.Sc?.0Zs84i>C3@.g,(UAnU7]UW]F@PHd9qVmj*HGS7=T0>j"^VEM`A7mbmEHu&[ELR=fn
%/0c#T,0sXsO/eq4m"]+C-BJX*SstZL&U(+kBPK>bBm$/FGI+k8KTi)nIG$!XkK@VV?aR&o]R01s_X6pBip+5TN90`[kI9X?NWs`F
%jl%NPe[<G-]t4%oT@_]Pk<6_2V0a0#`tbF2%&_'#s&0WZs2^rU@BVXl!#D5[IfT^2n^0\UP-Klq5!O]n<,P?O!ugR$lpMFsB^9fe
%lB$=Fr"*MQ"%(\g_>3%0go0X#hW"X_o6M[?`EuB-?MZHKdn>/pEI-lq+O@U2g_ZbU$2K<R+>ftD"Q;S:]BB?44_7\=a&,WPQeq9\
%$M7BWBhZeS"8(dYHm_EY'@@"]E.D0[Ed6KEZ`9"Z5+;`kkiHEc'V&I\RZ8UT>:ugqYjfgad3Y]k["-MGN>c`l?)GZup#3ug*1`cS
%WURoP?;Lb1K\N0kn,n?Gd8Mm%5%$'=:)>UWhGe:QG=7puOPZb(M.h5a1I0*(kjei+!XH]P*C7J7Aq0HZfkISMA9=`^jHKoXraIXq
%H$=rR^!t4sJW=%``ncnG.G-P9?%F81T'ju.UeoOc5P1C(&p6UZ(;KMW8XZKO6*QJO+Yc6&2'b+IWG)@-4dK4SXQ5T6*_&kTZ2jX*
%F#5k<??#OPJ9*hVeT$7TMrU$3#(@^AqBipI$^.6e;<,p5bOi<V55_:7GG/*4(i@S,$;Z\2CcsaGoV,t<jNLm:%P\5VW>Z%H)DWH^
%i0tf4<A!I]Ap"c-1T[372rqR&E5l[9^.D;*g$XAeG'%\rAf+_-a`u-tb;i]@r5F?R)uMK_!t"fbEI-lq+OAloo>fJ-UZQmK+qgDq
%6`E6W#:?onl,?RC,c,sf6/l@^Kg<,CK\+iiU3eD4=>9No&!9YOTi%A3Ug4UT#F[/+i\InbZXU\0QrXBaPrO)fT?SNm<QCdsI7/u]
%i<qSL;a*o?o?j'"3Or5hV$)S;I\#O2T.^fth7cMT&#mNS9(fG`8hp(^Ilc2+n!8GFQ]E,b6/Df10.8stmK;OC_]4@5C?`h3%$'?h
%#Xh<&nM3*UJUWt8b,;`!9h="b5!I?s'?l*.brHP<9sY2SXrI<Y+.BH+D9(&<rXS-BiZig.Pi`AQ@]EoQ?`,uGM9D,Ra"Pp@bA;h-
%dVT!)<JiC0HPM,D4Bi5CnIulP"/5KVG]VU-g\ic>'4E)pZ9"f@a9M"ZRcE#s>*VCL6/"=+3eYOBf&0C?np9<;heZ.%14EoW'HDPQ
%RLTGt&_?muOY-Db13^Ru.\X+M/s7-]cqD=VU'k9"L*7]J%g>^]I2nP/h]`Fs@Z<t\s%tc8<9m\mBXih0o&N2J>J,H3?GM.oUA^so
%EGUeV3"m<S&Wu-0KCGVT1VS\hZYF9pe79,)ODa:ik/\'%7nosS@dqd:,1m9u>7/ZYCJDh]nnr]KkogA`V1Kh"0HN^eE[:M@d:V8)
%-EoMCfilVH6Z!3X-">O"$[<^!\IFEM[<OXP=`@Bh8?#NCB%HWLLpXTE95`%((at,/[C&_"RjG3(5foW-HHB#']YT[_g,,iA?*(D[
%j1@;UXmA$uf4I]W>B<Ei"b.t<U%l;r>pt.Tdhhts9&VG?NN06q>dn/69cB^pmes89"-_\a5]CO)j:?L!'YI!,=i.]m>&C&/,Du,%
%p(:qmnGMmaM!):e<&G8*&&fju1RK['ZQa]h^9jdDCrE)Q$C]@5<Vu<7_=`7D8di@pQuChe,\JcTQ(Yh&f1>aL(:_n''n5`D%H</,
%mIb`n1VXXt>N2S'hb_=D+:8WWU/$M^nEk'AW>X3n_O`9a3X\Nk<-G!T*l?#SX$\T@Z6e8.64d42#Npk`(fK23Ge`1R4f@_*^QcIB
%XC%kZ8meJNH@DF-?[=<=Xu`\C]GoT=n=VjB<i8[Ao1u/B6'TJ$7<XqaY1lhjLbAB)=VL)kTnH/reJUp3I:>?oTTMP_j'k'L_m<fB
%>,BWL6E3mU$YkDNW]Q788'n6+d<ro?8p+D(YLB%b)-87?C:/u,s"_4*mkbB-<O^A0C@_a?&`sVV+I!^Rs6nWiM96T]V[d8SIpTq1
%=X<P2^H/e1d_jSuhZg`W(][6@\G?@*'dBJN1uV;o6)6[!R3maR'Eo@+[43G!6FN?1TE8e'HSn!U*S6/Yj86[%a!li]pa&<tqULL7
%7c)a4K^Oh+,k[L$41%HDnCc[&IY45FClHHX!kIfG70D>4EO'L&L6:op):>i3E^c7$+VBP.(@q$)ikXca3X\Nk<-Fp?-=sZW=WOYD
%8@`Be<JZ=-d6U4G0XSETnc"ae&;\ccZDciQkLhOsUJ1BGDM[k)i9>.rK&@T73W(o?i"2/&4YV0iaXV22`W4F(MG5dFOT/IGlI9Ee
%7a!\O2*RN.QE#t_qgt!t.4lA2"k;mTi#4b*_5e:;ID&8%0</R83Tk=);D>5NK;5dpOnbm<Uem.JnN_,I!SSd;T>QCB&0_g3;><rQ
%LPSTnA,d+D>fdmZZ:sGmJ3kgHk`[$6DZHW<\fLJA3l>[emLBCY;>pf9lV\s#,M_pa40d/P&N9WqI+T<#=jX-^7("7Q9:d<LX%+D.
%jI+GcP)J?D8(](_B_*>48?EC0*Q;;1Dl([hgh-iQDQbIfV&VSB%LC7c-3HE:4"98(RHR?ojmrtYfKW"jK#ULS/o^>I*dNNC(P0G;
%Cf#A!Z'Ea?;!OR"^Zop8:k45YNRn/K$Wu(O7306\C?P&\V?3F\:b>"&;<1XIWBhAC'Qo9G&8cC_mUlap@&?>3+Z;nrMLH3'/BSN8
%93S$"+]?-'%X;hTb^B(0BCG+J+gNd0a!RUFY_a`q0V>VQ;415G9^c'$PD"&T"oJ9tl6;[d(rWe?-s_3eDN:Kf!MVR%jCfQr229Zi
%bkT[:HG06d/3j5S$s!_K4&A1acn\S"V\G:g.SLe:;l-e*""T/i!lPEnoQl/^E\``s(HjJi03%Al+t\_q9jDBVJor7ol14s7_ut8E
%n4uXP+s,Sc;+T!Z\OM3:+W9qN_>()BWc=h`Uum@pD'BZ81l<VY60,KC4=lP,@L/WY\1b0W7@s:B%#*`0T?YXd%Zu#Vj3rCfJrG&Q
%Rbg/2$m(8$!YcaCkVtNd13u:6QbJmRB#0EkQbcWXI\.XK=Pkk>1lc;`4a04h(o4,f,8]Et[+&BkWqNdHmD.-#%qBr)lf`9[%03\&
%4&/S(SP%q7=<C(s^t_IC9a]?j&91f]g4P5<8&LG'YoFAG](D\l\"+,C$,@30,-4Qq+!FQ,`Q(?!>_Ib_Geca.>S,s"re)[Y5he#t
%n!<En@:fl3`A^R!>#p`-#A?0,:^!#a/O:T9(5_NOaG+XD8D#Na)$P:0JlHTQ^R@RZXM_H$_^qlF2'!at7Xg]M4,i$A_I;'\.eS5$
%Ohs7uc60f(A2D9,=7[;=F@o!(o`;qU1/]G&+J/$?eOuQIU1iJh[J80q!AdJJ<)6r$"q.AS!L,/(GU!1Ck-VJm=hg_c,lR:^5Si<U
%F#h)5Ib05tP8&i<QoV,BJS+@POs18ejj?B8-HFNT(9g)TKbk'e-,`W#jT0(kkoM_ooEso7;``1L3"b__aWal0:CDuVh52N=D(uJp
%-^`R=rQ=i(.QWNLQP?`$EuGhM(s`sSH_=90qK<B+qs%;H9'Z[Nlk^En+B)"0bVeW+BK1qOKu8"cP!]cBJQ0:&0FSGD9YmtPY(K]b
%,uqik.RbL5.u0Oc*H^C2?$AP,1ZU8S:`!r?)9(YjkRXS;;%<]QAFRn6%V4%+`?J)GOQqa80pCbD@J4cH1)RL2\)Q-dn"ha/Op5oX
%2Zg%T`,p7;L3W%oNnd@-Zc13">N=nV'1!H!?%"T'gG[=NUFZgM/'7/3-gk51SA]&M58sl;GZg2fZkAI2]A]DiUm+pA*aj7hn*oJ'
%Pu=9,M95l%_Y[+3J\L71P5u9B]q5h+)Qa4emX'k^:u+kWosO(r+I"8q`Xu-Q>+bra<mf;j[,UdFOD?UWaO#=)^F/n@(KBG&<nPO^
%GsrCeh$)ln-<n37O[<a=F<(t1"O+DFqcR8@)^VuqAIo%&/072cO%&:eHU?r`["%P*Jr4W@F$1,!X`,V5AlL$SKEVd)=`TaT/BbN`
%((420.mc6d8uo6i<=W(_AeFlF8,BVGE=;E?_*X8I];2C"#]pZg/4;Nc.#B*NNE[&#j#1n(Jbp#a#H#$-*o.2Db(,<-&[U+VPnUT&
%fn%Q\*PRREB25nY*pk$1p"@+M*NkNR'=LC!0-'DA5rM7(Z6^)mTBY%%Y])^eQ(q(&VgU]TU-Rg1M(04g'@o2]L'Z,h1Z'59LR;;L
%gN!H!9iFsL.G?]dJiB@.P+o+XkaCq_E5BE"5l_^Hiui02.msDe%"gR`+^"r7[9Ssu!_OXWe.lJY,F@gB[)RK/#1B32S<a]K!^NtW
%\BZ/Iqi5=L/X9j9)s=4%c*?=@Y+jKf(H#j+73Q5aOoZ3Q>WFe@ob=+fQdaL$@r<g?=)a'kk'.%r:S*pEeY#S0'#-K=LDgKGeiQ;c
%Ml)V!NdBfXoJ=As#[Jg\Ab`U4RX!17Eqg8G!gEGRR0MjUnEg-.1]*TX"7IAUPDK1MTNLVQg>``r2.S3a41s8%pA:3kUNtP6*m+=p
%R%%^i37:oJ[@j[GeCEhF`6;BR<a)/;3O\%e3A?S1:<%%0VVZceXh^KR?9r!PN\c=PjbBQ99*c7f*"k#D0eV?L)+Jo6<!?^(fdD\%
%JpG7,7&[&+\g`<\8dg5]!_RFTGB4=PF06MgHZC3`9$ip!a*jYC-jG@:*aFc2Yai$5Nf_(o/%_'4q/oS>54kA]P6Ij9(P:YDN4\`B
%KZd+I;YXQr=ZXi56QkK>>Yua+U&m5<ma7+TQ+A!63MTn<-"4sSiY3lV/lE@+XNUL+W1ee0LQd[Rg!Z"gFs3Re3L:3.-`A4%IL'*F
%'jrjdq!>+BUkJK9/KZ/GB9DI-ZFh>8K%,+'a^S(W\S=M->a(&gI(F>PqINkRf29WdI0$USlEMHRcGA`t3tU@eJO\)DjHWUVe-4!q
%_[>F7]^TngNPc<h>?c=g.3eC2a=@t1LN#Sd64I[1B]FVK]+mA']+u!Ye#3/U"kmGBX\dT81qQ('h<_F4@Hg=@9'D*`3FnPd+&4TV
%!^0B2/l5LZ6e[ZNK"=40'")Q/Xuk9HfN`#)BV`RVAbcmQ_^2o[-\^ph25jZNR's#=6XHF!`4(FB;\%U-mhR=_/bdEXi>e@?ciXkT
%(FV\s]Mn4!-u!3?jFsc]_i`XWOI,4$l5bY!#5hY=ITSQYTWQL+WcD6>BP)'tqL$CACYkGHrg=;[.(H_'BP#_eRC"AYT,2TPn@b[(
%`Oi&`^lJ)j[l)fYRVSrrfmpL`$9spPK&8tu>\[)4qS:6/:BQb>.B1s+0MMRVLRnAPH&Xh@\k8j@.[.<3k/X,f#B;&nHQda1QA>i*
%d^CMTlBN#uWdfQ-VJ7+!s.H93=YZEk8Ij^E`?6\fQLaV*S-W-s*N*KsR-)=223itg<Jn=SjJJ`q[0-jlN"=!-`<]ps3-_t:-OVFL
%I*iTDh)7D8.J4aTW7D!`'2PE2IQ+g*9b?h]@(4=1NGHHC2J>YoTr&$\$q*N5eDou/I]"Z#)^Q8DLh'VT'Qce*HYoWfLiW&aVBnKl
%&!7u,^q<!SN(o7;<"P<Qc4EB?T6]i1G>/Z!MAPM@)YD#PE4l'\l,7Cg0BZ^[(4t+DR#XIp9EQmO)(o4&RT#?I(J0Uf&1s]t\`V+k
%#]e",>d'/386a0BRuibh0-,Z$"=8MP5hhA_6(+iDJI4!$fb[+k(dSSVo<WEs6,IVPag;V$5q2$g;&$#bMBi`m',!Tq:_8je;,r/M
%anc=cIWsiJmIHCKV9N[4Nj*CDUqZ%OJK7mtKIYZ')b7(+B'=8K"[tTk3o^Yh98CY^Re4`<5DkW^<$RdOmD;,6`euN!P#FDZ`&5;7
%g9UR_0)PhVfW:OVI\Y.UC#<%%fb]k,$84X,e8U>1YE,StjLp[dP.\i+I=5GLJri=3c195*7H>>kI2,:2:huaU*sQ>M[^lbgabGU,
%#47otBpo'>8M;mtAoOFU6-:d6=N;MP@H\0q38Q#ucX6X..$A`iKTJ%piScOeQOS5:&87Y_lI+5`oco!:5lSa@`r5$GK.5o]EGWpT
%[A;/R!!Nr_UH/VC9H=,pY[J#XYuLVSBi$W%G"WqYL30FU)FUaUND`a$msGd]Uf#_NBp/bOScK1t7+6LC%trDE5Z3mOht\F9_/Tad
%;;HnA]*lbI7OS^#HXX^X#ehj2\:QE"4<.lZ#_+AI`]*0d&49b)bp78b>!#Nll"!R$4IBe9),QcD8c'A$P'6Ek[NG/2I\g[pn-IA8
%YL!o]NK^"e9;I0]`+Hg=,k&P4hF,R9(6E.:_?cnh;EXp).9"rOFe'Y[:T2Gt61Pj/Q??Z1\P<>if1E`Ke5hoYP2R:&==76nIERCn
%q,jX1BPH(mZ;.\NQC[?[N-?n=W^a5oOp<)Bh9j@\A<;%d@jW[q]#m'<]1IEUZ@t?s%nCpai/n3^f!^qJ]B^dlb2K@i1-I2Xis5?Q
%2dS>1fJO8+.AS6S&S*\p3.QnC()4$_frd>mT0T:?Dbhm3QJ4J+#0M@m,&g?);poB0YPn'ar`3<kHUX4j=ZW!0HJK["m;<JAM)p'5
%(4;>9Q8DEqbQoSuP6]W/YiWsVNjK$k'_?Fo-jI@:kj7XeItjB>-h60@RKe5lpk"R(Q<MS]V%+.tWS]mP<447_^J%-/19QdEU8_RQ
%F)>UD,P%PUT/F`1l4/eWfSo@Qn4Ba+8$,?^]qb5\oFAo=>_Kh[OLH'"X_doYTn,/KVoTSF%(uGTMtjOM73e>diC4W^4+$FO`;A#+
%rr0!NpMu/d5RH:n#BNT2eulr?l+tO29*6'Ym=H-o""u1cH-o2:cM>?SPC<7U.IU\\l?qpr]s4,?*[.?j'%15>+pINAk@g$Rl1K6J
%3;UsJS)8[MQ8^iYj4qGk,3gU<*@1sKY_ll<,^'M!9!TF^"GII;=N%\C0d.6a,9DFGc`5V,__fG"B@jZA<Q\o%fT!,*piqMAC8'2@
%anA<Bdi+!D",Km8,'Y;3;PT.O%/TD0Jl/[5n1LSSn,OCh%kf'rA@H5<Gl<@FT#m3&G!XUgfRQM%^!UIr<F`4Oe"RtGoFe9&_El/f
%298&.:;cI8_J\ssd>?GX8OPDHPEQU]M4tCNabfW9NF/Cp3g1!Y/LDq(.2P?_h<(t;DNJVS1)D7B!=Lgr8g:XL'f](c$7<kQNW^.5
%5#f"t3i/s-;kZ_kppb7(apB:R--1qt<9pSuU6`5G%e`Nb<_L]#B6dkID:&Vti^+&cI\1gl`g%6@Nld\2#e<Y\.uKEY>'iR<"aNC[
%neAnic,c6.&JT6M>eh]\:J+93=Q6tW.-_4XOU)7ip5L;soY&cKH.sp>"me?4)%`8p=#p4!;JIe>g#WmCMk6mTg,l+1S1P*=a;qE!
%j$BnZ3!S?rk)Q+1[\ramJS1;:%nDSf9bR%*p6*JpGMVBhW,j>ZRGZ"Gi4'2eVWU)VFJP-3:)n)BBb=F(8jl6:1+P>X"!m>0XDI@8
%pAmm[>"nJ@=e32X@<3c\g<u9/MqHMja)^X$&:R5\FlEQmb-fu,Q/#=d^MH9)o,EN"d.?<B=S*n1?VBp)H/pa@%kY;pESYDB[8_>L
%i_tYr;,7b8+Ai"2^.AYe\Jc_\d6n<]""&]4GVD"k@(@mb%Za)Y2eda%'4b:C?)Vm>@('T2l&_l73di"&j(-dM2fEqAp<6CR[M01,
%/@[E-j%(n>Iik5d@"i4M<)g(fD-n-)U=OA70uukEF7YiH-8M$rTVig6ok:N>K6t6ile'2s,RCk=5.MD]c@^<`m`g!,CQN,Y'eJ]O
%BWA)Z-e3>l#iVa1?Q\lBJ/af`<D@"lI0HHWVCLj.EK$33f]br20JW\*("In%[A,uF4M<Mk1B/"5jhIcEFW"Sfl]_st1YM5AeUH(n
%mcK,'as*V"$#7Lm<SI8d(g"T_AW/0`__;J[#>fIXi>GBBG,J'QoOri^D.cSMY>')LouU$7-[1*nQ'5Vu#+-t[:c`.PO\R"=B"#GL
%j4sKN'5PkJ7#32HbVlfBO'u7S[]HHaGI;.&Cjl'l1s6tKJ53B%H7UhkDSb0W;igSI34R"UZYm4#j&\lcpHSbt(FS$I'3SpQ6/A`N
%.bW:o>j0bZ9?aMAIK0s+dlFC-).].`"f5_+.d?kNN+VB/dkS9phOH/Z^NK@P-+gu?Z:t9$H+T**A4J9dU)T`[9sY!X$<#N;RMNgm
%!!T3+VCLj-EJ3Mds&G7Kq0t@3d-9)f_cJLh<:n?+oZb"S$S%jj/*`UJVjGmCT3P;Dgr/`Wg>TB=C5:+fX)Hj#^91A]CDU$/lZ'G?
%G4b.LH8_/o;^_jlBlnZH,mkZrY8lN]E.OjQ+ic,"=l$F[du/$tc`XPo5.f$:E7Nukp8i/\mb+EPknm4![Buro(L((ka/eT1h6YqP
%rBKHd42'_Ci0R\iC#pBh\ca+Y\p[OjQX.bhEkLhgg,`PbGon*1]ZZJm_:Pj'b^(mII(AS?X"U0ebO6L<lS"HFIfVa+\dct<_$^@u
%_:L<VZD8aSgZ`jJ2SnoM9UXFk=(5@Ea%Pr*h/c#W?B&YH*A>I_mdYTsC[Q.-5-&ufHZi+1%Wo?3;u[A0AX^9lAbi.aoA+b>D.]AY
%l/Ko+n"j)u,4pT41JRPMlgoFAS6hpMIe8>01std77@IDmFHr_d="_rD?5$8CVD2Ag<c]1]9,DAI(tYqAZo5'mY'2G]m#'%dI-Hg=
%Pe;+_VTrGYBX:ZWl)K0;6r'r@`29_D\r!u2ptF!Up<,,G/7MqsHLKq>ZO8b/=0CJ/b[%`3;i@!FiC(L4(\&$>M1oeO]oqu<GNi"#
%_n("CB0#;+`I)59Vq5u6a/'/)Q+V3-k;g7u8S:(j\u%+g`8jcieQEj`h1X,YD`ZQCWF'0JA)u<pWOJ,fBh?J:*d%-A/Io#Xc(o5[
%F\<uKNe#Uef]61p"cls##7fo?Nfl2&n9>^?6_V#EjSG`]esB[,CD+@i"sFLKg?]#;G`(W*9N;?>dr2Uj76s`]D\UmF90^Vj;J0#f
%&_#_B[:?NmmJLCOT;&@5>g4DAfJocbDdbHH'V4\Pq\D*=dc%MI@,e9Vi3QF&f"hm5960"@ge>W0UR%\9FHL\?l8#&Hm+3"F07%c?
%oV,D'bC*"91s?%CN.YUHro,dTp#(m*@Ta%o>0Ps,#+#,QMf4u-%C"7)p`.6471LXL(O>RkVCLQDN].C=kV1r.8mbJ!EkE%CEod!p
%mOe+EK6Y;S.M)rj:Lli22$sSC4=r.(=[^MePPI\j"9E&jP7RTd-u7IV"EWV&;uj1n-+)5',<6>pMPN\WScYKX_)#a_LS/q,."`-I
%$XRbZ4pp?ii#?XR':N7C+E.`^;$O.1k_EoMC^3.ESoM\66r:*RAI@Q:RBoV,)p40qEMo0<^<no#Ka5!t-t$.gF\(tUKB$Dnl7u'e
%3'n8S<!qO80=r366n6q^m=HIrLl1#XjKLX01/^hVoga&Y<J6.C%q+O4\AqXQhL"Dp_"!>Me,j4FL56R$:[[6`TiVf=[Hb<kLl4@X
%Q?AT-rr&e.FA[X-M\2!MHnu$D`Q%@N%#@_[W>TID'i%ri__*u7$.QT\F5?',*:(-;ed1SJZTe:*i6?cXR]0.57r`&agfS31XR^PT
%L$f]2kB?j.V1=Gf-!#UN54;>U1PYgFe^G1qc*P!>;SGHHT+Ke\&Pfd_b@a9nQku@;+r%CM!Tc^H3BH6[+\n)5>F)Qi'?alWdh?hF
%"r@>299S.IGGsHL=eQP#(8][3P[_eG=LBf>H@AmfIGkSC?K+2u0YB\J+,tM2h_X!T9[/kE@J)SjDI`gsdij>,]RCJcDmZXo(H`%4
%i[7==>7kYl+>SnRe#=:XQZjY>Ie1[TFas)!/s=ZGa72W1ekm3.f!PHF^aQJ>=.#S_NMVEFn_+jRDa8E?cc*qL+jX0H])2arQQI>W
%AI\2#UJ;rMl'%Fq'hDU[RlANMVAa'P'hWI%V0TW1*F>AO0`.Yj_(tY()$9%1aj"BV&?^(*`.>[)S<r6:@4Xi4!E!gV8d*RDilDb3
%CQUZ2OA'`W!NI`K"d7h,SPSGGE@^q:s+LE%pt7;As7:_G(YJCc:htup#bEDPGp6e)Db#BmEGi*(*TS8KlG&kukoV!i9L$!*mc!@/
%pt[$@q<cXThuDinhsfM.AUaX%Dh%`biFfq([t!037Eb]/pYZ!Sp8S"9HhdD$I.uHDrlEc"qHs6Fn,I@tLS*O"7)fZ0qg0,@Z_-"N
%:i]qCq&e1kGk4?A`\KAh_>@5k(uOAg>o3AC%64^'m'_Eu(FL;H+hMn`bI'ONio<T>rP+l7^gAj%pidhXh3%26K%U&D:#cIj_>HV.
%?u%..mK__:&\C\I>qSaCG_g8c`.e9>YFDAprD)bY#OWg2r'81qpLp![D.W>/;-.3_RrbdHZ@/[NP<Ic.fcFMM)T#:7f]=/KgS_/i
%5/Y7(-8quBh_15!93:N+b3jJq6l5I4dV!%0RY-C7fBkft48n>T:Z)23N_Bom_rlOB2]qMZca8:1ffsu`oS;nLs)1]js6fp_p(rea
%doNJLk>[K!j"HVWXZ0m'Gq2Y'=IQ_Ie;NF6H\Pa]I`5Y@dp$8'9(c5PHF[:!V5Y8(p8?A2?+QXbj0E?Z_"1o(_VZF6\,Q"!f?sWt
%i3nF@rSdeQ^UK!Ur&+KCX'_IAN*iag?`sHZ0in?*(k7hH^WQI]AcAkgs&YWgX3?&^k+;Y_iaU6l1lHdb&:YdaN.%EF[*K`oLim\i
%`>Ubd%&NW\3&Iki*5`TJOk<cBRti/M'$"7W7MFmYQ;N)A@*k>SI@>d`c5IPUJQhI.6Q$D!?.'`r5kiPFXsE\,CoL&H')&PN!fdE.
%W5Kl+P]DL%$BSc`N3*+/B370npQ^M#.i1bq0u[?i-*`i5K"5KY9e86J_%u9MJ0B:Kedn!>^+USp;X`o]Q5bA)Y`XWd9N"?%/O<=)
%rH<d=">np,H]Qlq^K@u(W)+kLRB?ORTf13tngSEef>#B=IeTMRY^H+-^LT]Vq)30XlYT_@*rV6@ijcH2V&FX;7.(t>G7K;AZsPYD
%F)Kg@HlZUaTW.RKacBE)m)n5>GZ]U!#\BN*<!"lX-"At^9^s*tP\S92d9t=thH0,)XS7;$DmYG7eNTJ1BOth1gKK6J<kP!SqoTpT
%gKP-j7eM,eM2ftV9_>4G<d(:8$@$-OBfK)hg@T9%W[?O>U0*__EIniVB7a`hClu2Z5W=?P]4h]gIZ[Gc_55l;-F\J/"$I1B%4M#n
%6Yq&$<Xb--m]n?U"[Ie/+00hWIRd/+^$@W:oP[;uRJI4n`\B!JUH)<NgAQbq25OGYed4[pZ.a@ro0fisRtM$E$<gc&ag'FK?R?r'
%Yn$(j$VC^B-[J]JGjV3V"VCh#B6c%BU._nt^J%fW%j%1cW7c*a04f@k&3A.(1_rK[oSR@l9\*rcS!t)u@O^p5=73bB'0RmJDF3TJ
%lAh>RWdXj+dS]^+h1$.6)H(M-;4GA*gQPUlmlAUcdaqeM83]ShP7&m4D`RdcS705<Y:Hn'B6h*W%^j#7-_^1]44.Rokr'/J10V[h
%.HdV._4HmHH=+;E#^bpn^>iPlpkrfp:j^,Zi8c&cLhLh1pU+']-$G4DKgK\uibkRm/;NnX)h&_R;4?]Pm;!A?`RT[3,c'VV_Oc#t
%bt\YYj2K0QPBe7MIJnVMZHW[bb.Yu!p?Q7>G!Ve6F8NptW:`g=)(7e54lW/.C\;XI>#`V78)?DPd>uhl2S&A'Hg.6jbB]QN6Y@D%
%V6[(H)ltc[Y[8T0.UT[2B9'K-phpi\1oC]4DFC>jNWRVJdZEI+>MT3j:hSr?0g0o7@>=(\'uaDElQm]O_uO]k7(i>TD0u`D/'AHf
%[N*FJO7;8-P7^q>.K/d%T"&3Xq`iI%N)Fi!!LaL5$S+V.GrctfLC!n`S4[E)oK;(lZ:Z<0D[VHdYXf0%IZO3fgnZ9._=2"K;h6<5
%=s>C$r*EeUVkUMUg;&;:8"S#H6G<Acq=M!V_Cnhb#'a@Q\-%4o9HUR4C:Q!85J=+l5EsqB-U,MlUi`hqO*,+XWSul\O,o]b5/2hR
%1GXBgRCag1:U='e!rY`+oHSItRA1-R\X`!BP',AS*Bob<)6`6UWL9[7=1%,?Xg?\4LTSm;3jJL!/g(W<9OOFIrDZ@:fCj^GJ:6>u
%rO</@Rb#18X\4AU\8pkbd7*R:>KACn)"U1"0:((P286Z`<)'0Tjg>nl8FbrJIe20@Q#2s,jPMS@V&Hj'4V/>?%Y@jm9cfi?=Cq"V
%D.JH*heHT++Yaf?>GSNN[\1cS2\ku-4]%'ocK`'5"RA9hftsU(?)cpLCmmDcRpZo95D?=*iHq]+4;Ypf=ude@US(Y47I(>\3s)6]
%Y*?M=5[B2`V5,"8dX#L'a9:aTb,5"A81u$6_P4Gh"(g>X`(BM0IF:RsP&H%6MQuZQe591Z+dJ*qV$i>K)*urq$5gI`&+TC"s,]?j
%XS4(l-6jsU.(-KYYnh*2qpsOSq2'!D]Q2.lG0@(3`dRFbVkE?\`C7;,,*#q,OT^Q&dJB&;[s_IMG/J13I7[=Tn8XLH5q6ZQn$s6m
%d6Ea$a^'LIZBPbmnF]!99%WG,C\f^LRf,I0O?DU8b?g.QKhd9#;APG46B^*ogUbpOd+a.Q"@6YYGZJbjRe"5l9^T$AM!a4_/-K9J
%4g1MGLtDD%Lgr;`O$"Ta;">9N$?f&TgeYc\%(bf2.D$l4:,j1Hcj[@eJ8(3`l:[bq;,m&a#F81V#ElaMH/?ACEfN[E3bX@09uquL
%BrMB=?jAP(I]kHSF-Ibg)Jr/YGrT?nUu??\StDcW`VU`LY-fOM!C#s50C\?b`al,pM.A-Dpu2WgW,GQ?>psGlBmUBgc[A'r$Z8+p
%BOn=AU8-Tc&0rY!QpQbrjC%7?KSNdsCV46QUM@s>PPR)#P-Tr)Q_eijSA19q;O8u*]J8WOWccSu60s'Ds+q(fGI<TXs)=VgZ%=!u
%Z2ajZjK1(0lFVB!:K.<E-iFDqoci+mj8-q3D>,Ks5<EI"mZJ8=H!'C)/XYL.c`^U`M"#1!)7F<ga+<f)6X82CqlPH\9LW'?\MZ@E
%cHk5!/i>IieO64P7k,p[p?d%S@@!VCk4"ga*QSB.5R]'C]?MQgSF*f?\uZt2O)9XRZqk185)`dMXF@-d6?=sf2*F0I>DJCSIBN"Y
%1XK\u'-1AoX)_)>c]4;dcJ8+<6@<3d^mGYu>9;e&9E@3n_3V>GqCI8eb%EdQir``p@o.%"j,26Am:1o"+n%H/O'$bPTKT+MY`Qji
%Aipa7,<C!Q7caF"Vg.+BLaHk,A5MZGK/Zl:F4!El4Di3P&TtJ\D]-,Z*;n2b2^'uQM:s*nH`f_&$qL*>X[=#j18Kbe5'XaFc^l??
%B+"MZ+Tb)7p/$N&9!iE7RueZ=5aNW7H7nsW_eYhg96mt=ATnU:=PO.s8Enti^.f/*$j.%eE#?Y0DfbK3[,3l3+g&1.Mp.ac5osW@
%iu,W0m4%4D?I5P.#e/+Q+dDjBOiQ0/"6sp4GBH.@?;6B$q(O$elU"(!b`RC.gF^)$N4])_KMalOCoOj`d#AR/gsssdo9,I1+RZr#
%:V#d8JP41A=MEW>;qlno/G!H%SM'mT7XSc+LC\skeKBo_b]o5W+LM*_qp0EZ@="E3ZYOtT:0?)qQ#fE<B@jn_2n.$R`bnZADNu(8
%Ak^HCdN!X%8Ef/&*%a0];qlno*'qbnG^;("j5TfbQ2bj(76`lXFR+S;pDfH>pE4<_mXn6eJ2[Si7;pkL`hqqYVk>V:RaGu^0t9KK
%-V2u$5AXQ?RjU0TO:mU2ITWmKI,+jj#_')<3V`,#,tR_nB*7!A=HTV6>n1N;;pZ4C4`=46hbQnG!STS5IG==9&%#k-ep7.cGHsT]
%K[Pftc%iurc)gTm@,cqOB%@)iB5QZc%(BdoS:J'C#PoG0Fs^?dcA29ZA#Ui$N'MK,GbY_*pYFgX(jH99U1>M.1^>8GB77NmP\?&H
%KiQV]F,HJIjdRm'EUjH1Lo2U([Go/_IlOn2oFYGM`'1H_>T`KS7r7srQOsSjeLC`Z:;5USP/.][]dEQ4*a0jLh\Z,9p/B.sMP!5@
%;hXHH(5*jK/(9K*D/8=WG`UasEIh#BeAR3k\=dB#Wu:0Ti^5*?ee1u:<u$-\-47@k"@36qcIq\JUQH'CC;\?`"at(#G5a26)0_Q_
%pD4h&3`S*dM,u%C;O]Jqml@(Q1YE)F5<*c=S0RY_E8P4V1SU/]PB3;_6[N0LDQCMO;2RM8/9sefVh@M2mmPLDPk[7^E@^J>W.Tri
%<bAW>P(?,9]@U"SC?qTZDM:EnnTF50YdS;E#iXM5!MZ!VhG`n-AbDE^]`4e79OkLA6[V"UW@i*43#f`r0O@:b85.LMFe%f,*`n@W
%+ckXd&"NOI[u2#nO=lRO`".jb2>&SJkSiqqA:QTC",1/j6+8H=AU7<5)Vk!Wf(L1s%3WbgCa@rS".#-I)DLo<3)[W!NAB%/4SWcb
%13Bq>iZFopF!?2IR)g;$#hl1=,YF<j9j]ND;Df=7+?ot+6!#UJ:6C*<Z+^iF*4Agln.@D;P<gU930F\^"$.]BTO)>4'/9q7:qG3=
%aj?t9m<Pn*j=iAPaB^>W.MXugJ.QGs6;A/sq@k4f,.i6L[g(pu+Xo)6ZdZd*#W`NZ-&?m#Gt:=]dgh!-nC=S0dGUM>/6I0Ql(Z64
%V.4G.hI(k)&gl&9</"kb;Yb,`ii^A6%I$qAj-G>bqf0S;cIBuJ%[$1U'=RSQat.+UB&.Vs-+6@J@$dh_!GjJl?K/4Xg+mc%H:fQA
%N/F=$&);aZ:UD'6+=`>rqS/;K?\@j)ZkVkj6,=8uB*E*(gFcGrW4)Sa7/,p/<KcT1En9=pq`?%e`ra9W2Ac(DSAgb<[kiou4uJVs
%#s7G1224N`@ZN'si<*$<jK^FL9:GY@O)0oNj?BL.Bn9X2TI@;.'c'5@L+b817+AfhVVj%IM,Eqtf2rcqG_oS:H$>Z^;4>[D%#a\X
%?"7#Qd^`;rA`73CT/&'OO6he_9+6c&n22!$)t4IRUY.W40i#H.?t:$2XNX^Spsp=RDfb(`;r6&#8pTSJ;`%bl?#Q"7!<^OkU]Lsp
%DAch39gX9),jnMX+"68,d-/KYOuF>HD,2f-6%112KF6\"T]G@<IZXVgGa*A0M;mWk]VMEB;A."#Iu6PA/4bI8"Ej:\fi)L[^gK]]
%8:YI7?j`$E\-R*h)&g>u[ck)8(TUM;>tA./h)I/TK$TT]1a[Z[5;R<\ja.DF?")t1&in5FliIGsm"6WWmZ=VD<(TC9<9,[<[kU9_
%._(/\ZY)"4PfeQc$>3I@FGk`?I^#<4QT-4S<YA7"6%b+1YO;n"GOcauX(le62%=u<'cFGI$nhpN:r&h/eJ`2;^Nh^;Q*![6WQdk-
%:hi]K7Sm!q7k%Y!5ZNmkoK`9i&fj5iV;]Lt)SCfHY_&1B@7g<uoVASK9Z0mK5nO)/djHPQ#`nkg\Q$u++j6]M-]aBQoLV]3b7('Y
%X\dA4a\76iLX=*P)n="FFSc.#9@[/$6"V)Yeg=rY&o:F)F[YHXB3=8?Bg>&J?p#K%[BcMHQ\pC!K:)bo@#\S#qF4MF<c;`#jKa2_
%)Pd8b=B.r'21BG(la)6]ECcg))l&nBqLJAlE<HLte(2SaQ7/FF5re01WQ(p@HRS"u\LaYr"e)FoZ[de`Yp([W2VAf32cXQ>QQ-_4
%/k?FrO@BRlcD!a(COt!kQ)o.ZC6TJ%,!#+240I_Ag?C(DL6>dC<]ZLmkhE<NPTnm;RNZ$[./I*MC'7pBl$!Iap;dDcCXR;S3pC0u
%'=>8K#9#L7K['q0.BmNOd(2Y$8bC9_'FKDa,`<L9o4k*m/PD^.P(4&Q5rYjQ*p'XDTsN20(%!Qq02:E96uKG#>Mh`\HIHpj%Wt>J
%orOo6HVJNQ&K,.MAZH4/"O&$B8`C4V$9'aMY`9MG0[5s:^0OY=O1F(7f]Hc'h#M^=A]4qb3ToeXJeN.pc7ZmBjjLeEWF?McBhDEK
%Q=2.4Y.O%N%C+fsfdutKfWs110\gNZfY%M#eYrG?9e%b(/A1J,QIoOBk:RF.bobt"aJHCZ4^5;;KSYdJ:BW4$jC-HC)"FInDLs_A
%;OIZAm6@oo5s3Ib?lF-]qI95pTK1#&)(CG]]Yd;eaq.!c(V]7']5<uTQ$ITnSf@;?;:rR$'$@DN&Zh^nbOaj#)qQm!MYgjY)RN(F
%jZ&F%oh?VLn`cmND<$>X*->jLCChaP'Enr&"eN`m<WRK&Y,Q%b.Z>9hL(7^:_;P]pF5+YbG%MiH(=4>4#_`+)#quuP];#]Akc+3,
%A.$h]U$P>>GbjM^/ZGEd-4XGk\"^b!;<Ho)_(I,r&UZuY!pEVQ+T\PeR7qHK7<Rkr&MZh0/T/%)?&Hd9_rZa'I4c]`^?k$?8p`+r
%!8Ok9;IN(#in.6B*F1#1<Nd$I+>K#B[7P3ZRZNAZK44H?(e3_Tk.FUnG>jV"3X&q7M.P)K%6>.I`4'QYC2Pq1SfFPhBAj)g)kspf
%p$<cdnA$dadr_,@*_>;UE-(@r@6kmr3F+>]g2:ZZ=BIEI_6B7rDn0?u95/L67o1/fmhL.n<W/9:oLg?!#:Zh;,[3cjOA2\.&J)01
%g3J5%TQ?Zh+LND>ZHU&,Crb>.b=(L-(:G+*2$,?hf^W3=*D)OhicELI>S-4'FM'_OhZ4ZheT2lYqR,q+=(K!g0OX@p4jak.)smXY
%3`XV+5MAh4OkGCVd^^B6AF%"ss!%03<f?Bqg"Z95iLf<4mmopP@HA+"pXJYM_I*/h"U5($&X2CnkY_Ut'CH##K_!j5`B&gZGD=Yu
%^f%JsM3W6_:o;D%Z[+`2*/md)a<AI$#3d%2RF:fiPUH5";?KJpPK='BM.qZlI/#Mu<:fbGiKF?lh5YAdPj))lT_1F0n87W&*[fjb
%`'gtMV#D5:*#6d2hoA:o8FOK=BJOj%;S1Ta2O$u9bnigT`)kjSdh*=[#qC1OS]M198iDh[o]YJ\MUOAO`<;j=\`$]0,"3mp\(i.&
%YkWcf8Y79,d(H-L!LV:D5p4L8H@ThGMWCLWGgK-=?0c*V.A1d.(6etUqUWXU/PBbBM(_O_%T!rLr54Wj#RN9B+rCA+g%K#h8/N;H
%T7X)1i<o+9iSqb,.A7IHM1jJ)9lINI%j@:$,$1N_&#5QP<-V6m)/*[):/R=`JWB6T6Qd`jnI)8I:(Uk@9_k97do^Wn^`ePobJ\h9
%8g(Q^'ep0jXd+.EN:(*6KOFZTW4/GIGS02,DG3l"0(dN6eKCE50t;$kN/JT)6"hGT?dq^(Jsil6Hi%#Z(H4dC.7u*6.`drK>r$FB
%h3`,>Psnd(*:3Ns]Blh"+8+LVbAL2+*SI@H#,(iMpII3#TQpog:Z6Jg;mnauf6GTkN@gTO$s^"6bBAVdTN!AsO6rV*JNeY<YR18/
%3i`*gBI5(D)(LT]R3&KAA)Umm)PNE]*)Dt#:noF[e5*b54D(<T.5P,od,#2&r2>LEOE^UA8g-bOkA\Td-nCD!\KE;9RcXW;3i1p(
%0f'MFHlgC9)`fT8]@,3*Q'!1a)gC::a![T4cDb:m8*AC?l1m@tG2t!SNS#GLh4kX1pi1*.a>PP77;&PsJ=tSp83sP5;*_-H@5O5\
%4Kp8&e`euS+DSY2E.t=l,[!T[g/O?#fTQLh3`QoUVW(TE.&3F];(F_F>-mrh.arqZ`@hO:gJGVAP*fdndC(He<?sCNB?6'`<3JYH
%/`NV*QW`!:@]8(mLVB5\etG;Ec+&Y>MR!S[7,[]Fo^!-Qa`''Ondq^_kk[hqT1+&Y^'s+ON_Rs1e?g*!],.]Y3'k7`MU_+IHm2W!
%\f.Z3g`TXZ/fM/V\W%R<&SrD!#=u.7Z7i<rYmPB0lkc126"gHKkt`'^P-g,\1-IF$k']F/KA'_N5rY8RO?!'V(+b>;hRmX43Wg7O
%$ug<,e2@PO*:8qI?W6Zbj\=0HG]pHD[C#ft/]KRW,THC$CdJOPX?m=;m6X^o_(m;27GEp2[^Q`\QhU1si$T9aJM5`5\?VfoLhf0-
%M&8H\MAX*A/)nDNCD"HSHP+;Y3*M7D^LB"YU.;6rj%$]nn2&6"j&^(f;Yjca@f0Uu!dnTG@f358BjY&G80#e9?q4]$BLu\2W\''#
%+0A,Mcg45^+"^*D?aV>&l(_5bpmGCopmG]MnZ0)E/q()Z!C*nD0n-J`0n.Zm`33@*<[Qa;Fsb4iQ6sU)fp]G7dFna$bhaW?_;YUq
%]$6()+0A;Rcg4Damk%=o?aW&USbecI$2BqeM=H3%MW&>/-n]kR630<U6OCE76ns)>(5:1LegQ!eJ$_^#I]uAbk8.u5.",]m!e+aJ
%ipVqo.Di:@VRW=pFUIo3I>[QiKo5E$2C^>-Zr-ohZVrT-ZrAc/eQ.CPB@\QP&,%K-Nts7cYM-'+']%/O7I\-27Hi$;7G%du'nr8B
%>-A2qg91cG>-JjXAAb.97k5>YN'#auq!3PYMr@=;/8FBVbp)dnc]VW%/Qr9aZY<:aUK*62]j5F<l`b1[HH!>3,qiE1C^6kdbDsSE
%\<oGb)]-DYXB]ptN1J-)BNhu\FW>4'N*`f5fu7[l?$7Y9M\j3"Rhru/XBp'k)S;?lb/X"k4CiC-,4pccMlYUe^F]DR(,00jHQ*g>
%(Th)2/K6d=jl4i(`b33:(8b`g2/ARBTr^E$SnM0"b4s@2-KjbRX-asZHb5Y.goX>>nY9r[nI*o&/$<"OQkaP@8tC[5UQ%sa<F)qo
%WSk4oP?C2t)AO)Rg<(8IAh>e?XL4BtH.UbL(dH`u(r'`AZZ<^d'3Vm'>0[sLg<TJZERB)EY:eC(VH9G("`9=PQ6q"0MPdkp]cBgc
%K6p7[i-SZH_cNsSp6N=[q_O-K_ZuYLhnZF!eb$Sj\#ZKW?uK1Xr+K;Er1\>YW]kUMi7,W`h]H]Oo)2!-RoKRXGiG^!NU_Y'9g6=*
%D,Z/@hVKRd["H>WnY=?gnZ,\LWuJEh2q95B/8kq=D/YA?[(\+qdV428PcD_)a8"$da7rXbgm`McG.9L":+^Go+)Q"V?aRgmiM/R(
%c+A%T*.NIBaU*@>.ei)]WEnr:]/.X#FR3D)'E";A:7=5rkMEj5\'WeL)]P?bQ`P:6pnF=>;K]d(UrbZf)OR%^QK1p&\I"<cR#=Er
%&TBClnV$"21ZU84\n]C":UImE&%ND24li?A0_FS#65psfG4daD99aPo9G1/l;:6uVD7K3CMICXfP3PJRF!P9"08XBn/%<Yle6\eW
%o,J^l]>t]YSWC%h[GXgW5am_tD3%>bd!Bbe6SjEm"bP6`Y*>.Zo#/g?+`5MR((e]`E<F1X]Kf<3Ahi.;<4%U_NQt=O]Yh'Odje=G
%To@oVcH2A'LqQ0,qdPkN:*r46FY_o$G[c.Z7JgI+f%O.0o8FYH_@Rd$hJ6LK`?]$XD40HH.$_R;LcOT8T+`Iu`4d^ZCp5NfEGVR#
%S.OX.C/SdQLG&2k!ofq1HU^sM`tWVe,Ec#"1bJWm/bHtFCRK;rj23>,=,N6K6DTh88ps-:>U6.!jKD:&B2!kdG,:2$(N&3QS3#u"
%R5tgt`G]<B_`<iZ@mUb<UU,]q;A;uJ8E:cOK@6Y@BBF3[*DH2&F\MMlgY:_2/+^10\A^%;2n@_?/oGaE%3@F=h"n0iFhZ7.h!BD%
%\[pUnf,$A.?`L;Hq.4Tjp0K*G0!6.c7t5[IF6UU)BDCK[kDT(7#4Ud2kHFqh$eLaG?RN%_J\uKBSKITq@0Q#Vj$1=3G%#V@>T?6q
%rnNl\]0pAcG:^\B_L=\p$ed6pj=AT/?N!CpLCDlb)7bI:;i:`&ap*:Od6+eaUNd!nBaner'@FOe6A*:,Vfc8%"E?HhMgr/8m8SUE
%Cj&5je2P"A-n:bI)oW8#U^_rq=.W/9q#1LnQ8*\NY$+h7Jf#=*+HY;d%$Fk?Ye:8r']C&e.&ZQ]Jd79*q(WDTNJU2=\AePZ/([ME
%DbM#7$+c2F#2RF1GTE>PKPMQ5=.!bC@iXS8*C^t]Oj6([dueDC8<T!cN4r7:FF%6uX70sr"6o>mXlKu)<:YXB)`kJ^S94oP!ae%P
%Y42&SAY1=.F0fcJo\5c/4LFa<BfB5;^4dCsbGFX5=nE7&ek_;YHLq<LYM:3M5JbBRrOHW$GR'Nf9C#@4/p!l'\3g`)jFau<:pull
%-b=O!,eQ>V>(:EFi%nOeS,0_!f4OS:P*YDrjOIuC"0Ll8nV/(t?T.Gol\_Fg1<XN=jMZ)4Uk1Rj/QPZPLc7;F(..6-!()H1rH62G
%-2HYq;Ir&oB_`Z=-$BG?RG\dmX_8eIOf'7tL3%IfnCrSun"AViR1gr5R]P`7o)^gnZui/%n62-\oIG>C?Z75X8@\aaEM$1T(;2:J
%Xu0PBfbM(g[lkZ&;QVAD'-,j(&WdHAZjd)s3<q=GB];Z03f^nh&Dc$d5`'U/lVR7\asPo<WJd25W.k]d4HJ7qJQbk?^>p(m*(L=6
%"5WI(ck:ee(6gOs(/kVK.'msp?)#4XE]sb_-VCP+Ps48jCOj!X"tA-@Mo?RtC$hXf\'pB/Q%JkX3cWd((%[hTi#N!&<n,Dt7<ijf
%5b1rCQ)AbF1J^27a(A21)7C0b)q[9Jd&utlmQ*#7\XiHlr@t7TK6<,nM9oN8lfEC\iEh))(ef"B0;u*$p)B6K8MZH3>9W9Alg'RL
%RJJ(clBSOLW/cWq+_d:c:=O0:`hqt3.![-,Yf]VW_0F_UW/A#.e6B9:$DD=(2E*Bibn#50lb#q]FVCKMV5.RtIti^@W/Q(o'aGBg
%gZauMd"K34Tsbt;R:reJ3DiY;.Z3jt9>gRB@t0@>V%aHG$]DYlm>P"lip<Sin$23*;ShQL\o7YW\*lO"0pG(Y5k[GRpRFq^T%FL9
%VP##[bWK8TpW7kWBL%+6H5@$aT@";-%]2pWL_p2F34BoA.l__=G"=QrWf?kkB/MjjScj-hV9Z]8R7MT/;'&Ta-/N"daV7hIRufRP
%k5q*G)Ph6o.!t(W*%N&C\fY#q@RG4/)P[,(3qW$+6)6])%HuL/:s6uU:+O'gp##'DE,#dZ9Ik:(#<Y[pnu>UuR@WCmWN#FrLMsa@
%4niZBP*>eki\2XSNW%IUq9&'aG$=3m0WV*="+E-fi5adW4WE<nm9b6E2l"Y]b(#8r/gXhQAF70+k45s*E_:nkBG5r+[snA=mdA!t
%+MX@EfGaqB/!7a^,gf@mLAhi)n&K1>=.^)SJDkiNc@<C:>%6r',=fa;+Ur=Y-\M6D8!6TZN4,@Q:]KJ#b3hG]rcL6LGsoq"nF/i7
%l96#GACrh2_1%n>Eb5i!"cMQ2Z5nekNadYf:HV0_S:_3UaOW/WfOF!SBJ,^T>%!\c:@^m-%?#`UHTUuiV2\/Qg?>fZs8:!MkY\d+
%lrd$:ClDEBpOqgN'cj''_clPT%MnlJgEm->1"n6`3P9hZKC/#jT()[d4r^7#\u>qj(p5cCkj^mtZOcA;mu5\iFZ7^;TQ:NI[.s`K
%HUi)QnFM/-mLR)1p?B3XJ+N&G<)Fgh>h.m&J%:sDoWB806[tK<-rh#tbVHKM<l+\OV3ro>-V!C1UPb9THWAEuc1kTCm]$tbX_^Q<
%(Y*PudP"f3PWQE3W*6fHh"cF[adq5U"Z_@??i3i9od#ZB"a>mo"E(JOf7'6C^3B80T;F;D5%,nB/E<!dr>LUJQ%&/1]Qn`Za*l8&
%5E@YOb'`rZ"s<gNOh0H!b*K=-_q+:Q+'7F(I.7SXE)6/+Uc5@6!nq4F`2X,74g"1s@_nN7+h[<\2[Z0B[V.o".MR8p8&;Q2iJ/Ah
%qXFP[V-<Wsg9h$BA#@jqr$b*fSFIcUdK<YWW'sLu=a9H@]C4&8+kKK9P%#/NjFSkX.b+d6jXu-MJWr:&)cSdpC^gZNlNZoJ1uB;7
%9NLXGJ_im)FsOHQD#G-CDK'G"G"KdH<S@$3'U7VG?RNJ@.]\SA&tUoKS??NI9UNabg+/t!)miLnUs_O[7GeKqe/F%+$DVnL:bT16
%7Zd\p7rc3]I60s,LA)dV?tUAAfCRFjU:9H:Yr,dQ:N]38f[!sC1Q/BRXhqkANn(>tB>?#E0'<V'CbZOi48V@D.<PPe9.dEp<^->P
%:JscpC`ugB%"C,0oY[L(9K*(1L**2_B,Y:/k$u3m#8a_)-RX2Z.i[r)b$@R:nSSD8<+o1<YR!t?$i\2YFFCZe]5AR[k0K`+oe1mG
%<^'g0[E>CfW-c0&0:fB0=--4Uk)NarOXA<D_bA?<=qc8a#C'H<pU8R@\gml#*1Nnbg7:XA+kP6'n<[r&a?U;W=tnl];Tkn'3PuQ$
%]p%_/+J!a<)8bd)[<,S/(Oi)HL]83UU:1l^B\BY01!qU+a.2>fqm%K&_D-EA=KKp?.n[2Y![p,+-af#mV%6@7K/f&OG#HY_EC]%4
%3@Zul5L>N/Lcekc(Dh?\]Nma#,pu)`37]jh59GpYV($goLAWme;HN-b;PTZ6-/d.<8_\"8ngjUA1/lr0C>qhaoq]c-@Y7aY0-R33
%U>4O=8L<F]b`K.1Z/k\@Onpk>=S\c^?^B3dq<2m=SVj\9rV/\PBnK>qnN"S+&?gmP$X`g?20*p_Jrh;j(eAarAo/$J%4>7H_B=NK
%.N&A'5sl9%Ne6=N8Y9]s)uQ`6K5"2E-gJ^[H2F"!\<p86A@?/:mF\L44+A+-e*C\-KYAhj5'nr?'CUQ<Y5bD^Q%-XMr"K*OHi^OA
%Oc@o=)Np)"eXDY\FnMTNA7K$GYW:AR/Zh=l==laR;ALG?X&8\n;>I7iq;)_VR5K@L.Z^q8X&8\r^)E9O)O5g;7V.m4+@4t#f$EbP
%$T^-uZU41i?oIL2[[J[@_6j>*$VsLA*Bl8;)gJ@]BQ-/9GIDd+G4+;9n8,nrd*IZsa*MBV,@<P@V2'o#^U.LBOC'Oob[6<bHImrH
%02k98iVqMdW4Uo8ke[*sRImORqGem@.[+1Ge6ce8+,n]67@@-3htZooO@XkNVcQ*eOF")L5H*@`Y7iJ0]&OkrY'W<SUtid>EMYMk
%J_$7;3!d7JS^R;p=l7>tO*BOH<;?P0lrU[=^C[kH@e*n)-pLucqs$[3p>&e7b--8Y5:'3WoqVF>r$_$4A0p%#cDT$8<#R\Vl_V,,
%e#RM??fkF(4:A9(V/\)7R;_3/E9<#Se\C\$`kR[\pfE6nT,-bhl;7:h6gCibPs6-aIs%^f&KE8bd2IGq>00s*9?rf%oU:+QFlo-F
%--;;$>V'5PO#1N6CsZ+)=-!lcDu\2!qYU;UhYjA0s5s%@s7l<bDnbJOS,`?NJ,T*@q#8m[HiNL-J,NIKqX;2ue$fk&rr)<5d^T8-
%s7GfahgbOlID3IEq"Og_]Di?DKgpVPDuS3MrTCrpX8a7U,5n5~>
%AI9_PrivateDataEnd
