%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1407.i043.030.S.m004.c10.modern concepts 2x2 set 1.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: IvAN
%%CreationDate: 9/13/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">blank template 450x450 RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-09-13T09:25:56+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-09-13T09:25:56+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-09-13T09:25:56+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AN87J86dirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirOc+cX3l2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsGz6OfBk&#xA;78q6TBfXUklwOcVuFPp9izVpX2+HOZ9p+1MmlxRjj2nO9+4Dn8d3o/Zzs2GpySlPeMK27yeX3MiS&#xA;zsb2W9s5rOJI7cqkbooVviXlUEdKVzkJ6zPpoYs0MszLICSCbGxr4vVR0uHUSy4Z44iMCACBR3F/&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:4cd527c8-6f12-8246-a1ad-269fb1779de7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4cd527c8-6f12-8246-a1ad-269fb1779de7</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:72ae077d-cd5b-e444-90a2-b68126f17d53</stRef:instanceID>
            <stRef:documentID>xmp.did:72ae077d-cd5b-e444-90a2-b68126f17d53</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9E1AD6DE5F12E411B28E9E53CB17E717</stEvt:instanceID>
                  <stEvt:when>2014-07-23T17:13:20+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A11AD6DE5F12E411B28E9E53CB17E717</stEvt:instanceID>
                  <stEvt:when>2014-07-23T22:22:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d5e6f421-ad93-f145-974a-05a3d3ef9de5</stEvt:instanceID>
                  <stEvt:when>2014-07-23T23:03:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:72ae077d-cd5b-e444-90a2-b68126f17d53</stEvt:instanceID>
                  <stEvt:when>2014-07-23T23:05:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4cd527c8-6f12-8246-a1ad-269fb1779de7</stEvt:instanceID>
                  <stEvt:when>2014-09-13T09:25:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
225 450 mo
0 450 li
0 225 li
225 225 li
225 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.945098 .403922 .160784 rgb
f
111.72 415.417 mo
70.9051 415.417 37.6543 383.03 36.2681 342.552 cv
36.6732 342.615 37.0824 342.667 37.4943 342.708 cv
38.9611 382.437 71.6321 414.197 111.72 414.197 cv
121.723 414.197 131.263 412.22 139.973 408.635 cv
140.199 408.985 140.434 409.328 140.678 409.664 cv
131.761 413.37 121.979 415.417 111.72 415.417 cv
175.435 380.438 mo
175.145 380.14 174.848 379.85 174.542 379.568 cv
181.799 368.095 185.998 354.499 185.998 339.92 cv
185.998 298.898 152.742 265.642 111.72 265.642 cv
85.3403 265.642 62.1711 279.396 48.993 300.123 cv
48.6186 299.952 48.2392 299.791 47.854 299.641 cv
61.2293 278.477 84.8333 264.423 111.72 264.423 cv
153.416 264.423 187.217 298.223 187.217 339.92 cv
187.217 354.83 182.895 368.731 175.435 380.438 cv
.972549 .701961 .580392 rgb
f
79.8936 441.752 mo
77.4863 431.832 li
75.0781 441.752 li
73.9063 441.752 li
71.4824 430.756 li
72.4619 430.756 li
74.5488 440.869 li
76.9561 430.756 li
78.0322 430.756 li
80.4883 440.869 li
82.5908 430.756 li
83.5059 430.756 li
81.0977 441.752 li
79.8936 441.752 li
cp
1 .878431 .572549 rgb
f
90.2676 436.953 mo
90.2676 435.123 89.5293 433.951 87.9395 433.951 cv
86.6396 433.951 85.6445 434.914 85.5479 437.193 cv
90.2676 437.193 li
90.2676 436.953 li
cp
91.1504 437.916 mo
85.5479 437.916 li
85.6602 440.195 86.7197 441.143 88.1641 441.143 cv
89.0791 441.143 89.6895 440.853 90.4277 440.309 cv
90.8613 440.902 li
90.0742 441.543 89.2236 441.93 88.1162 441.93 cv
85.9014 441.93 84.5527 440.324 84.5527 437.627 cv
84.5527 434.947 85.8525 433.18 87.9072 433.18 cv
90.0908 433.18 91.1826 434.77 91.1826 437.242 cv
91.1826 437.498 91.166 437.756 91.1504 437.916 cv
cp
f
99.3877 437.516 mo
99.3877 435.043 98.5527 433.951 97.124 433.951 cv
96.0322 433.951 95.3584 434.594 94.7969 435.397 cv
94.7969 439.81 li
95.3105 440.598 96.0488 441.158 97.0117 441.158 cv
98.5049 441.158 99.3877 439.955 99.3877 437.516 cv
cp
100.383 437.516 mo
100.383 440.211 99.2109 441.93 97.1885 441.93 cv
96.1289 441.93 95.3105 441.398 94.7803 440.693 cv
94.6846 441.752 li
93.8652 441.752 li
93.8652 429.938 li
94.7969 429.826 li
94.7969 434.529 li
95.3906 433.727 96.209 433.18 97.3164 433.18 cv
99.2432 433.18 100.383 434.721 100.383 437.516 cv
cp
f
108.718 440.949 mo
110.179 440.949 li
112.072 440.949 114.047 440.115 114.047 436.166 cv
114.047 432.137 111.992 431.559 110.066 431.559 cv
108.718 431.559 li
108.718 440.949 li
cp
109.938 430.756 mo
112.49 430.756 115.059 431.639 115.059 436.166 cv
115.059 440.725 112.378 441.752 110.114 441.752 cv
107.755 441.752 li
107.755 430.756 li
109.938 430.756 li
cp
f
122.862 436.953 mo
122.862 435.123 122.124 433.951 120.534 433.951 cv
119.234 433.951 118.239 434.914 118.143 437.193 cv
122.862 437.193 li
122.862 436.953 li
cp
123.745 437.916 mo
118.143 437.916 li
118.255 440.195 119.314 441.143 120.759 441.143 cv
121.674 441.143 122.284 440.853 123.022 440.309 cv
123.456 440.902 li
122.67 441.543 121.818 441.93 120.711 441.93 cv
118.496 441.93 117.147 440.324 117.147 437.627 cv
117.147 434.947 118.447 433.18 120.502 433.18 cv
122.685 433.18 123.777 434.77 123.777 437.242 cv
123.777 437.498 123.761 437.756 123.745 437.916 cv
cp
f
131.195 434.111 mo
130.746 434.738 li
130.023 434.207 129.397 433.951 128.547 433.951 cv
127.439 433.951 126.685 434.496 126.685 435.363 cv
126.685 436.199 127.215 436.551 128.724 436.953 cv
130.554 437.434 131.421 438.06 131.421 439.488 cv
131.421 441.047 130.056 441.93 128.387 441.93 cv
127.022 441.93 126.107 441.463 125.385 440.853 cv
125.914 440.244 li
126.604 440.822 127.343 441.143 128.37 441.143 cv
129.591 441.143 130.441 440.565 130.441 439.553 cv
130.441 438.525 129.976 438.156 128.227 437.676 cv
126.444 437.209 125.722 436.551 125.722 435.363 cv
125.722 434.096 126.926 433.18 128.515 433.18 cv
129.591 433.18 130.409 433.502 131.195 434.111 cv
cp
f
133.91 441.752 mo
133.91 433.357 li
134.842 433.357 li
134.842 441.752 li
133.91 441.752 li
cp
135.066 430.34 mo
135.066 430.709 134.793 431.014 134.36 431.014 cv
133.942 431.014 133.67 430.709 133.67 430.34 cv
133.67 429.971 133.942 429.666 134.36 429.666 cv
134.793 429.666 135.066 429.971 135.066 430.34 cv
cp
f
138.406 436.022 mo
138.406 437.371 139.24 438.141 140.525 438.141 cv
141.89 438.141 142.644 437.371 142.644 436.037 cv
142.644 434.721 141.953 433.902 140.525 433.902 cv
139.097 433.902 138.406 434.785 138.406 436.022 cv
cp
144.49 433.533 mo
143.912 433.693 143.174 433.758 142.162 433.775 cv
143.045 434.191 143.591 434.898 143.591 436.055 cv
143.591 437.691 142.451 438.815 140.557 438.815 cv
140.155 438.815 139.786 438.768 139.466 438.654 cv
139.064 438.879 138.823 439.232 138.823 439.617 cv
138.823 440.115 139.145 440.484 140.155 440.484 cv
141.52 440.484 li
143.189 440.484 144.217 441.383 144.217 442.635 cv
144.217 444.145 143.029 445.043 140.573 445.043 cv
138.037 445.043 137.073 444.305 137.073 442.635 cv
137.94 442.635 li
137.957 443.807 138.566 444.273 140.573 444.273 cv
142.531 444.273 143.27 443.68 143.27 442.684 cv
143.27 441.785 142.563 441.287 141.376 441.287 cv
140.012 441.287 li
138.614 441.287 137.94 440.613 137.94 439.81 cv
137.94 439.248 138.277 438.75 138.855 438.381 cv
137.893 437.885 137.443 437.145 137.443 436.022 cv
137.443 434.336 138.679 433.18 140.525 433.18 cv
142.772 433.213 143.382 432.973 144.201 432.635 cv
144.49 433.533 li
cp
f
152.373 435.748 mo
152.373 441.752 li
151.442 441.752 li
151.442 435.877 li
151.442 434.496 150.881 433.935 149.854 433.935 cv
148.714 433.935 147.943 434.641 147.253 435.668 cv
147.253 441.752 li
146.321 441.752 li
146.321 433.357 li
147.124 433.357 li
147.221 434.785 li
147.879 433.822 148.81 433.18 150.029 433.18 cv
151.555 433.18 152.373 434.127 152.373 435.748 cv
cp
f
76.8567 394.529 mo
76.8567 404.14 69.0665 411.93 59.4552 411.93 cv
49.8457 411.93 42.0547 404.14 42.0547 394.529 cv
42.0547 384.919 49.8457 377.128 59.4552 377.128 cv
69.0665 377.128 76.8567 384.919 76.8567 394.529 cv
cp
.239216 .678431 .87451 rgb
f
70.6503 387.377 mo
66.6152 383.342 li
51.3135 398.639 li
50.8033 399.663 li
54.3273 403.185 li
55.3503 402.674 li
70.6503 387.377 li
cp
.854902 .639216 .290196 rgb
f
55.3503 402.674 mo
70.6503 387.377 li
69.8654 386.592 li
53.7986 402.659 li
55.3503 402.674 li
cp
.172549 .341176 .470588 rgb
f
69.5833 386.309 mo
67.6787 384.405 li
51.6128 400.472 li
53.5178 402.378 li
69.5833 386.309 li
cp
f
66.6152 383.342 mo
51.3152 398.638 li
51.332 400.194 li
67.3997 384.126 li
66.6152 383.342 li
cp
f
48.1872 405.521 mo
48.2334 405.755 li
48.4672 405.802 li
50.4486 404.971 li
49.0204 403.541 li
48.1872 405.521 li
cp
f
53.7972 402.658 mo
53.7972 402.658 54.1888 401.514 53.3314 400.658 cv
52.4754 399.801 51.3337 400.193 51.3337 400.193 cv
51.3337 400.196 li
51.3192 400.178 li
51.4238 399.959 51.7876 399.112 51.3152 398.638 cv
50.8033 399.663 li
48.984 403.625 li
50.3647 405.003 li
54.3273 403.185 li
55.3503 402.676 li
54.877 402.203 54.0311 402.563 53.8122 402.672 cv
53.7968 402.656 li
53.7972 402.658 li
cp
.776471 .611765 .427451 rgb
f
70.6503 387.377 mo
66.6152 383.342 li
66.6152 383.342 67.9797 382.76 69.6039 384.384 cv
71.1943 385.975 70.6503 387.377 70.6503 387.377 cv
cp
.854902 .639216 .290196 rgb
f
202.677 320.466 mo
202.677 331.195 193.98 339.892 183.251 339.892 cv
172.522 339.892 163.824 331.195 163.824 320.466 cv
163.824 309.737 172.522 301.04 183.251 301.04 cv
193.98 301.04 202.677 309.737 202.677 320.466 cv
cp
.239216 .678431 .87451 rgb
f
198.383 320.466 mo
198.383 328.823 191.605 335.598 183.25 335.598 cv
174.892 335.598 168.117 328.823 168.117 320.466 cv
168.117 312.108 174.892 305.335 183.25 305.335 cv
191.605 305.335 198.383 312.108 198.383 320.466 cv
cp
1 1 1 rgb
f
182.401 321.314 mo
168.13 321.314 li
168.274 323.907 169.061 326.319 170.346 328.403 cv
174.275 327.168 178.332 326.513 182.401 326.432 cv
182.401 321.314 li
cp
.941176 .592157 .137255 rgb
f
182.401 314.499 mo
178.332 314.419 174.273 313.764 170.346 312.528 cv
169.061 314.612 168.274 317.027 168.13 319.62 cv
182.401 319.62 li
182.401 314.499 li
cp
.172549 .341176 .470588 rgb
f
182.401 305.346 mo
177.924 305.593 173.969 307.776 171.355 311.078 cv
174.961 312.163 178.677 312.727 182.401 312.805 cv
182.401 305.346 li
cp
.705882 .803922 .168627 rgb
f
184.096 326.432 mo
188.167 326.513 192.226 327.168 196.151 328.403 cv
197.436 326.319 198.227 323.907 198.371 321.314 cv
184.096 321.314 li
184.096 326.432 li
cp
.960784 .823529 .172549 rgb
f
184.096 319.62 mo
198.371 319.62 li
198.227 317.027 197.436 314.612 196.151 312.53 cv
192.226 313.764 188.167 314.419 184.096 314.499 cv
184.096 319.62 li
cp
.482353 .666667 .784314 rgb
f
195.14 311.078 mo
192.53 307.776 188.575 305.593 184.096 305.346 cv
184.096 312.805 li
187.822 312.727 191.539 312.163 195.14 311.078 cv
cp
.376471 .686275 .27451 rgb
f
171.357 329.856 mo
173.969 333.159 177.924 335.339 182.401 335.589 cv
182.401 328.127 li
178.677 328.205 174.961 328.771 171.357 329.856 cv
cp
.839216 .117647 .164706 rgb
f
184.096 335.589 mo
188.575 335.339 192.53 333.159 195.14 329.856 cv
191.539 328.771 187.822 328.205 184.096 328.127 cv
184.096 335.589 li
cp
.945098 .403922 .160784 rgb
f
62.073 320.466 mo
62.073 332.81 52.0663 342.817 39.7221 342.817 cv
27.3777 342.817 17.3706 332.81 17.3706 320.466 cv
17.3706 308.122 27.3777 298.115 39.7221 298.115 cv
52.0663 298.115 62.073 308.122 62.073 320.466 cv
.239216 .678431 .87451 rgb
f
37.454 317.181 mo
37.454 332.047 li
25.7285 332.047 li
37.454 317.181 li
.960784 .823529 .172549 rgb
f
54.2416 333.232 mo
25.2023 333.232 li
24.7021 333.232 24.2963 332.826 24.2963 332.326 cv
24.2963 308.607 li
24.2963 308.107 24.7021 307.701 25.2023 307.701 cv
54.2416 307.701 li
54.7421 307.701 55.1477 308.107 55.1477 308.607 cv
55.1477 332.326 li
55.1477 332.826 54.7421 333.232 54.2416 333.232 cv
37.454 317.181 mo
25.7285 332.047 li
37.454 332.047 li
37.454 317.181 li
.545098 .807843 .92549 rgb
f
37.454 332.047 mo
25.7285 332.047 li
37.454 317.181 li
37.454 332.047 li
.976471 .894118 .501961 rgb
f
53.7155 308.886 mo
25.7285 308.886 li
25.7285 332.047 li
53.7155 332.047 li
53.7155 308.886 li
cp
.482353 .666667 .784314 rgb
f
25.7285 332.047 mo
37.454 317.181 li
37.454 332.047 li
25.7285 332.047 li
cp
.960784 .823529 .172549 rgb
f
49.1791 332.047 mo
37.454 317.181 li
37.454 332.047 li
49.1791 332.047 li
cp
.941176 .592157 .137255 rgb
f
52.0399 315.924 mo
52.0399 318.393 50.0417 320.392 47.5724 320.392 cv
45.1071 320.392 43.1067 318.393 43.1067 315.924 cv
43.1067 313.457 45.1071 311.459 47.5724 311.459 cv
50.0417 311.459 52.0399 313.457 52.0399 315.924 cv
cp
1 1 1 rgb
f
164.202 363.867 mo
154.011 363.867 li
164.202 350.946 li
164.202 363.867 li
.952941 .494118 .290196 rgb
f
174.393 363.867 mo
164.202 363.867 li
164.202 350.946 li
174.393 363.867 li
.972549 .701961 .580392 rgb
f
172.996 353.737 mo
170.854 353.737 169.115 351.999 169.115 349.853 cv
169.115 347.71 170.854 345.973 172.996 345.973 cv
175.143 345.973 176.879 347.71 176.879 349.853 cv
176.879 351.999 175.143 353.737 172.996 353.737 cv
f
96.8962 302.326 mo
95.9292 302.326 94.9529 302.139 94.1154 301.636 cv
92.839 300.871 92.2162 299.584 92.3506 298.399 cv
92.419 298.425 li
93.5387 296.5 li
93.512 296.477 li
93.9671 296.175 94.5115 296.017 95.0752 296.017 cv
95.706 296.017 96.361 296.215 96.9424 296.628 cv
98.7195 297.896 98.469 299.027 99.3119 300.141 cv
99.7257 300.689 100.249 300.805 100.695 300.805 cv
100.861 300.805 101.015 300.789 101.15 300.773 cv
101.285 300.757 101.4 300.741 101.485 300.741 cv
101.574 300.741 101.63 300.759 101.644 300.812 cv
101.723 301.13 99.3401 302.326 96.8962 302.326 cv
.968627 .643137 .498039 rgb
f
92.3506 298.399 mo
89.3526 297.252 li
91.0752 294.385 li
91.0752 294.385 li
93.512 296.477 li
93.1976 296.686 92.9257 296.964 92.7196 297.306 cv
92.5158 297.646 92.3939 298.017 92.3506 298.399 cv
.952941 .498039 .294118 rgb
f
92.419 298.425 mo
92.3506 298.399 li
92.3939 298.017 92.5158 297.646 92.7196 297.306 cv
92.9257 296.964 93.1976 296.686 93.512 296.477 cv
93.5387 296.5 li
92.419 298.425 li
.968627 .643137 .498039 rgb
f
89.3526 297.252 mo
89.3526 297.252 83.8681 295.343 78.5762 292.166 cv
74.4375 289.681 71.4861 286.796 70.3062 285.129 cv
69.9739 284.658 70.3102 283.865 70.3102 283.865 cv
70.3102 283.865 70.796 283.266 71.3329 283.266 cv
71.3623 283.266 71.3919 283.268 71.4215 283.272 cv
73.4496 283.529 77.3818 284.777 81.5206 287.264 cv
86.8125 290.44 91.0752 294.385 91.0752 294.385 cv
91.0752 294.385 li
90.2134 295.818 li
89.3526 297.252 li
f
136.891 270.24 mo
136.891 284.2 125.575 295.517 111.615 295.517 cv
97.6556 295.517 86.3387 284.2 86.3387 270.24 cv
86.3387 256.28 97.6556 244.964 111.615 244.964 cv
125.575 244.964 136.891 256.28 136.891 270.24 cv
cp
.239216 .678431 .87451 rgb
f
111.613 260.539 mo
101.509 260.539 93.8262 268.517 93.8262 270.241 cv
93.8262 271.965 101.509 279.943 111.613 279.943 cv
121.965 279.943 129.403 271.965 129.403 270.241 cv
129.403 268.517 121.965 260.539 111.613 260.539 cv
cp
.172549 .341176 .470588 rgb
f
112.089 258.986 mo
111.142 258.986 li
111.142 254.636 li
112.089 254.636 li
112.089 258.986 li
cp
f
107.096 259.471 mo
106.179 259.709 li
105.093 255.495 li
106.01 255.258 li
107.096 259.471 li
cp
f
101.857 261.005 mo
100.994 261.399 li
99.1989 257.44 li
100.061 257.047 li
101.857 261.005 li
cp
f
97.017 263.583 mo
96.2506 264.139 li
93.7049 260.614 li
94.4713 260.059 li
97.017 263.583 li
cp
f
116.133 259.471 mo
117.05 259.709 li
118.139 255.495 li
117.217 255.258 li
116.133 259.471 li
cp
f
121.371 261.005 mo
122.233 261.399 li
124.031 257.44 li
123.171 257.047 li
121.371 261.005 li
cp
f
126.212 263.583 mo
126.979 264.139 li
129.524 260.614 li
128.758 260.059 li
126.212 263.583 li
cp
f
112.089 281.499 mo
111.142 281.499 li
111.142 285.847 li
112.089 285.847 li
112.089 281.499 li
cp
f
107.096 281.014 mo
106.179 280.776 li
105.093 284.986 li
106.01 285.222 li
107.096 281.014 li
cp
f
101.857 279.476 mo
100.994 279.085 li
99.1989 283.045 li
100.061 283.438 li
101.857 279.476 li
cp
f
97.017 276.899 mo
96.2506 276.346 li
93.7049 279.87 li
94.4713 280.424 li
97.017 276.899 li
cp
f
116.133 281.014 mo
117.05 280.776 li
118.139 284.986 li
117.217 285.222 li
116.133 281.014 li
cp
f
121.371 279.476 mo
122.233 279.085 li
124.031 283.045 li
123.171 283.438 li
121.371 279.476 li
cp
f
126.212 276.899 mo
126.979 276.346 li
129.524 279.87 li
128.758 280.424 li
126.212 276.899 li
cp
f
111.152 270.703 mo
103.352 270.703 li
103.43 272.121 103.865 273.437 104.565 274.578 cv
106.71 273.902 108.928 273.546 111.152 273.5 cv
111.152 270.703 li
cp
1 1 1 rgb
f
111.152 266.982 mo
108.928 266.936 106.71 266.577 104.565 265.903 cv
103.865 267.039 103.43 268.361 103.352 269.779 cv
111.152 269.779 li
111.152 266.982 li
cp
f
111.152 261.98 mo
108.704 262.113 106.543 263.306 105.116 265.111 cv
107.087 265.703 109.114 266.013 111.152 266.053 cv
111.152 261.98 li
cp
f
112.078 273.5 mo
114.299 273.546 116.517 273.902 118.663 274.578 cv
119.367 273.437 119.799 272.121 119.877 270.703 cv
112.078 270.703 li
112.078 273.5 li
cp
f
112.078 269.779 mo
119.877 269.779 li
119.799 268.361 119.367 267.039 118.663 265.903 cv
116.517 266.577 114.299 266.936 112.078 266.982 cv
112.078 269.779 li
cp
f
118.111 265.111 mo
116.684 263.306 114.523 262.113 112.078 261.98 cv
112.078 266.053 li
114.113 266.013 116.145 265.703 118.111 265.111 cv
cp
f
105.116 275.368 mo
106.543 277.176 108.704 278.367 111.152 278.504 cv
111.152 274.426 li
109.114 274.47 107.087 274.776 105.116 275.368 cv
cp
f
112.078 278.504 mo
114.523 278.367 116.684 277.176 118.111 275.368 cv
116.145 274.776 114.113 274.47 112.078 274.426 cv
112.078 278.504 li
cp
f
33.3253 256.686 mo
35.5701 256.736 37.8064 257.077 39.9786 257.731 cv
38.4032 259.72 36.0222 261.034 33.3253 261.184 cv
33.3253 256.686 li
cp
33.3253 252.585 mo
41.9228 252.585 li
41.8375 254.146 41.3603 255.598 40.5843 256.855 cv
38.22 256.109 35.7748 255.716 33.3253 255.669 cv
33.3253 252.585 li
cp
33.3253 248.477 mo
35.7748 248.43 38.22 248.035 40.5843 247.294 cv
41.3603 248.548 41.8375 250.001 41.9228 251.563 cv
33.3253 251.563 li
33.3253 248.477 li
cp
33.3253 242.964 mo
36.0222 243.113 38.4032 244.428 39.9786 246.418 cv
37.8064 247.071 35.5701 247.411 33.3253 247.457 cv
33.3253 242.964 li
cp
32.3045 247.457 mo
30.0597 247.411 27.8212 247.071 25.6512 246.418 cv
27.2222 244.428 29.6032 243.113 32.3045 242.964 cv
32.3045 247.457 li
cp
32.3045 251.563 mo
23.7048 251.563 li
23.7923 250.001 24.2673 248.548 25.0412 247.292 cv
27.4076 248.035 29.8506 248.43 32.3045 248.477 cv
32.3045 251.563 li
cp
32.3045 255.669 mo
29.8506 255.716 27.4076 256.109 25.0412 256.855 cv
24.2673 255.598 23.7923 254.146 23.7048 252.585 cv
32.3045 252.585 li
32.3045 255.669 li
cp
32.3045 261.184 mo
29.6032 261.034 27.2222 259.72 25.6512 257.731 cv
27.8212 257.077 30.0597 256.736 32.3045 256.686 cv
32.3045 261.184 li
cp
36.9794 266.669 mo
36.9794 265.201 37.8042 263.178 39.6654 261.724 cv
42.5029 259.504 44.4747 256.178 44.4747 252.299 cv
44.4747 245.858 39.254 240.638 32.8138 240.638 cv
26.3715 240.638 21.1529 245.858 21.1529 252.299 cv
21.1529 256.178 23.1248 259.504 25.9623 261.724 cv
27.8234 263.178 28.6504 265.201 28.6504 266.669 cv
20.8396 268.534 15.5292 272.238 15.9256 272.998 cv
18.5883 278.048 26.9555 280.215 32.8138 280.215 cv
38.6722 280.215 47.0393 278.048 49.702 272.998 cv
50.0984 272.238 44.7881 268.534 36.9794 266.669 cv
cp
.239216 .678431 .87451 rgb
f
152.3 361.845 mo
72.2468 361.845 li
72.2468 308.919 li
72.2468 308.331 72.7241 307.854 73.3125 307.854 cv
151.235 307.854 li
151.823 307.854 152.3 308.331 152.3 308.919 cv
152.3 361.845 li
0 .215686 .266667 rgb
f
152.3 361.849 mo
152.3 366.469 148.554 370.215 143.934 370.215 cv
80.61 370.215 li
75.9892 370.215 72.2433 366.469 72.2433 361.849 cv
72.2433 361.845 li
152.3 361.845 li
152.3 361.849 li
cp
f
122.162 370.209 mo
102.392 370.209 li
102.392 377.425 li
122.162 377.425 li
122.162 370.209 li
cp
0 .137255 .184314 rgb
f
127.888 378.488 mo
127.888 377.9 127.41 377.423 126.822 377.423 cv
97.7268 377.423 li
97.1384 377.423 96.6611 377.9 96.6611 378.488 cv
96.6611 379.691 li
127.888 379.691 li
127.888 378.488 li
cp
0 .215686 .266667 rgb
f
151.291 361.845 mo
73.3182 361.845 li
73.3182 308.917 li
151.291 308.917 li
151.291 361.845 li
.482353 .666667 .784314 rgb
f
148.458 360.509 mo
76.085 360.509 li
76.085 318.965 li
148.458 318.965 li
148.458 360.509 li
1 1 1 rgb
f
82.091 314.156 mo
82.091 315.766 80.7849 317.074 79.1713 317.074 cv
77.5629 317.074 76.255 315.766 76.255 314.156 cv
76.255 312.543 77.5629 311.237 79.1713 311.237 cv
80.7849 311.237 82.091 312.543 82.091 314.156 cv
cp
f
90.2719 314.156 mo
90.2719 315.766 88.9658 317.074 87.3521 317.074 cv
85.7385 317.074 84.4341 315.766 84.4341 314.156 cv
84.4341 312.543 85.7385 311.237 87.3521 311.237 cv
88.9658 311.237 90.2719 312.543 90.2719 314.156 cv
cp
f
98.4492 314.156 mo
98.4492 315.766 97.1396 317.074 95.5312 317.074 cv
93.9175 317.074 92.6151 315.766 92.6151 314.156 cv
92.6151 312.543 93.9175 311.237 95.5312 311.237 cv
97.1396 311.237 98.4492 312.543 98.4492 314.156 cv
cp
f
88.1946 324.971 mo
83.8664 333.2 li
127.878 356.369 li
129.717 356.669 li
133.494 349.485 li
132.204 348.139 li
88.1946 324.971 li
.854902 .639216 .290196 rgb
f
132.204 348.139 mo
88.1946 324.971 li
87.3521 326.572 li
132.931 350.561 li
132.204 348.139 li
cp
.172549 .341176 .470588 rgb
f
87.0494 327.147 mo
85.0076 331.03 li
130.585 355.018 li
132.629 351.134 li
87.0494 327.147 li
cp
f
83.8664 333.2 mo
127.874 356.368 li
130.288 355.59 li
84.7071 331.6 li
83.8664 333.2 li
f
140.095 357.908 mo
140.236 357.922 140.371 357.849 140.437 357.724 cv
140.504 357.599 140.487 357.446 140.396 357.337 cv
138.145 354.655 li
136.612 357.568 li
140.095 357.908 li
cp
f
132.93 350.562 mo
132.93 350.562 130.962 350.507 130.042 352.254 cv
129.124 354 130.285 355.587 130.285 355.587 cv
130.289 355.586 li
130.27 355.616 li
129.877 355.559 128.386 355.403 127.874 356.368 cv
129.717 356.669 li
136.76 357.584 li
138.237 354.772 li
133.494 349.485 li
132.209 348.138 li
131.701 349.104 132.67 350.244 132.945 350.534 cv
132.927 350.565 li
132.93 350.562 li
cp
.776471 .611765 .427451 rgb
f
88.1946 324.971 mo
83.8664 333.2 li
83.8664 333.2 82.302 331.358 84.0439 328.045 cv
85.7503 324.801 88.1946 324.971 88.1946 324.971 cv
cp
.854902 .639216 .290196 rgb
f
84.344 355.447 mo
84.1489 356.223 92.3373 359.987 97.4995 356.888 cv
100.447 355.117 101.398 351.756 99.9376 349.319 cv
98.4716 346.887 95.109 346.319 92.5584 348.137 cv
89.4545 350.347 89.8896 352.327 88.4169 354.274 cv
87.4268 355.584 86.077 355.481 85.2065 355.378 cv
84.7247 355.321 84.3897 355.264 84.344 355.447 cv
.215686 .411765 .580392 rgb
f
100.582 351.23 mo
100.507 350.562 100.294 349.913 99.9376 349.319 cv
99.5769 348.72 99.1012 348.235 98.5512 347.87 cv
102.812 344.212 li
105.821 349.226 li
100.582 351.23 li
1 1 1 rgb
f
100.464 351.275 mo
98.5068 347.908 li
98.5512 347.87 li
99.1012 348.235 99.5769 348.72 99.9376 349.319 cv
100.294 349.913 100.507 350.562 100.582 351.23 cv
100.464 351.275 li
.45098 .588235 .705882 rgb
f
119.506 331.771 mo
126.739 327.427 133.611 325.246 137.154 324.796 cv
138.151 324.67 139.096 325.833 139.096 325.833 cv
139.096 325.833 139.682 327.219 139.102 328.039 cv
137.04 330.954 131.882 335.995 124.651 340.336 cv
115.405 345.891 105.821 349.226 105.821 349.226 cv
104.316 346.718 li
102.812 344.212 li
102.812 344.212 110.26 337.322 119.506 331.771 cv
cp
.941176 .592157 .137255 rgb
f
106.934 392.304 mo
106.365 392.304 li
106.365 389.689 li
106.934 389.689 li
106.934 392.304 li
.972549 .701961 .580392 rgb
f
103.381 392.739 mo
102.728 390.206 li
103.279 390.063 li
103.932 392.596 li
103.381 392.739 li
f
100.264 393.754 mo
99.1849 391.374 li
99.7035 391.138 li
100.783 393.518 li
100.264 393.754 li
f
97.4125 395.402 mo
95.8824 393.283 li
96.3429 392.949 li
97.8731 395.068 li
97.4125 395.402 li
f
109.916 392.739 mo
109.365 392.596 li
110.016 390.063 li
110.571 390.206 li
109.916 392.739 li
f
113.032 393.754 mo
112.513 393.518 li
113.595 391.138 li
114.112 391.374 li
113.032 393.754 li
f
115.885 395.402 mo
115.424 395.068 li
116.954 392.949 li
117.415 393.283 li
115.885 395.402 li
f
106.934 408.451 mo
106.365 408.451 li
106.365 405.838 li
106.934 405.838 li
106.934 408.451 li
f
103.279 408.075 mo
102.728 407.934 li
103.381 405.403 li
103.932 405.546 li
103.279 408.075 li
f
99.7035 407.003 mo
99.1849 406.767 li
100.264 404.387 li
100.783 404.622 li
99.7035 407.003 li
f
96.3429 405.191 mo
95.8824 404.859 li
97.4125 402.74 li
97.8731 403.073 li
96.3429 405.191 li
f
110.016 408.075 mo
109.365 405.546 li
109.916 405.403 li
110.571 407.934 li
110.016 408.075 li
f
113.595 407.003 mo
112.513 404.622 li
113.032 404.387 li
114.112 406.767 li
113.595 407.003 li
f
116.954 405.191 mo
115.424 403.073 li
115.885 402.74 li
117.415 404.859 li
116.954 405.191 li
f
106.648 404.903 mo
100.574 404.903 95.9553 400.106 95.9553 399.07 cv
95.9553 398.033 100.574 393.238 106.648 393.238 cv
112.871 393.238 117.342 398.033 117.342 399.07 cv
117.342 400.106 112.871 404.903 106.648 404.903 cv
106.649 394.369 mo
104.052 394.369 101.947 396.474 101.947 399.07 cv
101.947 401.666 104.052 403.771 106.649 403.771 cv
109.245 403.771 111.35 401.666 111.35 399.07 cv
111.35 396.474 109.245 394.369 106.649 394.369 cv
f
106.649 401.641 mo
105.229 401.641 104.078 400.489 104.078 399.07 cv
104.078 397.651 105.229 396.499 106.649 396.499 cv
108.068 396.499 109.219 397.651 109.219 399.07 cv
109.219 400.489 108.068 401.641 106.649 401.641 cv
.952941 .494118 .290196 rgb
f
189.618 292.036 mo
184.686 292.036 180.688 288.038 180.688 283.106 cv
180.688 278.175 184.686 274.177 189.618 274.177 cv
194.55 274.177 198.548 278.175 198.548 283.106 cv
198.548 288.038 194.55 292.036 189.618 292.036 cv
.956863 .521569 .329412 rgb
f
198.548 422.885 mo
198.548 427.816 194.55 431.815 189.618 431.815 cv
184.686 431.815 180.688 427.816 180.688 422.885 cv
180.688 417.953 184.686 413.955 189.618 413.955 cv
194.55 413.955 198.548 417.953 198.548 422.885 cv
cp
.239216 .678431 .87451 rgb
f
61.4161 273.09 mo
56.4841 273.09 52.4864 269.092 52.4864 264.161 cv
52.4864 259.229 56.4841 255.231 61.4161 255.231 cv
66.3476 255.231 70.3457 259.229 70.3457 264.161 cv
70.3457 269.092 66.3476 273.09 61.4161 273.09 cv
.952941 .494118 .290196 rgb
f
26.6224 387.572 mo
20.0582 387.572 14.7374 382.25 14.7374 375.687 cv
14.7374 369.123 20.0582 363.801 26.6224 363.801 cv
33.1861 363.801 38.5074 369.123 38.5074 375.687 cv
38.5074 382.25 33.1861 387.572 26.6224 387.572 cv
.956863 .521569 .329412 rgb
f
159.107 267.116 mo
152.542 267.116 147.221 261.795 147.221 255.231 cv
147.221 248.667 152.542 243.345 159.107 243.345 cv
165.67 243.345 170.992 248.667 170.992 255.231 cv
170.992 261.795 165.67 267.116 159.107 267.116 cv
.972549 .701961 .580392 rgb
f
89.687 248.185 mo
86.9087 248.185 84.657 245.933 84.657 243.155 cv
84.657 240.377 86.9087 238.125 89.687 238.125 cv
92.4647 238.125 94.7169 240.377 94.7169 243.155 cv
94.7169 245.933 92.4647 248.185 89.687 248.185 cv
f
200.17 375.687 mo
197.392 375.687 195.14 373.435 195.14 370.657 cv
195.14 367.879 197.392 365.627 200.17 365.627 cv
202.948 365.627 205.2 367.879 205.2 370.657 cv
205.2 373.435 202.948 375.687 200.17 375.687 cv
f
202.677 252.542 mo
201.008 252.542 199.656 251.19 199.656 249.521 cv
199.656 247.852 201.008 246.5 202.677 246.5 cv
204.346 246.5 205.698 247.852 205.698 249.521 cv
205.698 251.19 204.346 252.542 202.677 252.542 cv
.921569 .654902 .533333 rgb
f
17.7586 300.456 mo
16.09 300.456 14.7374 299.104 14.7374 297.435 cv
14.7374 295.766 16.09 294.414 17.7586 294.414 cv
19.4272 294.414 20.7798 295.766 20.7798 297.435 cv
20.7798 299.104 19.4272 300.456 17.7586 300.456 cv
.772549 .501961 .380392 rgb
f
60.8746 424.035 mo
59.2061 424.035 57.8535 422.684 57.8535 421.015 cv
57.8535 419.346 59.2061 417.994 60.8746 417.994 cv
62.5433 417.994 63.8959 419.346 63.8959 421.015 cv
63.8959 422.684 62.5433 424.035 60.8746 424.035 cv
.921569 .654902 .533333 rgb
f
32.6236 426.045 mo
32.6236 428.823 30.3713 431.075 27.5936 431.075 cv
24.8154 431.075 22.5636 428.823 22.5636 426.045 cv
22.5636 423.266 24.8154 421.015 27.5936 421.015 cv
30.3713 421.015 32.6236 423.266 32.6236 426.045 cv
cp
.239216 .678431 .87451 rgb
f
66.3463 365.772 mo
59.3575 362.098 li
52.369 365.772 li
53.7036 357.99 li
48.0501 352.479 li
55.8636 351.344 li
59.3575 344.263 li
62.8518 351.344 li
70.6652 352.479 li
65.0117 357.99 li
66.3463 365.772 li
.972549 .701961 .580392 rgb
f
181.87 396.299 mo
181.87 408.871 171.679 419.063 159.106 419.063 cv
146.535 419.063 136.343 408.871 136.343 396.299 cv
136.343 383.727 146.535 373.536 159.106 373.536 cv
171.679 373.536 181.87 383.727 181.87 396.299 cv
.239216 .678431 .87451 rgb
f
158.991 388.079 mo
158.742 388.079 158.541 387.878 158.541 387.629 cv
158.541 386.082 li
158.541 385.089 159.227 384.819 159.89 384.559 cv
160.332 384.385 160.881 384.17 161.468 383.705 cv
162.301 383.043 162.793 381.727 162.692 380.428 cv
162.63 379.642 162.292 378.192 160.72 377.303 cv
160.024 376.909 159.251 376.71 158.472 376.71 cv
157.877 376.71 157.279 376.826 156.706 377.06 cv
155.529 377.54 154.671 378.445 154.352 379.543 cv
154.01 380.726 154.297 381.875 155.121 382.618 cv
155.569 383.023 156.1 383.232 156.63 383.232 cv
156.886 383.232 157.141 383.183 157.387 383.084 cv
158.177 382.762 158.599 382.271 158.639 381.622 cv
158.683 380.916 158.261 380.298 158.023 380.164 cv
157.806 380.042 157.729 379.768 157.851 379.551 cv
157.932 379.403 158.085 379.321 158.242 379.321 cv
158.317 379.321 158.393 379.339 158.463 379.378 cv
159.029 379.695 159.601 380.665 159.538 381.678 cv
159.501 382.255 159.219 383.311 157.726 383.917 cv
157.375 384.059 157.007 384.129 156.639 384.129 cv
155.886 384.129 155.13 383.839 154.518 383.287 cv
153.448 382.322 153.053 380.791 153.489 379.291 cv
153.884 377.928 154.933 376.811 156.366 376.226 cv
157.049 375.948 157.763 375.81 158.472 375.81 cv
159.404 375.81 160.328 376.048 161.163 376.519 cv
162.576 377.318 163.46 378.717 163.589 380.357 cv
163.715 381.967 163.102 383.557 162.027 384.41 cv
161.335 384.958 160.69 385.212 160.219 385.397 cv
159.521 385.671 159.441 385.741 159.441 386.082 cv
159.441 387.629 li
159.441 387.878 159.24 388.079 158.991 388.079 cv
.545098 .807843 .92549 rgb
f
159.106 416.79 mo
152.774 416.79 147.622 410.168 147.622 402.029 cv
147.622 393.891 152.774 387.269 159.106 387.269 cv
165.439 387.269 170.591 393.891 170.591 402.029 cv
170.591 410.168 165.439 416.79 159.106 416.79 cv
cp
.301961 .301961 .301961 rgb
f
170.231 402.029 mo
170.231 409.983 165.25 416.429 159.106 416.429 cv
152.962 416.429 147.982 409.983 147.982 402.029 cv
147.982 394.076 152.962 387.629 159.106 387.629 cv
165.25 387.629 170.231 394.076 170.231 402.029 cv
cp
.482353 .666667 .784314 rgb
f
159.106 387.629 mo
159.106 402.029 li
170.231 402.029 li
170.231 394.076 165.25 387.629 159.106 387.629 cv
cp
.682353 .431373 .0823529 rgb
f
159.197 401.94 mo
159.197 387.72 li
165.217 387.782 170.103 394.129 170.141 401.94 cv
159.197 401.94 li
cp
.941176 .592157 .137255 rgb
f
159.106 387.629 mo
159.106 402.029 li
147.982 402.029 li
147.982 394.076 152.962 387.629 159.106 387.629 cv
cp
.682353 .431373 .0823529 rgb
f
159.016 401.94 mo
159.016 387.72 li
152.996 387.782 148.11 394.129 148.072 401.94 cv
159.016 401.94 li
cp
.941176 .592157 .137255 rgb
f
157.626 395.433 mo
157.628 395.23 li
157.632 394.929 157.644 394.638 157.664 394.355 cv
157.678 394.166 li
160.535 394.166 li
160.549 394.355 li
160.569 394.638 160.581 394.929 160.585 395.23 cv
160.587 395.433 li
157.626 395.433 li
cp
.682353 .431373 .0823529 rgb
f
157.861 395.231 mo
160.352 395.231 li
160.348 394.935 160.336 394.647 160.316 394.368 cv
157.897 394.368 li
157.877 394.647 157.865 394.935 157.861 395.231 cv
cp
.941176 .592157 .137255 rgb
f
157.672 394.252 mo
157.693 394.034 li
157.72 393.76 157.753 393.5 157.794 393.252 cv
157.823 393.079 li
160.39 393.079 li
160.419 393.252 li
160.46 393.5 160.493 393.76 160.52 394.034 cv
160.541 394.252 li
157.672 394.252 li
cp
.682353 .431373 .0823529 rgb
f
157.925 394.051 mo
160.288 394.051 li
160.262 393.78 160.229 393.525 160.188 393.28 cv
158.024 393.28 li
157.984 393.525 157.951 393.78 157.925 394.051 cv
cp
.941176 .592157 .137255 rgb
f
157.678 396.615 mo
157.664 396.426 li
157.644 396.142 157.632 395.852 157.628 395.551 cv
157.626 395.347 li
160.587 395.347 li
160.585 395.551 li
160.581 395.852 160.569 396.142 160.549 396.426 cv
160.535 396.615 li
157.678 396.615 li
cp
.682353 .431373 .0823529 rgb
f
157.897 396.413 mo
160.316 396.413 li
160.337 396.134 160.348 395.845 160.352 395.548 cv
157.861 395.548 li
157.865 395.845 157.876 396.134 157.897 396.413 cv
cp
.941176 .592157 .137255 rgb
f
157.823 397.701 mo
157.794 397.528 li
157.753 397.28 157.72 397.021 157.693 396.746 cv
157.672 396.527 li
160.541 396.527 li
160.52 396.746 li
160.493 397.021 160.46 397.28 160.419 397.528 cv
160.39 397.701 li
157.823 397.701 li
cp
.682353 .431373 .0823529 rgb
f
158.024 397.5 mo
160.188 397.5 li
160.229 397.255 160.262 397 160.288 396.73 cv
157.925 396.73 li
157.951 397 157.984 397.255 158.024 397.5 cv
cp
.941176 .592157 .137255 rgb
f
159.106 399.882 mo
158.875 399.882 158.66 399.752 158.465 399.497 cv
158.229 399.184 li
159.984 399.184 li
159.748 399.497 li
159.553 399.752 159.338 399.882 159.106 399.882 cv
cp
.682353 .431373 .0823529 rgb
f
159.106 399.681 mo
159.264 399.681 159.414 399.569 159.553 399.387 cv
158.66 399.387 li
158.799 399.569 158.949 399.681 159.106 399.681 cv
cp
.941176 .592157 .137255 rgb
f
158.319 399.271 mo
158.259 399.149 li
158.203 399.036 158.151 398.909 158.102 398.77 cv
158.007 398.509 li
160.206 398.509 li
160.111 398.77 li
160.062 398.909 160.01 399.036 159.954 399.149 cv
159.894 399.271 li
158.319 399.271 li
cp
.682353 .431373 .0823529 rgb
f
158.473 399.07 mo
159.74 399.07 li
159.792 398.963 159.842 398.842 159.889 398.711 cv
158.324 398.711 li
158.371 398.842 158.421 398.963 158.473 399.07 cv
cp
.941176 .592157 .137255 rgb
f
158.034 398.595 mo
157.99 398.443 li
157.937 398.261 157.889 398.062 157.847 397.85 cv
157.799 397.614 li
160.413 397.614 li
160.366 397.85 li
160.324 398.062 160.276 398.261 160.223 398.443 cv
160.179 398.595 li
158.034 398.595 li
cp
.682353 .431373 .0823529 rgb
f
158.216 398.394 mo
159.997 398.394 li
160.048 398.216 160.095 398.023 160.137 397.816 cv
158.076 397.816 li
158.118 398.023 158.165 398.216 158.216 398.394 cv
cp
.941176 .592157 .137255 rgb
f
158.231 391.595 mo
158.468 391.284 li
158.66 391.029 158.876 390.9 159.106 390.9 cv
159.337 390.9 159.553 391.029 159.745 391.284 cv
159.982 391.595 li
158.231 391.595 li
cp
.682353 .431373 .0823529 rgb
f
159.106 391.101 mo
158.95 391.101 158.801 391.211 158.662 391.394 cv
159.551 391.394 li
159.412 391.211 159.263 391.101 159.106 391.101 cv
cp
.941176 .592157 .137255 rgb
f
158.009 392.271 mo
158.103 392.009 li
158.152 391.87 158.204 391.744 158.26 391.632 cv
158.319 391.508 li
159.894 391.508 li
159.953 391.632 li
160.009 391.744 160.061 391.87 160.11 392.009 cv
160.204 392.271 li
158.009 392.271 li
cp
.682353 .431373 .0823529 rgb
f
158.474 391.71 mo
158.422 391.817 158.372 391.937 158.325 392.069 cv
159.888 392.069 li
159.841 391.937 159.791 391.817 159.739 391.71 cv
158.474 391.71 li
cp
.941176 .592157 .137255 rgb
f
157.8 393.166 mo
157.847 392.929 li
157.89 392.718 157.938 392.52 157.991 392.338 cv
158.034 392.184 li
160.179 392.184 li
160.222 392.338 li
160.275 392.52 160.323 392.718 160.366 392.929 cv
160.413 393.166 li
157.8 393.166 li
cp
.682353 .431373 .0823529 rgb
f
158.077 392.964 mo
160.136 392.964 li
160.094 392.758 160.048 392.564 159.997 392.386 cv
158.216 392.386 li
158.165 392.564 158.119 392.758 158.077 392.964 cv
cp
.941176 .592157 .137255 rgb
f
157.63 395.75 mo
157.624 395.19 li
157.861 395.03 li
160.583 395.03 li
160.589 395.592 li
160.352 395.75 li
157.63 395.75 li
cp
.682353 .431373 .0823529 rgb
f
157.857 395.391 mo
157.861 395.548 li
160.352 395.548 li
160.356 395.391 li
160.352 395.231 li
157.861 395.231 li
157.857 395.391 li
cp
1 1 1 rgb
f
157.649 394.569 mo
157.709 393.87 li
157.925 393.849 li
160.502 393.849 li
160.564 394.569 li
157.649 394.569 li
cp
.682353 .431373 .0823529 rgb
f
157.897 394.368 mo
160.316 394.368 li
160.308 394.259 160.298 394.155 160.288 394.051 cv
157.925 394.051 li
157.915 394.155 157.905 394.259 157.897 394.368 cv
cp
1 1 1 rgb
f
157.756 393.482 mo
157.847 392.929 li
157.881 392.762 li
160.332 392.762 li
160.457 393.482 li
157.756 393.482 li
cp
.682353 .431373 .0823529 rgb
f
158.024 393.28 mo
160.188 393.28 li
160.171 393.174 160.156 393.065 160.136 392.964 cv
158.077 392.964 li
158.057 393.065 158.042 393.174 158.024 393.28 cv
cp
1 1 1 rgb
f
157.919 392.587 mo
157.99 392.338 li
158.017 392.244 158.046 392.163 158.076 392.08 cv
158.128 391.94 li
158.325 391.867 li
160.06 391.867 li
160.11 392.009 li
160.167 392.163 160.196 392.244 160.223 392.338 cv
160.293 392.587 li
157.919 392.587 li
cp
.682353 .431373 .0823529 rgb
f
158.216 392.386 mo
159.997 392.386 li
159.963 392.27 159.925 392.172 159.888 392.069 cv
158.325 392.069 li
158.288 392.172 158.249 392.27 158.216 392.386 cv
cp
1 1 1 rgb
f
158.121 391.911 mo
158.26 391.632 li
158.326 391.496 158.395 391.378 158.468 391.282 cv
158.536 391.192 li
159.676 391.192 li
159.745 391.282 li
159.818 391.378 159.887 391.496 159.953 391.632 cv
160.092 391.911 li
158.121 391.911 li
cp
.682353 .431373 .0823529 rgb
f
159.551 391.394 mo
158.662 391.394 li
158.596 391.48 158.534 391.588 158.474 391.71 cv
159.739 391.71 li
159.679 391.588 159.617 391.48 159.551 391.394 cv
cp
1 1 1 rgb
f
157.711 396.931 mo
157.664 396.425 li
157.65 396.211 li
160.563 396.211 li
160.507 396.879 li
160.288 396.931 li
157.711 396.931 li
cp
.682353 .431373 .0823529 rgb
f
157.925 396.73 mo
160.288 396.73 li
160.298 396.624 160.309 396.52 160.316 396.413 cv
157.897 396.413 li
157.904 396.52 157.915 396.624 157.925 396.73 cv
cp
1 1 1 rgb
f
157.88 398.018 mo
157.757 397.298 li
160.456 397.298 li
160.366 397.85 li
160.333 398.018 li
157.88 398.018 li
cp
.682353 .431373 .0823529 rgb
f
158.076 397.816 mo
160.137 397.816 li
160.156 397.716 160.171 397.604 160.188 397.5 cv
158.024 397.5 li
158.042 397.604 158.057 397.716 158.076 397.816 cv
cp
1 1 1 rgb
f
158.152 398.913 mo
158.102 398.77 li
158.049 398.625 158.018 398.539 157.99 398.444 cv
157.917 398.192 li
160.296 398.192 li
160.223 398.444 li
160.195 398.539 160.164 398.625 160.133 398.709 cv
160.082 398.85 li
159.889 398.913 li
158.152 398.913 li
cp
.682353 .431373 .0823529 rgb
f
158.324 398.711 mo
159.889 398.711 li
159.926 398.608 159.963 398.511 159.997 398.394 cv
158.216 398.394 li
158.249 398.511 158.287 398.608 158.324 398.711 cv
cp
1 1 1 rgb
f
158.535 399.588 mo
158.466 399.498 li
158.393 399.402 158.325 399.284 158.259 399.149 cv
158.122 398.869 li
160.091 398.869 li
159.954 399.149 li
159.888 399.284 159.82 399.402 159.747 399.498 cv
159.678 399.588 li
158.535 399.588 li
cp
.682353 .431373 .0823529 rgb
f
158.66 399.387 mo
159.553 399.387 li
159.618 399.3 159.68 399.191 159.74 399.07 cv
158.473 399.07 li
158.533 399.191 158.594 399.3 158.66 399.387 cv
cp
1 1 1 rgb
f
144.278 291.734 mo
141.237 301.134 li
153.083 296.179 li
150.394 294.821 li
156.063 289.15 li
152.046 287.468 li
146.607 292.91 li
144.278 291.734 li
cp
.239216 .678431 .87451 rgb
f
450 450 mo
225 450 li
225 225 li
450 225 li
450 450 li
.172549 .341176 .470588 rgb
f
309.448 431.607 mo
309.448 441.752 li
308.501 441.752 li
308.501 431.607 li
305.243 431.607 li
305.243 430.756 li
312.787 430.756 li
312.675 431.607 li
309.448 431.607 li
cp
1 .878431 .572549 rgb
f
317.653 439.697 mo
317.653 437.386 li
316.192 437.386 li
314.507 437.386 313.56 438.044 313.56 439.376 cv
313.56 440.532 314.219 441.174 315.326 441.174 cv
316.386 441.174 317.124 440.645 317.653 439.697 cv
cp
318.585 439.89 mo
318.585 440.82 318.842 441.094 319.291 441.271 cv
319.082 441.929 li
318.344 441.784 317.91 441.415 317.782 440.516 cv
317.188 441.478 316.289 441.929 315.165 441.929 cv
313.544 441.929 312.564 440.917 312.564 439.424 cv
312.564 437.658 313.897 436.695 316.048 436.695 cv
317.653 436.695 li
317.653 435.893 li
317.653 434.56 317.107 433.967 315.711 433.967 cv
315.037 433.967 314.267 434.143 313.432 434.448 cv
313.191 433.742 li
314.122 433.373 314.957 433.18 315.84 433.18 cv
317.75 433.18 318.585 434.127 318.585 435.845 cv
318.585 439.89 li
cp
f
326.067 433.276 mo
325.891 434.159 li
325.65 434.096 325.441 434.063 325.152 434.063 cv
323.98 434.063 323.354 434.897 322.905 436.615 cv
322.905 441.752 li
321.974 441.752 li
321.974 433.356 li
322.776 433.356 li
322.856 435.234 li
323.307 433.854 324.06 433.18 325.232 433.18 cv
325.554 433.18 325.843 433.212 326.067 433.276 cv
cp
f
328.124 436.022 mo
328.124 437.369 328.959 438.141 330.242 438.141 cv
331.607 438.141 332.361 437.369 332.361 436.037 cv
332.361 434.721 331.671 433.902 330.242 433.902 cv
328.814 433.902 328.124 434.785 328.124 436.022 cv
cp
334.208 433.533 mo
333.63 433.693 332.892 433.758 331.88 433.773 cv
332.763 434.191 333.309 434.897 333.309 436.053 cv
333.309 437.691 332.169 438.815 330.274 438.815 cv
329.873 438.815 329.504 438.766 329.184 438.654 cv
328.782 438.879 328.541 439.232 328.541 439.617 cv
328.541 440.115 328.862 440.484 329.873 440.484 cv
331.238 440.484 li
332.907 440.484 333.935 441.383 333.935 442.635 cv
333.935 444.144 332.747 445.043 330.291 445.043 cv
327.755 445.043 326.791 444.305 326.791 442.635 cv
327.658 442.635 li
327.674 443.807 328.284 444.272 330.291 444.272 cv
332.249 444.272 332.987 443.678 332.987 442.684 cv
332.987 441.784 332.281 441.287 331.094 441.287 cv
329.728 441.287 li
328.332 441.287 327.658 440.612 327.658 439.81 cv
327.658 439.248 327.995 438.75 328.573 438.381 cv
327.61 437.883 327.16 437.145 327.16 436.022 cv
327.16 434.336 328.396 433.18 330.242 433.18 cv
332.49 433.212 333.1 432.971 333.919 432.635 cv
334.208 433.533 li
cp
f
340.839 436.952 mo
340.839 435.123 340.101 433.951 338.511 433.951 cv
337.211 433.951 336.216 434.914 336.119 437.193 cv
340.839 437.193 li
340.839 436.952 li
cp
341.722 437.916 mo
336.119 437.916 li
336.231 440.195 337.291 441.143 338.735 441.143 cv
339.65 441.143 340.261 440.853 340.999 440.307 cv
341.433 440.901 li
340.646 441.543 339.795 441.929 338.688 441.929 cv
336.473 441.929 335.124 440.323 335.124 437.627 cv
335.124 434.945 336.424 433.18 338.478 433.18 cv
340.662 433.18 341.754 434.77 341.754 437.241 cv
341.754 437.498 341.737 437.755 341.722 437.916 cv
cp
f
348.258 441.398 mo
347.744 441.736 347.166 441.929 346.491 441.929 cv
345.224 441.929 344.436 441.174 344.436 439.713 cv
344.436 434.111 li
343.024 434.111 li
343.024 433.356 li
344.436 433.356 li
344.436 431.35 li
345.368 431.238 li
345.368 433.356 li
347.535 433.356 li
347.423 434.111 li
345.368 434.111 li
345.368 439.665 li
345.368 440.645 345.753 441.126 346.603 441.126 cv
347.069 441.126 347.471 440.998 347.888 440.74 cv
348.258 441.398 li
cp
f
349.912 441.752 mo
349.912 433.356 li
350.844 433.356 li
350.844 441.752 li
349.912 441.752 li
cp
351.068 430.339 mo
351.068 430.708 350.795 431.014 350.362 431.014 cv
349.944 431.014 349.672 430.708 349.672 430.339 cv
349.672 429.97 349.944 429.664 350.362 429.664 cv
350.795 429.664 351.068 429.97 351.068 430.339 cv
cp
f
360.299 435.748 mo
360.299 441.752 li
359.368 441.752 li
359.368 435.877 li
359.368 434.496 358.807 433.935 357.779 433.935 cv
356.64 433.935 355.869 434.641 355.179 435.668 cv
355.179 441.752 li
354.247 441.752 li
354.247 433.356 li
355.05 433.356 li
355.146 434.785 li
355.805 433.822 356.735 433.18 357.955 433.18 cv
359.48 433.18 360.299 434.127 360.299 435.748 cv
cp
f
363.785 436.022 mo
363.785 437.369 364.619 438.141 365.904 438.141 cv
367.269 438.141 368.022 437.369 368.022 436.037 cv
368.022 434.721 367.332 433.902 365.904 433.902 cv
364.476 433.902 363.785 434.785 363.785 436.022 cv
cp
369.869 433.533 mo
369.291 433.693 368.553 433.758 367.541 433.773 cv
368.424 434.191 368.97 434.897 368.97 436.053 cv
368.97 437.691 367.83 438.815 365.935 438.815 cv
365.534 438.815 365.165 438.766 364.845 438.654 cv
364.443 438.879 364.202 439.232 364.202 439.617 cv
364.202 440.115 364.523 440.484 365.534 440.484 cv
366.899 440.484 li
368.568 440.484 369.596 441.383 369.596 442.635 cv
369.596 444.144 368.408 445.043 365.952 445.043 cv
363.416 445.043 362.452 444.305 362.452 442.635 cv
363.319 442.635 li
363.336 443.807 363.945 444.272 365.952 444.272 cv
367.91 444.272 368.648 443.678 368.648 442.684 cv
368.648 441.784 367.942 441.287 366.755 441.287 cv
365.391 441.287 li
363.993 441.287 363.319 440.612 363.319 439.81 cv
363.319 439.248 363.656 438.75 364.234 438.381 cv
363.271 437.883 362.822 437.145 362.822 436.022 cv
362.822 434.336 364.058 433.18 365.904 433.18 cv
368.151 433.212 368.761 432.971 369.58 432.635 cv
369.869 433.533 li
cp
f
385.54 340.818 mo
385.54 366.058 365.08 386.516 339.842 386.516 cv
314.6 386.516 294.14 366.058 294.14 340.818 cv
294.14 315.577 314.6 295.117 339.842 295.117 cv
365.08 295.117 385.54 315.577 385.54 340.818 cv
1 1 1 rgb
f
339.842 306.084 mo
320.689 306.084 305.106 321.666 305.106 340.818 cv
305.106 359.967 320.689 375.551 339.842 375.551 cv
358.996 375.551 374.577 359.967 374.577 340.818 cv
374.577 321.666 358.996 306.084 339.842 306.084 cv
339.842 384.548 mo
315.729 384.548 296.109 364.93 296.109 340.818 cv
296.109 316.705 315.729 297.086 339.842 297.086 cv
363.956 297.086 383.573 316.705 383.573 340.818 cv
383.573 364.93 363.956 384.548 339.842 384.548 cv
.776471 .129412 .152941 rgb
f
339.842 323.837 mo
330.479 323.837 322.86 331.455 322.86 340.818 cv
322.86 350.179 330.479 357.798 339.842 357.798 cv
349.204 357.798 356.822 350.179 356.822 340.818 cv
356.822 331.455 349.204 323.837 339.842 323.837 cv
cp
339.842 366.795 mo
325.519 366.795 313.862 355.141 313.862 340.818 cv
313.862 326.493 325.519 314.837 339.842 314.837 cv
354.171 314.837 365.819 326.493 365.819 340.818 cv
365.819 355.141 354.171 366.795 339.842 366.795 cv
cp
f
339.842 348.679 mo
335.506 348.679 331.979 345.152 331.979 340.818 cv
331.979 336.482 335.506 332.955 339.842 332.955 cv
344.175 332.955 347.702 336.482 347.702 340.818 cv
347.702 345.152 344.175 348.679 339.842 348.679 cv
cp
f
339.84 340.783 mo
350.204 332.488 li
349.17 331.455 li
348.134 330.42 li
339.84 340.783 li
cp
.215686 .211765 .368627 rgb
f
373.799 310.233 mo
372.723 309.039 371.587 307.903 370.392 306.829 cv
379.316 300.415 li
379.764 300.863 li
380.211 301.311 li
373.799 310.233 li
.423529 .541176 .631373 rgb
f
372.61 311.887 mo
371.4 310.518 370.107 309.227 368.737 308.019 cv
370.392 306.829 li
371.587 307.903 372.723 309.039 373.799 310.233 cv
372.61 311.887 li
1 1 1 rgb
f
372.41 312.165 mo
370.435 310.191 li
368.461 308.217 li
368.737 308.019 li
370.107 309.227 371.4 310.518 372.61 311.887 cv
372.41 312.165 li
.843137 .392157 .407843 rgb
f
352.27 332.3 mo
372.41 312.164 li
368.457 308.217 li
348.323 328.353 li
347.35 329.326 347.442 330.999 348.535 332.09 cv
349.626 333.18 351.296 333.275 352.27 332.3 cv
cp
.992157 .737255 .329412 rgb
f
369.065 307.782 mo
368.984 307.384 li
368.396 304.483 369.3 301.481 371.392 299.389 cv
377.423 293.358 li
377.493 293.288 377.597 293.264 377.691 293.297 cv
377.784 293.33 377.851 293.414 377.861 293.513 cv
378.662 300.888 li
369.065 307.782 li
cp
.776471 .129412 .152941 rgb
f
372.843 311.56 mo
373.242 311.641 li
376.142 312.231 379.145 311.326 381.237 309.234 cv
387.269 303.203 li
387.339 303.133 387.363 303.029 387.33 302.935 cv
387.297 302.842 387.213 302.775 387.115 302.765 cv
379.738 301.964 li
372.843 311.56 li
cp
f
341.846 411.269 mo
335.828 411.269 330.932 406.373 330.932 400.356 cv
330.932 394.339 335.828 389.443 341.846 389.443 cv
347.864 389.443 352.76 394.339 352.76 400.356 cv
352.76 406.373 347.864 411.269 341.846 411.269 cv
341.846 391.688 mo
337.067 391.688 333.178 395.576 333.178 400.356 cv
333.178 405.135 337.067 409.024 341.846 409.024 cv
346.626 409.024 350.514 405.135 350.514 400.356 cv
350.514 395.576 346.626 391.688 341.846 391.688 cv
.588235 .670588 .737255 rgb
f
341.846 406.839 mo
338.272 406.839 335.363 403.93 335.363 400.356 cv
335.363 396.781 338.272 393.872 341.846 393.872 cv
345.422 393.872 348.328 396.781 348.328 400.356 cv
348.328 403.93 345.422 406.839 341.846 406.839 cv
341.846 396.118 mo
339.509 396.118 337.608 398.019 337.608 400.356 cv
337.608 402.693 339.509 404.594 341.846 404.594 cv
344.182 404.594 346.084 402.693 346.084 400.356 cv
346.084 398.019 344.182 396.118 341.846 396.118 cv
.537255 .623529 .686274 rgb
f
341.846 402.318 mo
340.764 402.318 339.884 401.438 339.884 400.356 cv
339.884 399.274 340.764 398.394 341.846 398.394 cv
342.927 398.394 343.807 399.274 343.807 400.356 cv
343.807 401.438 342.927 402.318 341.846 402.318 cv
.337255 .470588 .576471 rgb
f
254.49 252.04 mo
256.826 252.04 li
256.999 251.211 257.628 250.583 258.457 250.409 cv
258.457 248.073 li
256.355 248.275 254.694 249.938 254.49 252.04 cv
cp
.945098 .403922 .160784 rgb
f
251.069 252.04 mo
253.639 252.04 li
253.848 249.469 255.886 247.428 258.457 247.221 cv
258.457 244.652 li
254.473 244.872 251.289 248.054 251.069 252.04 cv
cp
f
264.13 252.04 mo
266.695 252.04 li
266.478 248.054 263.293 244.872 259.31 244.652 cv
259.31 247.221 li
261.88 247.428 263.919 249.469 264.13 252.04 cv
cp
f
253.639 252.893 mo
251.069 252.893 li
251.289 256.88 254.473 260.06 258.457 260.279 cv
258.457 257.713 li
255.886 257.504 253.848 255.465 253.639 252.893 cv
cp
f
258.457 253.67 mo
258.457 252.893 li
257.679 252.893 li
257.809 253.259 258.09 253.542 258.457 253.67 cv
cp
f
256.826 252.893 mo
254.49 252.893 li
254.694 254.994 256.355 256.655 258.457 256.86 cv
258.457 254.524 li
257.628 254.35 256.999 253.721 256.826 252.893 cv
cp
f
257.679 252.04 mo
258.457 252.04 li
258.457 251.262 li
258.09 251.39 257.809 251.675 257.679 252.04 cv
cp
f
263.274 252.893 mo
260.939 252.893 li
260.766 253.721 260.138 254.35 259.31 254.524 cv
259.31 256.86 li
261.409 256.655 263.07 254.994 263.274 252.893 cv
cp
f
264.13 252.893 mo
263.919 255.465 261.88 257.504 259.31 257.713 cv
259.31 260.279 li
263.293 260.06 266.478 256.88 266.695 252.893 cv
264.13 252.893 li
cp
f
260.939 252.04 mo
263.274 252.04 li
263.07 249.938 261.409 248.275 259.31 248.073 cv
259.31 250.409 li
260.138 250.583 260.766 251.211 260.939 252.04 cv
cp
f
260.085 252.893 mo
259.31 252.893 li
259.31 253.67 li
259.674 253.542 259.957 253.259 260.085 252.893 cv
cp
f
259.31 261.765 mo
259.31 262 259.118 262.192 258.883 262.192 cv
258.649 262.192 258.457 262 258.457 261.765 cv
258.457 261.132 li
254 260.912 250.438 257.347 250.217 252.893 cv
249.584 252.893 li
249.35 252.893 249.159 252.702 249.159 252.466 cv
249.159 252.232 249.35 252.04 249.584 252.04 cv
250.217 252.04 li
250.438 247.584 254 244.02 258.457 243.8 cv
258.457 243.169 li
258.457 242.932 258.649 242.743 258.883 242.743 cv
259.118 242.743 259.31 242.932 259.31 243.169 cv
259.31 243.8 li
263.764 244.02 267.329 247.584 267.549 252.04 cv
268.182 252.04 li
268.417 252.04 268.609 252.232 268.609 252.466 cv
268.609 252.702 268.417 252.893 268.182 252.893 cv
267.549 252.893 li
267.329 257.347 263.764 260.912 259.31 261.132 cv
259.31 261.765 li
cp
263.047 266.832 mo
263.047 265.363 263.872 263.34 265.735 261.886 cv
268.57 259.668 270.544 256.34 270.544 252.462 cv
270.544 246.022 265.323 240.799 258.883 240.799 cv
252.44 240.799 247.22 246.022 247.22 252.462 cv
247.22 256.34 249.194 259.668 252.031 261.886 cv
253.892 263.34 254.72 265.363 254.72 266.832 cv
246.909 268.698 241.598 272.403 241.996 273.159 cv
244.655 278.209 253.022 280.376 258.883 280.376 cv
264.742 280.376 273.109 278.209 275.768 273.159 cv
276.167 272.403 270.855 268.698 263.047 266.832 cv
cp
f
259.31 251.262 mo
259.31 252.04 li
260.085 252.04 li
259.957 251.675 259.674 251.39 259.31 251.262 cv
cp
f
290.162 367.465 mo
278.669 366.145 li
280.005 364.808 li
272.65 357.453 li
272.218 357.02 271.651 356.804 271.084 356.804 cv
270.517 356.804 269.95 357.021 269.517 357.454 cv
267.515 359.456 li
266.444 355.483 265.694 351.376 265.296 347.169 cv
267.044 346.006 269.064 345.424 271.084 345.424 cv
273.761 345.424 276.439 346.446 278.482 348.489 cv
287.404 357.412 li
288.842 355.973 li
290.162 367.465 li
262.162 364.809 mo
254.763 357.412 li
263.686 348.489 li
263.84 348.335 263.997 348.187 264.157 348.045 cv
264.603 352.295 265.401 356.44 266.522 360.449 cv
262.162 364.809 li
.337255 .470588 .576471 rgb
f
372.553 293.096 mo
372.518 293.062 li
366.688 287.231 365.117 278.754 367.806 271.497 cv
370.714 272.709 373.527 274.1 376.234 275.658 cv
375.213 279.408 376.175 283.585 379.119 286.53 cv
372.553 293.096 li
376.627 274.477 mo
373.938 272.941 371.148 271.567 368.264 270.365 cv
369.256 268.113 370.675 266.004 372.519 264.159 cv
372.553 264.126 li
371.321 262.895 li
381.521 261.723 li
380.35 271.923 li
379.119 270.692 li
378.004 271.807 377.173 273.098 376.627 274.477 cv
f
293.771 305.361 mo
285.886 299.101 li
293.771 292.839 li
293.771 294.547 li
299.836 294.547 304.756 289.629 304.756 283.564 cv
313.862 283.564 li
313.862 283.611 li
313.862 294.681 304.887 303.654 293.819 303.654 cv
293.771 303.654 li
293.771 305.361 li
.298039 .443137 .552941 rgb
f
426.658 368.057 mo
415.377 366.761 li
416.704 365.436 li
415.16 363.925 413.387 362.789 411.498 362.026 cv
412.491 358.752 413.268 355.383 413.811 351.938 cv
417.515 353.17 421.001 355.249 423.963 358.174 cv
425.362 356.775 li
426.658 368.057 li
394.169 365.555 mo
391.749 363.133 389.329 360.712 386.907 358.292 cv
392.04 353.158 398.766 350.593 405.493 350.593 cv
407.897 350.593 410.301 350.92 412.633 351.576 cv
412.1 355.007 411.333 358.354 410.348 361.613 cv
408.771 361.114 407.133 360.864 405.494 360.864 cv
401.396 360.864 397.297 362.427 394.169 365.555 cv
.337255 .470588 .576471 rgb
f
392.503 433.499 mo
387.571 433.499 383.573 429.501 383.573 424.57 cv
383.573 419.638 387.571 415.64 392.503 415.64 cv
397.435 415.64 401.433 419.638 401.433 424.57 cv
401.433 429.501 397.435 433.499 392.503 433.499 cv
.388235 .470588 .537255 rgb
f
251.925 423.461 mo
246.994 423.461 242.996 419.463 242.996 414.532 cv
242.996 409.6 246.994 405.602 251.925 405.602 cv
256.857 405.602 260.855 409.6 260.855 414.532 cv
260.855 419.463 256.857 423.461 251.925 423.461 cv
.298039 .443137 .552941 rgb
f
407.694 283.669 mo
402.762 283.669 398.764 279.67 398.764 274.739 cv
398.764 269.807 402.762 265.809 407.694 265.809 cv
412.626 265.809 416.624 269.807 416.624 274.739 cv
416.624 279.67 412.626 283.669 407.694 283.669 cv
f
299.124 263.421 mo
292.56 263.421 287.238 258.1 287.238 251.536 cv
287.238 244.972 292.56 239.651 299.124 239.651 cv
305.687 239.651 311.009 244.972 311.009 251.536 cv
311.009 258.1 305.687 263.421 299.124 263.421 cv
.388235 .470588 .537255 rgb
f
419.579 395.905 mo
413.016 395.905 407.694 390.584 407.694 384.021 cv
407.694 377.456 413.016 372.135 419.579 372.135 cv
426.143 372.135 431.465 377.456 431.465 384.021 cv
431.465 390.584 426.143 395.905 419.579 395.905 cv
.588235 .670588 .737255 rgb
f
428.843 257.625 mo
426.065 257.625 423.813 255.373 423.813 252.596 cv
423.813 249.817 426.065 247.565 428.843 247.565 cv
431.621 247.565 433.873 249.817 433.873 252.596 cv
433.873 255.373 431.621 257.625 428.843 257.625 cv
cp
.945098 .403922 .160784 rgb
f
287.238 433.521 mo
284.46 433.521 282.208 431.27 282.208 428.491 cv
282.208 425.713 284.46 423.461 287.238 423.461 cv
290.016 423.461 292.268 425.713 292.268 428.491 cv
292.268 431.27 290.016 433.521 287.238 433.521 cv
.588235 .670588 .737255 rgb
f
425.29 430.611 mo
423.621 430.611 422.269 429.26 422.269 427.591 cv
422.269 425.922 423.621 424.57 425.29 424.57 cv
426.959 424.57 428.31 425.922 428.31 427.591 cv
428.31 429.26 426.959 430.611 425.29 430.611 cv
cp
.945098 .403922 .160784 rgb
f
377.375 250.586 mo
375.706 250.586 374.354 249.234 374.354 247.565 cv
374.354 245.896 375.706 244.544 377.375 244.544 cv
379.044 244.544 380.396 245.896 380.396 247.565 cv
380.396 249.234 379.044 250.586 377.375 250.586 cv
.388235 .470588 .537255 rgb
f
248.905 359.941 mo
247.236 359.941 245.884 358.589 245.884 356.92 cv
245.884 355.251 247.236 353.899 248.905 353.899 cv
250.574 353.899 251.925 355.251 251.925 356.92 cv
251.925 358.589 250.574 359.941 248.905 359.941 cv
cp
.945098 .403922 .160784 rgb
f
248.905 297.228 mo
246.127 297.228 243.875 294.976 243.875 292.198 cv
243.875 289.419 246.127 287.168 248.905 287.168 cv
251.683 287.168 253.935 289.419 253.935 292.198 cv
253.935 294.976 251.683 297.228 248.905 297.228 cv
.588235 .670588 .737255 rgb
f
339.239 415.579 mo
304.6 415.579 275.41 392.252 266.522 360.449 cv
267.515 359.456 li
276.037 391.083 304.919 414.359 339.239 414.359 cv
372.772 414.359 401.117 392.134 410.348 361.613 cv
410.735 361.736 411.119 361.874 411.498 362.026 cv
402.097 393.02 373.303 415.579 339.239 415.579 cv
413.811 351.938 mo
413.421 351.808 413.028 351.687 412.633 351.576 cv
413.214 347.831 413.517 343.99 413.517 340.081 cv
413.517 312.53 398.514 288.481 376.234 275.658 cv
376.342 275.259 376.474 274.864 376.627 274.477 cv
399.392 287.479 414.737 311.988 414.737 340.081 cv
414.737 344.115 414.42 348.075 413.811 351.938 cv
264.157 348.045 mo
263.883 345.428 263.742 342.771 263.742 340.081 cv
263.742 305.15 287.468 275.758 319.682 267.142 cv
319.61 267.575 319.552 268.011 319.509 268.453 cv
288.062 277.094 264.962 305.89 264.962 340.081 cv
264.962 342.472 265.075 344.836 265.296 347.169 cv
264.902 347.431 264.521 347.724 264.157 348.045 cv
367.806 271.497 mo
364.879 270.276 361.857 269.237 358.753 268.394 cv
358.709 267.953 358.649 267.516 358.576 267.083 cv
361.899 267.961 365.138 269.062 368.264 270.365 cv
368.1 270.738 367.947 271.116 367.806 271.497 cv
f
266.522 360.449 mo
265.401 356.44 264.603 352.295 264.157 348.045 cv
264.521 347.724 264.902 347.431 265.296 347.169 cv
265.694 351.376 266.444 355.483 267.515 359.456 cv
266.522 360.449 li
.670588 .737255 .788235 rgb
f
376.234 275.658 mo
373.527 274.1 370.714 272.709 367.806 271.497 cv
367.947 271.116 368.1 270.738 368.264 270.365 cv
371.148 271.567 373.938 272.941 376.627 274.477 cv
376.474 274.864 376.342 275.259 376.234 275.658 cv
f
411.498 362.026 mo
411.119 361.874 410.735 361.736 410.348 361.613 cv
411.333 358.354 412.1 355.007 412.633 351.576 cv
413.028 351.687 413.421 351.808 413.811 351.938 cv
413.268 355.383 412.491 358.752 411.498 362.026 cv
f
404.337 396.461 mo
404.337 406.243 396.408 414.173 386.625 414.173 cv
376.844 414.173 368.913 406.243 368.913 396.461 cv
368.913 386.678 376.844 378.749 386.625 378.749 cv
396.408 378.749 404.337 386.678 404.337 396.461 cv
cp
.945098 .403922 .160784 rgb
f
385.958 384.223 mo
379.707 384.565 374.732 389.54 374.39 395.793 cv
374.377 396 li
378.723 396 li
378.737 395.819 li
379.055 391.934 382.101 388.886 385.984 388.572 cv
386.167 388.556 li
386.167 384.212 li
385.958 384.223 li
cp
385.949 389.494 mo
382.628 389.816 379.987 392.462 379.661 395.786 cv
379.638 396 li
383.613 396 li
383.646 395.844 li
383.901 394.639 384.805 393.734 386.007 393.481 cv
386.167 393.449 li
386.167 389.473 li
385.949 389.494 li
cp
385.901 394.418 mo
385.283 394.638 384.805 395.119 384.583 395.738 cv
384.492 396 li
386.167 396 li
386.167 394.325 li
385.901 394.418 li
cp
387.085 396 mo
388.76 396 li
388.667 395.738 li
388.447 395.118 387.967 394.638 387.35 394.418 cv
387.085 394.325 li
387.085 396 li
cp
387.085 393.449 mo
387.241 393.481 li
388.447 393.734 389.354 394.639 389.605 395.844 cv
389.639 396 li
393.613 396 li
393.59 395.786 li
393.265 392.462 390.621 389.816 387.301 389.494 cv
387.085 389.473 li
387.085 393.449 li
cp
387.085 388.556 mo
387.266 388.572 li
391.149 388.886 394.197 391.934 394.515 395.819 cv
394.529 396 li
398.874 396 li
398.862 395.793 li
398.519 389.54 393.548 384.565 387.294 384.223 cv
387.085 384.212 li
387.085 388.556 li
cp
387.085 398.596 mo
387.35 398.503 li
387.967 398.282 388.447 397.802 388.667 397.183 cv
388.76 396.921 li
387.085 396.921 li
387.085 398.596 li
cp
384.583 397.183 mo
384.805 397.802 385.283 398.282 385.901 398.503 cv
386.167 398.596 li
386.167 396.921 li
384.492 396.921 li
384.583 397.183 li
cp
379.661 397.137 mo
379.987 400.46 382.628 403.105 385.949 403.429 cv
386.167 403.45 li
386.167 399.474 li
386.007 399.44 li
384.805 399.187 383.901 398.282 383.646 397.078 cv
383.613 396.921 li
379.638 396.921 li
379.661 397.137 li
cp
389.605 397.078 mo
389.354 398.282 388.447 399.187 387.241 399.44 cv
387.085 399.474 li
387.085 403.45 li
387.301 403.429 li
390.621 403.105 393.265 400.46 393.59 397.137 cv
393.613 396.921 li
389.639 396.921 li
389.605 397.078 li
cp
374.39 397.129 mo
374.732 403.381 379.707 408.356 385.958 408.698 cv
386.167 408.711 li
386.167 404.366 li
385.984 404.352 li
382.101 404.035 379.055 400.987 378.737 397.102 cv
378.723 396.921 li
374.377 396.921 li
374.39 397.129 li
cp
394.515 397.102 mo
394.197 400.987 391.149 404.035 387.266 404.352 cv
387.085 404.366 li
387.085 408.711 li
387.294 408.698 li
393.548 408.356 398.519 403.381 398.862 397.129 cv
398.874 396.921 li
394.529 396.921 li
394.515 397.102 li
cp
386.628 411.253 mo
386.373 411.253 386.167 411.047 386.167 410.792 cv
386.167 409.628 li
385.977 409.62 li
379.183 409.286 373.803 403.905 373.469 397.107 cv
373.458 396.921 li
372.294 396.921 li
372.041 396.921 371.834 396.716 371.834 396.461 cv
371.834 396.207 372.041 396 372.294 396 cv
373.458 396 li
373.469 395.814 li
373.803 389.016 379.183 383.637 385.977 383.302 cv
386.167 383.293 li
386.167 382.131 li
386.167 381.876 386.373 381.67 386.628 381.67 cv
386.879 381.67 387.085 381.876 387.085 382.131 cv
387.085 383.293 li
387.271 383.302 li
394.068 383.637 399.449 389.016 399.783 395.814 cv
399.794 396 li
400.957 396 li
401.21 396 401.418 396.207 401.418 396.461 cv
401.418 396.716 401.21 396.921 400.957 396.921 cv
399.794 396.921 li
399.783 397.107 li
399.449 403.905 394.068 409.286 387.271 409.62 cv
387.085 409.628 li
387.085 410.792 li
387.085 411.047 386.879 411.253 386.628 411.253 cv
cp
1 1 1 rgb
f
286.263 320.628 mo
286.263 331.133 277.747 339.65 267.24 339.65 cv
256.736 339.65 248.219 331.133 248.219 320.628 cv
248.219 310.122 256.736 301.606 267.24 301.606 cv
277.747 301.606 286.263 310.122 286.263 320.628 cv
cp
.945098 .403922 .160784 rgb
f
265.072 321.952 mo
262.024 318.906 262.024 313.972 265.072 310.925 cv
268.115 307.88 273.052 307.88 276.096 310.925 cv
279.14 313.97 279.14 318.906 276.096 321.952 cv
273.052 324.996 268.115 324.995 265.072 321.952 cv
cp
1 1 1 rgb
f
265.072 321.952 mo
262.024 318.906 262.024 313.972 265.072 310.925 cv
268.115 307.88 273.052 307.88 276.096 310.925 cv
279.14 313.97 279.14 318.906 276.096 321.952 cv
273.052 324.996 268.115 324.995 265.072 321.952 cv
cp
277.399 323.255 mo
281.164 319.49 281.164 313.387 277.399 309.624 cv
273.634 305.858 267.53 305.858 263.766 309.624 cv
260.307 313.082 260.037 318.513 262.935 322.292 cv
254.601 329.81 li
254.39 330 254.266 330.27 254.258 330.555 cv
254.251 330.84 254.361 331.115 254.562 331.317 cv
255.133 331.887 li
255.705 332.46 li
255.907 332.661 256.182 332.771 256.467 332.764 cv
256.751 332.756 257.021 332.632 257.212 332.42 cv
264.729 324.084 li
268.508 326.986 273.939 326.713 277.399 323.255 cv
cp
.992157 .737255 .329412 rgb
f
276.679 316.105 mo
276.508 312.99 274.031 310.512 270.916 310.341 cv
270.813 310.337 li
270.813 312.502 li
270.903 312.508 li
272.838 312.667 274.357 314.184 274.513 316.12 cv
274.521 316.209 li
276.685 316.209 li
276.679 316.105 li
cp
274.054 316.099 mo
273.893 314.448 272.575 313.132 270.919 312.967 cv
270.811 312.958 li
270.811 314.937 li
270.891 314.953 li
271.492 315.079 271.942 315.529 272.066 316.129 cv
272.085 316.209 li
274.063 316.209 li
274.054 316.099 li
cp
271.601 316.077 mo
271.492 315.769 271.252 315.53 270.942 315.421 cv
270.813 315.375 li
270.813 316.209 li
271.649 316.209 li
271.601 316.077 li
cp
270.813 316.667 mo
270.813 317.501 li
270.942 317.455 li
271.252 317.345 271.492 317.105 271.601 316.798 cv
271.649 316.667 li
270.813 316.667 li
cp
272.085 316.667 mo
272.066 316.746 li
271.942 317.347 271.492 317.797 270.891 317.922 cv
270.813 317.938 li
270.813 319.919 li
270.919 319.909 li
272.576 319.745 273.893 318.429 274.054 316.774 cv
274.064 316.667 li
272.085 316.667 li
cp
274.521 316.667 mo
274.513 316.758 li
274.357 318.693 272.838 320.209 270.903 320.368 cv
270.813 320.374 li
270.813 322.54 li
270.916 322.533 li
274.032 322.363 276.508 319.888 276.679 316.771 cv
276.685 316.667 li
274.521 316.667 li
cp
269.519 316.667 mo
269.567 316.798 li
269.676 317.105 269.914 317.345 270.224 317.455 cv
270.353 317.501 li
270.353 316.667 li
269.519 316.667 li
cp
270.224 315.421 mo
269.916 315.529 269.676 315.769 269.567 316.077 cv
269.519 316.209 li
270.353 316.209 li
270.353 315.375 li
270.224 315.421 li
cp
270.247 312.967 mo
268.592 313.132 267.273 314.449 267.112 316.099 cv
267.102 316.209 li
269.083 316.209 li
269.1 316.129 li
269.224 315.529 269.676 315.079 270.276 314.953 cv
270.355 314.937 li
270.353 312.958 li
270.247 312.967 li
cp
270.276 317.922 mo
269.676 317.797 269.224 317.347 269.1 316.746 cv
269.083 316.667 li
267.103 316.667 li
267.113 316.774 li
267.273 318.428 268.591 319.745 270.245 319.908 cv
270.353 319.919 li
270.353 317.938 li
270.276 317.922 li
cp
270.251 310.344 mo
267.136 310.512 264.658 312.99 264.488 316.105 cv
264.482 316.209 li
266.646 316.209 li
266.654 316.12 li
266.812 314.184 268.329 312.667 270.265 312.508 cv
270.353 312.502 li
270.353 310.337 li
270.251 310.344 li
cp
270.265 320.368 mo
268.328 320.208 266.812 318.693 266.654 316.758 cv
266.646 316.667 li
264.482 316.667 li
264.488 316.771 li
264.658 319.888 267.135 322.363 270.251 322.533 cv
270.353 322.54 li
270.353 320.374 li
270.265 320.368 li
cp
263.216 316.438 mo
263.216 316.311 263.318 316.209 263.444 316.209 cv
264.025 316.209 li
264.028 316.115 li
264.196 312.73 266.876 310.049 270.262 309.882 cv
270.353 309.877 li
270.353 309.298 li
270.353 309.172 270.457 309.069 270.583 309.069 cv
270.71 309.069 270.813 309.172 270.813 309.298 cv
270.813 309.877 li
270.907 309.882 li
274.293 310.049 276.971 312.73 277.139 316.115 cv
277.144 316.209 li
277.723 316.209 li
277.848 316.209 277.952 316.311 277.952 316.438 cv
277.952 316.564 277.848 316.667 277.723 316.667 cv
277.144 316.667 li
277.139 316.76 li
276.971 320.145 274.291 322.826 270.907 322.993 cv
270.813 322.996 li
270.813 323.576 li
270.813 323.703 270.711 323.808 270.583 323.808 cv
270.456 323.808 270.353 323.703 270.353 323.576 cv
270.353 322.996 li
270.262 322.993 li
266.876 322.826 264.196 320.145 264.028 316.76 cv
264.024 316.667 li
263.444 316.667 li
263.318 316.667 263.216 316.564 263.216 316.438 cv
cp
.776471 .129412 .152941 rgb
f
309.553 394.69 mo
309.553 407.16 299.444 417.269 286.974 417.269 cv
274.505 417.269 264.396 407.16 264.396 394.69 cv
264.396 382.221 274.505 372.113 286.974 372.113 cv
299.444 372.113 309.553 382.221 309.553 394.69 cv
cp
.945098 .403922 .160784 rgb
f
297.867 386.867 mo
297.867 392.883 292.99 397.76 286.974 397.76 cv
280.959 397.76 276.082 392.883 276.082 386.867 cv
276.082 380.852 280.959 375.975 286.974 375.975 cv
292.99 375.975 297.867 380.852 297.867 386.867 cv
cp
1 1 1 rgb
f
296.299 392.497 mo
292.407 398.94 289.398 405.879 287.352 413.123 cv
286.6 413.123 li
284.552 405.879 281.54 398.94 277.65 392.498 cv
296.299 392.497 li
cp
f
296.083 386.867 mo
296.083 391.897 292.008 395.977 286.974 395.977 cv
281.943 395.977 277.865 391.897 277.865 386.867 cv
277.865 381.837 281.943 377.758 286.974 377.758 cv
292.008 377.758 296.083 381.837 296.083 386.867 cv
cp
.776471 .129412 .152941 rgb
f
287.366 413.016 mo
287.366 413.233 287.19 413.407 286.975 413.407 cv
286.76 413.407 286.584 413.233 286.584 413.016 cv
286.584 412.801 286.76 412.626 286.975 412.626 cv
287.19 412.626 287.366 412.801 287.366 413.016 cv
cp
f
286.587 379.794 mo
282.975 379.991 280.099 382.867 279.902 386.482 cv
279.895 386.602 li
282.408 386.602 li
282.417 386.496 li
282.598 384.252 284.36 382.49 286.604 382.307 cv
286.708 382.299 li
286.708 379.788 li
286.587 379.794 li
cp
286.584 382.84 mo
284.665 383.026 283.136 384.555 282.948 386.475 cv
282.934 386.602 li
285.232 386.602 li
285.252 386.51 li
285.399 385.816 285.921 385.291 286.616 385.145 cv
286.708 385.126 li
286.708 382.829 li
286.584 382.84 li
cp
286.557 385.687 mo
286.197 385.814 285.921 386.092 285.794 386.449 cv
285.74 386.602 li
286.708 386.602 li
286.708 385.632 li
286.557 385.687 li
cp
287.239 386.602 mo
288.208 386.602 li
288.153 386.449 li
288.028 386.092 287.75 385.814 287.392 385.687 cv
287.239 385.632 li
287.239 386.602 li
cp
287.239 385.126 mo
287.331 385.145 li
288.028 385.291 288.551 385.816 288.697 386.51 cv
288.715 386.602 li
291.015 386.602 li
291 386.475 li
290.814 384.555 289.283 383.026 287.363 382.84 cv
287.239 382.829 li
287.239 385.126 li
cp
287.239 382.299 mo
287.344 382.307 li
289.589 382.49 291.348 384.252 291.535 386.496 cv
291.541 386.602 li
294.052 386.602 li
294.047 386.482 li
293.847 382.867 290.975 379.991 287.361 379.794 cv
287.239 379.788 li
287.239 382.299 li
cp
287.239 388.101 mo
287.392 388.047 li
287.75 387.92 288.028 387.642 288.153 387.286 cv
288.208 387.134 li
287.239 387.134 li
287.239 388.101 li
cp
285.794 387.286 mo
285.921 387.642 286.197 387.92 286.557 388.047 cv
286.708 388.101 li
286.708 387.134 li
285.74 387.134 li
285.794 387.286 li
cp
282.948 387.258 mo
283.136 389.178 284.665 390.708 286.584 390.895 cv
286.708 390.907 li
286.708 388.608 li
286.616 388.589 li
285.921 388.442 285.399 387.919 285.252 387.225 cv
285.232 387.134 li
282.934 387.134 li
282.948 387.258 li
cp
288.697 387.225 mo
288.551 387.92 288.028 388.442 287.331 388.589 cv
287.239 388.608 li
287.239 390.907 li
287.363 390.895 li
289.283 390.708 290.814 389.178 291 387.258 cv
291.015 387.134 li
288.715 387.134 li
288.697 387.225 li
cp
279.902 387.251 mo
280.099 390.868 282.975 393.741 286.587 393.94 cv
286.708 393.947 li
286.708 391.434 li
286.604 391.426 li
284.36 391.244 282.598 389.483 282.417 387.238 cv
282.408 387.134 li
279.895 387.134 li
279.902 387.251 li
cp
291.535 387.238 mo
291.348 389.483 289.589 391.244 287.344 391.426 cv
287.239 391.434 li
287.239 393.947 li
287.361 393.94 li
290.975 393.741 293.847 390.868 294.047 387.251 cv
294.052 387.134 li
291.541 387.134 li
291.535 387.238 li
cp
286.974 395.416 mo
286.829 395.416 286.708 395.297 286.708 395.15 cv
286.708 394.478 li
286.6 394.474 li
282.673 394.279 279.562 391.169 279.369 387.242 cv
279.365 387.134 li
278.69 387.134 li
278.544 387.134 278.425 387.013 278.425 386.867 cv
278.425 386.72 278.544 386.602 278.69 386.602 cv
279.365 386.602 li
279.369 386.492 li
279.562 382.564 282.673 379.456 286.6 379.261 cv
286.708 379.255 li
286.708 378.583 li
286.708 378.437 286.829 378.316 286.974 378.316 cv
287.12 378.316 287.239 378.437 287.239 378.583 cv
287.239 379.255 li
287.349 379.261 li
291.276 379.456 294.385 382.564 294.579 386.492 cv
294.582 386.602 li
295.257 386.602 li
295.405 386.602 295.524 386.72 295.524 386.867 cv
295.524 387.013 295.405 387.134 295.257 387.134 cv
294.582 387.134 li
294.579 387.242 li
294.385 391.169 291.276 394.279 287.349 394.474 cv
287.239 394.478 li
287.239 395.15 li
287.239 395.297 287.12 395.416 286.974 395.416 cv
cp
.992157 .737255 .329412 rgb
f
432.446 320.628 mo
432.446 332.599 422.742 342.304 410.769 342.304 cv
398.799 342.304 389.094 332.599 389.094 320.628 cv
389.094 308.656 398.799 298.952 410.769 298.952 cv
422.742 298.952 432.446 308.656 432.446 320.628 cv
cp
.945098 .403922 .160784 rgb
f
425.374 319.126 mo
425.374 326.741 419.204 332.91 411.591 332.91 cv
403.98 332.91 397.808 326.741 397.808 319.126 cv
397.808 311.513 403.98 305.343 411.591 305.343 cv
419.204 305.343 425.374 311.513 425.374 319.126 cv
cp
1 1 1 rgb
f
411.591 308.651 mo
405.815 308.651 401.115 313.349 401.115 319.126 cv
401.115 324.903 405.815 329.602 411.591 329.602 cv
417.367 329.602 422.068 324.903 422.068 319.126 cv
422.068 313.349 417.367 308.651 411.591 308.651 cv
cp
411.591 332.316 mo
404.319 332.316 398.4 326.4 398.4 319.126 cv
398.4 311.854 404.319 305.937 411.591 305.937 cv
418.865 305.937 424.782 311.854 424.782 319.126 cv
424.782 326.4 418.865 332.316 411.591 332.316 cv
cp
.992157 .737255 .329412 rgb
f
411.591 314.004 mo
408.768 314.004 406.469 316.303 406.469 319.126 cv
406.469 321.95 408.768 324.248 411.591 324.248 cv
414.414 324.248 416.713 321.95 416.713 319.126 cv
416.713 316.303 414.414 314.004 411.591 314.004 cv
cp
411.591 326.962 mo
407.272 326.962 403.757 323.448 403.757 319.126 cv
403.757 314.807 407.272 311.291 411.591 311.291 cv
415.912 311.291 419.426 314.807 419.426 319.126 cv
419.426 323.448 415.912 326.962 411.591 326.962 cv
cp
f
411.591 321.499 mo
410.283 321.499 409.22 320.434 409.22 319.126 cv
409.22 317.82 410.283 316.756 411.591 316.756 cv
412.897 316.756 413.961 317.82 413.961 319.126 cv
413.961 320.434 412.897 321.499 411.591 321.499 cv
cp
f
390.014 325.893 mo
401.455 321.138 li
399.436 318.451 li
411.591 319.275 li
405.975 327.082 li
404.147 324.72 li
393.062 329.332 li
390.014 325.893 li
cp
.211765 .219608 .380392 rgb
f
358.854 270.402 mo
358.854 281.293 350.025 290.122 339.134 290.122 cv
328.243 290.122 319.414 281.293 319.414 270.402 cv
319.414 259.51 328.243 250.683 339.134 250.683 cv
350.025 250.683 358.854 259.51 358.854 270.402 cv
.945098 .403922 .160784 rgb
f
gsave
326.787 282.748 mo
331.099 277.36 li
331.637 277.899 li
332.175 278.437 li
326.787 282.748 li
clp
326.787 277.36 mo
332.175 277.36 li
332.175 282.748 li
326.787 282.748 li
cp
.960784 .584314 .415686 rgb
f
grestore
343.718 267.872 mo
342.691 266.846 li
341.665 265.82 li
347.308 261.765 li
347.541 261.997 li
347.773 262.23 li
343.718 267.872 li
.960784 .584314 .415686 rgb
f
333.249 278.338 mo
343.719 267.871 li
341.664 265.82 li
331.198 276.287 li
330.691 276.792 330.739 277.662 331.307 278.229 cv
331.874 278.796 332.743 278.845 333.249 278.338 cv
cp
.211765 .219608 .380392 rgb
f
341.98 265.594 mo
341.938 265.386 li
341.632 263.879 342.102 262.319 343.188 261.232 cv
346.323 258.096 li
346.462 258.065 li
346.551 258.176 li
346.969 262.01 li
341.98 265.594 li
cp
.992157 .737255 .329412 rgb
f
343.943 267.557 mo
344.15 267.599 li
345.657 267.905 347.217 267.435 348.305 266.348 cv
351.44 263.214 li
351.472 263.075 li
351.361 262.986 li
347.526 262.569 li
343.943 267.557 li
cp
f
351.479 282.749 mo
346.092 278.437 li
346.631 277.899 li
347.168 277.361 li
351.479 282.749 li
.960784 .584314 .415686 rgb
f
334.552 267.871 mo
330.497 262.228 li
330.728 261.995 li
330.961 261.763 li
336.604 265.817 li
335.578 266.845 li
334.552 267.871 li
f
347.071 276.287 mo
336.603 265.817 li
334.552 267.872 li
345.018 278.338 li
345.525 278.845 346.394 278.797 346.961 278.228 cv
347.528 277.662 347.576 276.793 347.071 276.287 cv
cp
.239216 .678431 .87451 rgb
f
334.326 267.556 mo
334.118 267.598 li
332.612 267.904 331.052 267.434 329.964 266.347 cv
326.828 263.212 li
326.797 263.073 li
326.908 262.985 li
330.742 262.567 li
334.326 267.556 li
cp
1 1 1 rgb
f
336.289 265.593 mo
336.331 265.386 li
336.637 263.879 336.168 262.318 335.081 261.23 cv
331.946 258.095 li
331.807 258.064 li
331.719 258.175 li
331.301 262.01 li
336.289 265.593 li
cp
f
450 225 mo
225 225 li
225 0 li
450 0 li
450 225 li
.988235 .717647 .180392 rgb
f
304.133 210.925 mo
305.963 210.925 307.23 210.331 307.23 208.308 cv
307.23 206.447 306.092 205.789 304.166 205.789 cv
302.56 205.789 li
302.56 210.925 li
304.133 210.925 li
cp
304.182 205.001 mo
306.734 205.001 308.242 206.013 308.242 208.292 cv
308.242 210.764 306.525 211.711 304.133 211.711 cv
302.56 211.711 li
302.56 215.998 li
301.598 215.998 li
301.598 205.001 li
304.182 205.001 li
cp
.172549 .341176 .470588 rgb
f
314.762 207.522 mo
314.586 208.405 li
314.346 208.34 314.137 208.308 313.848 208.308 cv
312.676 208.308 312.049 209.143 311.6 210.861 cv
311.6 215.998 li
310.668 215.998 li
310.668 207.602 li
311.471 207.602 li
311.551 209.48 li
312.002 208.1 312.756 207.425 313.928 207.425 cv
314.248 207.425 314.537 207.458 314.762 207.522 cv
cp
f
316.818 211.808 mo
316.818 214.167 317.766 215.387 319.371 215.387 cv
320.977 215.387 321.955 214.184 321.955 211.776 cv
321.955 209.417 321.008 208.212 319.387 208.212 cv
317.799 208.212 316.818 209.4 316.818 211.808 cv
cp
322.935 211.776 mo
322.935 214.489 321.586 216.174 319.371 216.174 cv
317.141 216.174 315.824 214.504 315.824 211.808 cv
315.824 209.111 317.188 207.425 319.387 207.425 cv
321.619 207.425 322.935 209.031 322.935 211.776 cv
cp
f
336.037 209.994 mo
336.037 215.998 li
335.105 215.998 li
335.105 210.123 li
335.105 208.758 334.543 208.18 333.678 208.18 cv
332.666 208.18 331.959 208.886 331.316 209.914 cv
331.316 215.998 li
330.387 215.998 li
330.387 210.123 li
330.387 208.758 329.824 208.18 328.957 208.18 cv
327.945 208.18 327.225 208.886 326.598 209.914 cv
326.598 215.998 li
325.666 215.998 li
325.666 207.602 li
326.469 207.602 li
326.549 209.031 li
327.176 208.068 328.059 207.425 329.135 207.425 cv
330.209 207.425 330.965 208.051 331.221 209.095 cv
331.848 208.1 332.746 207.425 333.853 207.425 cv
335.201 207.425 336.037 208.405 336.037 209.994 cv
cp
f
339.684 211.808 mo
339.684 214.167 340.631 215.387 342.236 215.387 cv
343.842 215.387 344.82 214.184 344.82 211.776 cv
344.82 209.417 343.873 208.212 342.252 208.212 cv
340.664 208.212 339.684 209.4 339.684 211.808 cv
cp
345.801 211.776 mo
345.801 214.489 344.451 216.174 342.236 216.174 cv
340.006 216.174 338.689 214.504 338.689 211.808 cv
338.689 209.111 340.053 207.425 342.252 207.425 cv
344.484 207.425 345.801 209.031 345.801 211.776 cv
cp
f
352.352 215.644 mo
351.838 215.982 351.262 216.174 350.586 216.174 cv
349.318 216.174 348.531 215.419 348.531 213.958 cv
348.531 208.357 li
347.119 208.357 li
347.119 207.602 li
348.531 207.602 li
348.531 205.596 li
349.463 205.483 li
349.463 207.602 li
351.631 207.602 li
351.518 208.357 li
349.463 208.357 li
349.463 213.911 li
349.463 214.89 349.848 215.372 350.699 215.372 cv
351.164 215.372 351.566 215.243 351.982 214.986 cv
352.352 215.644 li
cp
f
354.008 215.998 mo
354.008 207.602 li
354.939 207.602 li
354.939 215.998 li
354.008 215.998 li
cp
355.164 204.585 mo
355.164 204.954 354.891 205.258 354.457 205.258 cv
354.039 205.258 353.768 204.954 353.768 204.585 cv
353.768 204.215 354.039 203.911 354.457 203.911 cv
354.891 203.911 355.164 204.215 355.164 204.585 cv
cp
f
358.664 211.808 mo
358.664 214.167 359.611 215.387 361.217 215.387 cv
362.82 215.387 363.801 214.184 363.801 211.776 cv
363.801 209.417 362.853 208.212 361.232 208.212 cv
359.643 208.212 358.664 209.4 358.664 211.808 cv
cp
364.779 211.776 mo
364.779 214.489 363.432 216.174 361.217 216.174 cv
358.984 216.174 357.668 214.504 357.668 211.808 cv
357.668 209.111 359.033 207.425 361.232 207.425 cv
363.463 207.425 364.779 209.031 364.779 211.776 cv
cp
f
373.563 209.994 mo
373.563 215.998 li
372.633 215.998 li
372.633 210.123 li
372.633 208.742 372.07 208.18 371.043 208.18 cv
369.904 208.18 369.133 208.886 368.443 209.914 cv
368.443 215.998 li
367.512 215.998 li
367.512 207.602 li
368.314 207.602 li
368.41 209.031 li
369.068 208.068 370 207.425 371.219 207.425 cv
372.744 207.425 373.563 208.373 373.563 209.994 cv
cp
f
334.453 140.744 mo
334.453 141.382 333.936 141.9 333.298 141.9 cv
300.694 141.9 li
300.056 141.9 299.538 141.382 299.538 140.744 cv
299.538 108.14 li
299.538 107.501 300.056 106.983 300.694 106.983 cv
333.298 106.983 li
333.936 106.983 334.453 107.501 334.453 108.14 cv
334.453 140.744 li
cp
.776471 .129412 .152941 rgb
f
334.453 108.134 mo
334.453 124.441 li
334.453 140.747 li
369.369 149.673 li
369.369 124.441 li
369.369 99.2087 li
334.453 108.134 li
cp
.239216 .678431 .87451 rgb
f
373.813 145.23 mo
373.813 147.684 371.824 149.673 369.369 149.673 cv
369.369 99.2114 li
371.824 99.2114 373.813 101.201 373.813 103.655 cv
373.813 145.23 li
cp
.992157 .737255 .329412 rgb
f
288.902 134.213 mo
288.902 135.341 289.816 136.255 290.944 136.255 cv
299.538 136.255 li
299.538 112.629 li
290.944 112.629 li
289.816 112.629 288.902 113.543 288.902 114.671 cv
288.902 134.213 li
cp
.239216 .678431 .87451 rgb
f
325.438 141.897 mo
307.489 141.897 li
313.763 171.225 li
313.964 172.167 314.797 172.84 315.76 172.84 cv
329.533 172.84 li
330.149 172.84 330.732 172.561 331.121 172.082 cv
331.508 171.602 331.658 170.974 331.529 170.371 cv
325.438 141.897 li
cp
f
297.94 125.23 mo
290.499 125.23 li
290.499 123.65 li
297.94 123.65 li
297.94 125.23 li
cp
.301961 .301961 .301961 rgb
f
297.94 122.429 mo
290.499 122.429 li
290.499 120.85 li
297.94 120.85 li
297.94 122.429 li
cp
f
297.94 119.629 mo
290.499 119.629 li
290.499 118.051 li
297.94 118.051 li
297.94 119.629 li
cp
f
297.94 116.828 mo
290.499 116.828 li
290.499 115.25 li
297.94 115.25 li
297.94 116.828 li
cp
f
261.067 26.4727 mo
261.067 23.3099 li
267.054 21.5767 li
267.054 26.4727 li
267.054 31.3681 li
261.067 29.6363 li
261.067 26.4727 li
cp
259.973 29.6363 mo
259.973 29.7606 259.873 29.8599 259.75 29.8599 cv
253.424 29.8599 li
253.301 29.8599 253.2 29.7606 253.2 29.6363 cv
253.2 23.3112 li
253.2 23.1873 253.301 23.0871 253.424 23.0871 cv
259.75 23.0871 li
259.873 23.0871 259.973 23.1873 259.973 23.3112 cv
259.973 29.6363 li
cp
259.326 35.9556 mo
259.251 36.0483 259.136 36.102 259.017 36.102 cv
256.347 36.102 li
256.159 36.102 255.999 35.9706 255.958 35.7895 cv
254.888 30.6786 li
258.37 30.6786 li
259.405 35.6234 li
259.43 35.7407 259.402 35.8629 259.326 35.9556 cv
cp
252.153 28.7652 mo
251.291 28.7652 li
251.075 28.7652 250.896 28.5873 250.896 28.3689 cv
250.896 24.5773 li
250.896 24.3588 251.075 24.18 251.291 24.18 cv
252.153 24.18 li
252.153 28.7652 li
cp
263.102 41.3824 mo
263.102 39.9155 263.93 37.8914 265.788 36.4364 cv
268.627 34.2184 270.601 30.8905 270.601 27.0128 cv
270.601 20.5739 265.378 15.3532 258.94 15.3532 cv
252.499 15.3532 247.276 20.5739 247.276 27.0128 cv
247.276 30.8905 249.251 34.2184 252.088 36.4364 cv
253.947 37.8914 254.774 39.9155 254.774 41.3824 cv
246.964 43.2466 241.651 46.9516 242.051 47.7105 cv
244.71 52.7629 253.079 54.9277 258.94 54.9277 cv
264.798 54.9277 273.165 52.7629 275.825 47.7105 cv
276.224 46.9516 270.912 43.2466 263.102 41.3824 cv
cp
.172549 .341176 .470588 rgb
f
426.474 57.3078 mo
421.542 57.3078 417.544 53.3096 417.544 48.378 cv
417.544 43.4465 421.542 39.4484 426.474 39.4484 cv
431.406 39.4484 435.404 43.4465 435.404 48.378 cv
435.404 53.3096 431.406 57.3078 426.474 57.3078 cv
.945098 .811765 .541176 rgb
f
406.243 206.579 mo
401.312 206.579 397.314 202.581 397.314 197.65 cv
397.314 192.718 401.312 188.72 406.243 188.72 cv
411.175 188.72 415.173 192.718 415.173 197.65 cv
415.173 202.581 411.175 206.579 406.243 206.579 cv
.992157 .772549 .345098 rgb
f
251.247 199.998 mo
246.315 199.998 242.318 196 242.318 191.068 cv
242.318 186.137 246.315 182.139 251.247 182.139 cv
256.178 182.139 260.177 186.137 260.177 191.068 cv
260.177 196 256.178 199.998 251.247 199.998 cv
f
253.44 154.868 mo
246.877 154.868 241.556 149.546 241.556 142.983 cv
241.556 136.419 246.877 131.097 253.44 131.097 cv
260.004 131.097 265.325 136.419 265.325 142.983 cv
265.325 149.546 260.004 154.868 253.44 154.868 cv
.945098 .811765 .541176 rgb
f
385.925 44.2297 mo
379.36 44.2297 374.039 38.9079 374.039 32.3442 cv
374.039 25.7805 379.36 20.4586 385.925 20.4586 cv
392.488 20.4586 397.809 25.7805 397.809 32.3442 cv
397.809 38.9079 392.488 44.2297 385.925 44.2297 cv
.996078 .858823 .592157 rgb
f
296.051 29.777 mo
293.272 29.777 291.02 27.5251 291.02 24.7469 cv
291.02 21.9686 293.272 19.7169 296.051 19.7169 cv
298.828 19.7169 301.08 21.9686 301.08 24.7469 cv
301.08 27.5251 298.828 29.777 296.051 29.777 cv
f
430.396 169.715 mo
427.618 169.715 425.366 167.464 425.366 164.686 cv
425.366 161.907 427.618 159.655 430.396 159.655 cv
433.174 159.655 435.426 161.907 435.426 164.686 cv
435.426 167.464 433.174 169.715 430.396 169.715 cv
f
429.495 29.6547 mo
427.826 29.6547 426.474 28.303 426.474 26.6341 cv
426.474 24.9649 427.826 23.6132 429.495 23.6132 cv
431.164 23.6132 432.516 24.9649 432.516 26.6341 cv
432.516 28.303 431.164 29.6547 429.495 29.6547 cv
.945098 .811765 .541176 rgb
f
248.42 71.0073 mo
246.751 71.0073 245.399 69.6555 245.399 67.9864 cv
245.399 66.3174 246.751 64.9657 248.42 64.9657 cv
250.089 64.9657 251.441 66.3174 251.441 67.9864 cv
251.441 69.6555 250.089 71.0073 248.42 71.0073 cv
.968627 .835294 .564706 rgb
f
429.736 133.003 mo
429.736 134.673 428.383 136.024 426.715 136.024 cv
425.046 136.024 423.693 134.673 423.693 133.003 cv
423.693 131.335 425.046 129.983 426.715 129.983 cv
428.383 129.983 429.736 131.335 429.736 133.003 cv
cp
.172549 .341176 .470588 rgb
f
285.309 199.998 mo
285.309 202.776 283.058 205.028 280.279 205.028 cv
277.501 205.028 275.249 202.776 275.249 199.998 cv
275.249 197.22 277.501 194.968 280.279 194.968 cv
283.058 194.968 285.309 197.22 285.309 199.998 cv
cp
f
337.116 102.707 mo
333.999 101.069 li
330.884 102.707 li
331.479 99.2386 li
328.962 96.7817 li
332.442 96.275 li
333.999 93.1202 li
335.557 96.275 li
339.038 96.7817 li
336.521 99.2386 li
337.116 102.707 li
.992157 .772549 .345098 rgb
f
345.763 76.217 mo
346.888 81.6878 li
352.036 83.8622 li
347.182 86.625 li
346.706 92.1898 li
342.578 88.4272 li
337.136 89.6959 li
339.44 84.6057 li
336.553 79.8236 li
342.106 80.4401 li
345.763 76.217 li
cp
.172549 .341176 .470588 rgb
f
322.491 87.932 mo
321.91 81.8859 li
316.603 78.9367 li
322.172 76.5167 li
323.338 70.5564 li
327.357 75.1056 li
333.389 74.373 li
330.306 79.6043 li
332.865 85.1102 li
326.936 83.7931 li
322.491 87.932 li
.945098 .811765 .541176 rgb
f
339.036 188.548 mo
297.341 188.548 263.539 154.747 263.539 113.051 cv
263.539 90.9784 273.009 71.1206 288.109 57.316 cv
288.107 57.7922 288.155 58.3066 288.254 58.8441 cv
273.794 72.3965 264.759 91.6682 264.759 113.051 cv
264.759 154.073 298.014 187.328 339.036 187.328 cv
380.058 187.328 413.313 154.073 413.313 113.051 cv
413.313 89.0843 401.961 67.7681 384.342 54.1866 cv
384.583 53.8186 384.78 53.4505 384.916 53.089 cv
402.921 66.8874 414.533 88.6141 414.533 113.051 cv
414.533 154.747 380.731 188.548 339.036 188.548 cv
288.783 58.3538 mo
288.701 57.7661 288.691 57.219 288.75 56.7372 cv
289.385 56.1697 290.034 55.6087 290.688 55.0627 cv
290.82 55.1365 290.938 55.2391 291.046 55.371 cv
291.193 55.5521 291.313 55.7825 291.41 56.0499 cv
290.515 56.7978 289.64 57.5653 288.783 58.3538 cv
291.909 55.6359 mo
291.803 55.389 291.676 55.1686 291.525 54.9822 cv
291.421 54.8539 291.308 54.7435 291.186 54.6513 cv
304.211 43.9675 320.876 37.5535 339.036 37.5535 cv
354.7 37.5535 369.25 42.3239 381.312 50.491 cv
380.978 50.7034 380.642 50.9712 380.312 51.2887 cv
368.508 43.3847 354.309 38.7734 339.036 38.7734 cv
321.144 38.7734 304.731 45.0983 291.909 55.6359 cv
383.75 53.7344 mo
382.826 53.0369 381.885 52.3605 380.929 51.7058 cv
381.28 51.3872 381.636 51.1333 381.986 50.9528 cv
382.766 51.4931 383.536 52.0488 384.294 52.6173 cv
384.189 52.9719 384 53.3484 383.75 53.7344 cv
.996078 .858823 .592157 rgb
f
356.18 44.343 mo
356.18 58.3027 344.864 69.6195 330.904 69.6195 cv
316.945 69.6195 305.628 58.3027 305.628 44.343 cv
305.628 30.3834 316.945 19.0674 330.904 19.0674 cv
344.864 19.0674 356.18 30.3834 356.18 44.343 cv
cp
.172549 .341176 .470588 rgb
f
333.499 26.394 mo
324.119 26.394 316.516 32.8557 316.516 40.8265 cv
316.516 43.9326 317.681 46.8022 319.645 49.1576 cv
319.16 50.4303 318.348 52.1346 317.063 53.7139 cv
314.361 57.0379 311.328 57.4923 311.328 58.1797 cv
311.328 58.8687 315.69 58.7579 320.262 56.9351 cv
322.807 55.9218 324.587 54.6957 325.773 53.6691 cv
328.092 54.6798 330.713 55.2599 333.499 55.2599 cv
342.877 55.2599 350.479 48.7982 350.479 40.8265 cv
350.479 32.8557 342.877 26.394 333.499 26.394 cv
cp
.239216 .678431 .87451 rgb
f
326.438 42.4823 mo
326.438 43.6197 325.516 44.5443 324.376 44.5443 cv
323.239 44.5443 322.315 43.6197 322.315 42.4823 cv
322.315 41.3433 323.239 40.4204 324.376 40.4204 cv
325.516 40.4204 326.438 41.3433 326.438 42.4823 cv
cp
1 1 1 rgb
f
335.898 42.4823 mo
335.898 43.6197 334.976 44.5443 333.836 44.5443 cv
332.698 44.5443 331.775 43.6197 331.775 42.4823 cv
331.775 41.3433 332.698 40.4204 333.836 40.4204 cv
334.976 40.4204 335.898 41.3433 335.898 42.4823 cv
cp
f
345.359 42.4823 mo
345.359 43.6197 344.434 44.5443 343.297 44.5443 cv
342.158 44.5443 341.235 43.6197 341.235 42.4823 cv
341.235 41.3433 342.158 40.4204 343.297 40.4204 cv
344.434 40.4204 345.359 41.3433 345.359 42.4823 cv
cp
f
395.793 101.677 mo
387.55 101.677 380.868 107.356 380.868 114.361 cv
380.868 117.091 381.892 119.613 383.618 121.683 cv
383.191 122.802 382.478 124.299 381.348 125.688 cv
378.974 128.609 376.308 129.008 376.308 129.612 cv
376.308 130.218 380.142 130.12 384.16 128.518 cv
386.397 127.628 387.961 126.55 389.004 125.648 cv
391.041 126.536 393.345 127.046 395.793 127.046 cv
404.036 127.046 410.717 121.367 410.717 114.361 cv
410.717 107.356 404.036 101.677 395.793 101.677 cv
cp
.239216 .678431 .87451 rgb
f
289.388 93.5969 mo
289.388 105.941 279.382 115.948 267.038 115.948 cv
254.694 115.948 244.686 105.941 244.686 93.5969 cv
244.686 81.2527 254.694 71.2463 267.038 71.2463 cv
279.382 71.2463 289.388 81.2527 289.388 93.5969 cv
cp
.172549 .341176 .470588 rgb
f
278.217 93.5974 mo
278.217 99.7672 273.209 104.778 267.037 104.778 cv
260.865 104.778 255.857 99.7672 255.857 93.5974 cv
255.857 87.4248 260.865 82.4168 267.037 82.4168 cv
273.209 82.4168 278.217 87.4248 278.217 93.5974 cv
cp
.301961 .301961 .301961 rgb
f
280.465 89.2318 mo
279.669 86.7771 277.037 85.4385 274.583 86.2383 cv
272.13 87.032 270.79 89.6651 271.583 92.1199 cv
272.387 94.5695 275.019 95.916 277.471 95.1152 cv
279.92 94.3172 281.263 91.6866 280.465 89.2318 cv
cp
275.339 105.019 mo
277.427 103.504 277.888 100.586 276.368 98.499 cv
274.856 96.4116 271.936 95.9511 269.849 97.4646 cv
267.767 98.985 267.299 101.905 268.818 103.99 cv
270.334 106.072 273.251 106.537 275.339 105.019 cv
cp
258.74 105.021 mo
260.827 106.54 263.743 106.077 265.258 103.987 cv
266.777 101.902 266.313 98.985 264.228 97.4663 cv
262.138 95.9564 259.218 96.4143 257.703 98.5017 cv
256.191 100.588 256.652 103.504 258.74 105.021 cv
cp
253.609 89.2344 mo
252.808 91.6893 254.151 94.3198 256.607 95.1152 cv
259.058 95.916 261.69 94.5738 262.488 92.1199 cv
263.28 89.6678 261.943 87.032 259.49 86.2365 cv
257.038 85.4428 254.405 86.7797 253.609 89.2344 cv
cp
267.036 79.4768 mo
264.455 79.4768 262.367 81.566 262.37 84.1465 cv
262.367 86.7243 264.456 88.8143 267.036 88.8143 cv
269.614 88.8117 271.707 86.7216 271.706 84.1439 cv
271.704 81.566 269.616 79.4768 267.036 79.4768 cv
cp
267.037 90.6969 mo
265.436 90.6969 264.137 91.996 264.137 93.5974 cv
264.137 95.1987 265.436 96.4977 267.037 96.4977 cv
268.638 96.4977 269.937 95.1987 269.937 93.5974 cv
269.937 91.996 268.638 90.6969 267.037 90.6969 cv
cp
282.827 93.5974 mo
282.827 102.318 275.758 109.387 267.037 109.387 cv
258.316 109.387 251.247 102.318 251.247 93.5974 cv
251.247 84.8768 258.316 77.8078 267.037 77.8078 cv
275.758 77.8078 282.827 84.8768 282.827 93.5974 cv
cp
1 1 1 rgb
f
426.933 80.2643 mo
426.933 90.9931 418.236 99.6908 407.507 99.6908 cv
396.779 99.6908 388.081 90.9931 388.081 80.2643 cv
388.081 69.5355 396.779 60.8387 407.507 60.8387 cv
418.236 60.8387 426.933 69.5355 426.933 80.2643 cv
cp
.172549 .341176 .470588 rgb
f
418.221 69.7117 mo
415.729 66.3719 408.256 66.9748 408.248 66.9748 cv
408.246 66.9748 li
408.246 83.7303 li
406.893 82.5978 404.959 81.8829 402.803 81.8829 cv
398.713 81.8829 395.399 84.4413 395.399 87.5957 cv
395.399 90.7527 398.713 93.3122 402.803 93.3122 cv
406.894 93.3122 410.209 90.7527 410.209 87.5957 cv
410.209 73.4726 li
411.495 73.2511 415.128 73.3161 416.569 75.364 cv
418.199 77.6821 417.387 80.1219 417.387 80.1219 cv
417.387 80.1219 421.788 74.4904 418.221 69.7117 cv
cp
.941176 .592157 .137255 rgb
f
278.095 128.838 mo
276.197 128.838 274.658 127.649 274.658 126.184 cv
274.658 124.719 276.197 123.532 278.095 123.532 cv
279.097 123.532 279.994 123.863 280.622 124.389 cv
280.622 116.61 li
280.623 116.61 li
280.624 116.61 280.868 116.591 281.249 116.591 cv
282.303 116.591 284.403 116.742 285.253 117.881 cv
286.909 120.099 284.866 122.714 284.866 122.714 cv
284.866 122.714 285.243 121.581 284.486 120.505 cv
283.971 119.773 282.853 119.587 282.093 119.587 cv
281.866 119.587 281.671 119.603 281.534 119.627 cv
281.534 126.184 li
281.534 127.649 279.995 128.838 278.095 128.838 cv
.992157 .772549 .345098 rgb
f
413.074 166.177 mo
413.074 178.749 402.884 188.941 390.311 188.941 cv
377.74 188.941 367.549 178.749 367.549 166.177 cv
367.549 153.606 377.74 143.415 390.311 143.415 cv
402.884 143.415 413.074 153.606 413.074 166.177 cv
cp
.172549 .341176 .470588 rgb
f
387.443 149.291 mo
388.197 148.518 389.231 148.083 390.311 148.083 cv
391.391 148.083 392.425 148.519 393.179 149.292 cv
393.272 149.386 li
393.39 149.329 li
394.363 148.861 395.485 148.805 396.499 149.174 cv
397.514 149.544 398.337 150.307 398.781 151.292 cv
398.835 151.411 li
398.967 151.398 li
400.042 151.291 401.114 151.622 401.942 152.316 cv
402.769 153.01 403.281 154.009 403.362 155.087 cv
403.372 155.218 li
403.5 155.25 li
404.546 155.518 405.441 156.195 405.981 157.131 cv
406.521 158.066 406.66 159.18 406.368 160.219 cv
406.332 160.346 li
406.442 160.421 li
407.334 161.03 407.943 161.972 408.131 163.036 cv
408.318 164.1 408.069 165.194 407.439 166.071 cv
407.362 166.178 li
407.439 166.285 li
408.069 167.162 408.318 168.256 408.131 169.32 cv
407.943 170.383 407.334 171.326 406.442 171.935 cv
406.332 172.009 li
406.368 172.136 li
406.66 173.176 406.521 174.29 405.981 175.225 cv
405.441 176.161 404.546 176.838 403.5 177.105 cv
403.372 177.138 li
403.362 177.269 li
403.281 178.345 402.769 179.344 401.942 180.039 cv
401.115 180.733 400.043 181.064 398.968 180.957 cv
398.835 180.943 li
398.781 181.064 li
398.337 182.048 397.514 182.811 396.499 183.181 cv
395.485 183.55 394.363 183.495 393.39 183.027 cv
393.272 182.969 li
393.179 183.064 li
392.425 183.837 391.391 184.273 390.311 184.273 cv
389.231 184.273 388.198 183.838 387.444 183.065 cv
387.349 182.969 li
387.231 183.027 li
386.258 183.495 385.136 183.55 384.122 183.181 cv
383.107 182.811 382.284 182.048 381.84 181.064 cv
381.786 180.943 li
381.653 180.957 li
380.579 181.064 379.507 180.733 378.679 180.039 cv
377.852 179.345 377.34 178.346 377.259 177.27 cv
377.249 177.138 li
377.121 177.105 li
376.075 176.838 375.18 176.161 374.641 175.225 cv
374.1 174.29 373.961 173.176 374.253 172.136 cv
374.289 172.009 li
374.18 171.935 li
373.288 171.326 372.679 170.383 372.492 169.32 cv
372.303 168.257 372.553 167.163 373.183 166.286 cv
373.261 166.178 li
373.183 166.07 li
372.553 165.193 372.303 164.099 372.492 163.036 cv
372.679 161.972 373.288 161.03 374.18 160.421 cv
374.289 160.346 li
374.253 160.219 li
373.961 159.18 374.1 158.066 374.641 157.131 cv
375.18 156.195 376.075 155.518 377.121 155.25 cv
377.249 155.218 li
377.259 155.086 li
377.34 154.008 377.852 153.01 378.68 152.316 cv
379.507 151.622 380.58 151.291 381.654 151.398 cv
381.786 151.411 li
381.84 151.292 li
382.284 150.307 383.107 149.544 384.122 149.174 cv
385.136 148.805 386.258 148.861 387.231 149.329 cv
387.349 149.386 li
387.443 149.291 li
cp
.992157 .737255 .329412 rgb
f
390.309 150.288 mo
381.535 150.288 374.423 157.401 374.423 166.179 cv
374.423 174.954 381.535 182.067 390.309 182.067 cv
399.083 182.067 406.198 174.954 406.198 166.179 cv
406.198 157.401 399.083 150.288 390.309 150.288 cv
cp
406.8 166.179 mo
406.8 175.283 399.417 182.666 390.309 182.666 cv
381.206 182.666 373.823 175.283 373.823 166.179 cv
373.823 157.072 381.206 149.69 390.309 149.69 cv
399.417 149.69 406.8 157.072 406.8 166.179 cv
cp
.172549 .341176 .470588 rgb
f
382.816 163.734 mo
382.063 164.894 li
381.4 164.442 380.767 164.216 380.105 164.216 cv
379.291 164.216 378.854 164.533 378.854 165.014 cv
378.854 165.542 379.17 165.782 380.527 166.159 cv
382.153 166.596 383.072 167.259 383.072 168.675 cv
383.072 170.333 381.536 171.206 379.713 171.206 cv
378.342 171.206 377.272 170.739 376.534 170.077 cv
377.513 168.976 li
378.116 169.459 378.854 169.775 379.652 169.775 cv
380.527 169.775 381.084 169.398 381.084 168.841 cv
381.084 168.148 380.767 167.938 379.275 167.516 cv
377.633 167.063 376.911 166.28 376.911 165.105 cv
376.911 163.779 378.131 162.785 379.983 162.785 cv
381.129 162.785 382.063 163.146 382.816 163.734 cv
cp
.945098 .403922 .160784 rgb
f
388.632 168.826 mo
388.632 167.214 li
387.833 167.214 li
386.582 167.214 385.965 167.666 385.965 168.6 cv
385.965 169.368 386.357 169.805 387.095 169.805 cv
387.772 169.805 388.27 169.459 388.632 168.826 cv
cp
390.53 168.871 mo
390.53 169.519 390.741 169.745 391.132 169.896 cv
390.725 171.176 li
389.852 171.101 389.279 170.784 388.962 170.016 cv
388.405 170.86 387.531 171.206 386.582 171.206 cv
384.986 171.206 384.007 170.197 384.007 168.75 cv
384.007 167.018 385.317 166.084 387.637 166.084 cv
388.632 166.084 li
388.632 165.632 li
388.632 164.592 388.164 164.246 387.139 164.246 cv
386.598 164.246 385.83 164.397 385.031 164.668 cv
384.579 163.357 li
385.558 162.98 386.568 162.785 387.472 162.785 cv
389.595 162.785 390.53 163.764 390.53 165.527 cv
390.53 168.871 li
cp
f
394.718 169.037 mo
394.718 169.474 394.854 169.655 395.171 169.655 cv
395.321 169.655 395.487 169.624 395.623 169.579 cv
396.029 170.935 li
395.637 171.101 395.155 171.206 394.658 171.206 cv
393.468 171.206 392.79 170.499 392.79 169.172 cv
392.79 159.817 li
394.718 159.606 li
394.718 169.037 li
cp
f
401.784 166.25 mo
401.784 164.939 401.317 164.156 400.233 164.156 cv
399.328 164.156 398.771 164.758 398.651 166.34 cv
401.784 166.34 li
401.784 166.25 li
cp
403.652 167.59 mo
398.651 167.59 li
398.787 169.218 399.555 169.745 400.61 169.745 cv
401.317 169.745 401.905 169.519 402.598 169.037 cv
403.396 170.136 li
402.613 170.769 401.648 171.206 400.443 171.206 cv
397.973 171.206 396.647 169.564 396.647 167.048 cv
396.647 164.623 397.927 162.785 400.188 162.785 cv
402.417 162.785 403.698 164.292 403.698 166.807 cv
403.698 167.063 403.667 167.379 403.652 167.59 cv
cp
f
308.63 169.715 mo
308.63 180.734 299.7 189.667 288.679 189.667 cv
277.661 189.667 268.729 180.734 268.729 169.715 cv
268.729 158.697 277.661 149.765 288.679 149.765 cv
299.7 149.765 308.63 158.697 308.63 169.715 cv
cp
.172549 .341176 .470588 rgb
f
284.501 186.415 mo
273.597 175.511 li
285.879 163.23 li
296.783 174.132 li
284.501 186.415 li
cp
.945098 .403922 .160784 rgb
f
294.397 165.615 mo
293.709 164.927 292.596 164.927 291.907 165.615 cv
291.221 166.303 291.221 167.416 291.908 168.104 cv
292.596 168.791 293.709 168.791 294.396 168.104 cv
295.085 167.416 295.085 166.303 294.397 165.615 cv
cp
296.783 174.133 mo
291.331 168.681 li
285.879 163.23 li
291.318 161.38 li
294.975 165.038 li
298.631 168.695 li
296.783 174.133 li
cp
.996078 .807843 .407843 rgb
f
294.16 165.852 mo
293.604 165.295 292.701 165.295 292.144 165.852 cv
291.588 166.408 291.588 167.311 292.145 167.868 cv
292.701 168.424 293.604 168.425 294.16 167.868 cv
294.717 167.311 294.716 166.408 294.16 165.852 cv
cp
294.497 168.205 mo
293.755 168.947 292.551 168.947 291.808 168.204 cv
291.064 167.462 291.064 166.257 291.807 165.515 cv
292.55 164.772 293.754 164.772 294.497 165.515 cv
295.24 166.258 295.24 167.462 294.497 168.205 cv
cp
.984314 .690196 .231373 rgb
f
293.895 166.178 mo
293.277 165.646 li
296.513 161.888 297.408 157.143 296.38 154.901 cv
296.056 154.191 295.571 153.832 294.94 153.832 cv
294.432 153.832 294.026 154.028 293.698 154.43 cv
292.365 156.072 292.713 160.775 293.244 163.308 cv
292.248 162.312 li
291.842 159.706 291.644 155.667 293.065 153.916 cv
293.549 153.32 294.18 153.017 294.94 153.017 cv
295.891 153.017 296.665 153.565 297.122 154.561 cv
298.255 157.031 297.342 162.176 293.895 166.178 cv
cp
1 1 1 rgb
f
293.895 166.178 mo
293.608 166.465 292.82 166.599 292.82 165.474 cv
293.207 165.324 293.486 165.474 293.486 165.474 cv
293.895 166.178 li
cp
.780392 .698039 .6 rgb
f
286.028 180.882 mo
286.028 183.43 li
284.754 183.43 li
284.754 180.952 li
283.27 180.865 282.102 180.323 281.193 179.45 cv
282.066 178.508 li
282.852 179.258 283.812 179.73 285.086 179.73 cv
286.518 179.73 287.669 178.996 287.669 177.566 cv
287.669 176.361 287.093 175.838 285.086 175.228 cv
282.8 174.528 281.665 173.673 281.665 171.911 cv
281.665 170.306 282.921 169.1 284.754 168.927 cv
284.754 166.378 li
286.028 166.378 li
286.028 168.927 li
287.216 169.066 288.036 169.501 288.838 170.235 cv
287.984 171.161 li
287.18 170.409 286.343 170.113 285.348 170.113 cv
284.109 170.113 283.183 170.707 283.183 171.841 cv
283.183 172.871 283.673 173.359 285.766 173.988 cv
287.687 174.581 289.187 175.333 289.187 177.514 cv
289.187 179.276 288.036 180.585 286.028 180.882 cv
cp
.992157 .737255 .329412 rgb
f
298.003 79.563 mo
288.713 70.2734 li
287.315 66.161 li
290.081 63.3942 li
290.167 63.3085 li
289.144 61.8472 288.518 60.2651 288.254 58.8441 cv
288.429 58.6806 288.607 58.5155 288.783 58.3538 cv
288.976 59.746 289.571 61.364 290.607 62.8677 cv
291.39 62.085 li
291.733 60.449 291.974 57.6154 291.41 56.0499 cv
291.575 55.9113 291.742 55.7731 291.909 55.6359 cv
292.555 57.1444 292.407 59.6378 292.143 61.3318 cv
292.847 60.6279 li
296.96 62.0271 li
306.25 71.3162 li
298.003 79.563 li
290.697 64.0099 mo
290.697 64.0103 li
290.276 64.4304 290.275 65.1137 290.697 65.5348 cv
290.907 65.7454 291.183 65.8505 291.458 65.8505 cv
291.734 65.8505 292.01 65.7451 292.221 65.5348 cv
292.642 65.1137 292.642 64.4304 292.222 64.0103 cv
292.075 63.864 291.898 63.7721 291.71 63.7273 cv
291.709 64.2443 291.488 64.4081 291.266 64.4081 cv
291.124 64.4081 290.982 64.3413 290.897 64.2568 cv
290.697 64.0099 li
288.109 57.316 mo
288.113 56.5953 288.231 55.9621 288.457 55.4694 cv
288.802 54.7163 289.387 54.3019 290.107 54.3019 cv
290.518 54.3019 290.879 54.4192 291.186 54.6513 cv
291.018 54.789 290.855 54.9235 290.688 55.0627 cv
290.517 54.9664 290.324 54.9189 290.107 54.9189 cv
289.63 54.9189 289.263 55.1905 289.018 55.7271 cv
288.886 56.0139 288.796 56.3549 288.75 56.7372 cv
288.535 56.929 288.322 57.1218 288.109 57.316 cv
.996078 .858823 .592157 rgb
f
288.254 58.8441 mo
288.155 58.3066 288.107 57.7922 288.109 57.316 cv
288.322 57.1218 288.535 56.929 288.75 56.7372 cv
288.691 57.219 288.701 57.7661 288.783 58.3538 cv
288.607 58.5155 288.429 58.6806 288.254 58.8441 cv
291.41 56.0499 mo
291.313 55.7825 291.193 55.5521 291.046 55.371 cv
290.938 55.2391 290.82 55.1365 290.688 55.0627 cv
290.855 54.9235 291.018 54.789 291.186 54.6513 cv
291.308 54.7435 291.421 54.8539 291.525 54.9822 cv
291.676 55.1686 291.803 55.389 291.909 55.6359 cv
291.742 55.7731 291.575 55.9113 291.41 56.0499 cv
1 .929412 .796078 rgb
f
383.748 83.9535 mo
369.736 83.9531 li
369.736 62.8888 li
372.043 58.2072 li
376.742 58.2069 li
376.888 58.2072 li
377.41 55.2444 378.799 52.7452 380.312 51.2887 cv
380.519 51.4274 380.723 51.5652 380.929 51.7058 cv
379.502 53 378.159 55.3618 377.637 58.2069 cv
378.966 58.2063 li
380.453 57.2341 382.67 55.3983 383.75 53.7344 cv
383.948 53.8843 384.146 54.0347 384.342 54.1866 cv
383.349 55.7038 381.603 57.2143 380.245 58.2063 cv
381.442 58.2063 li
383.747 62.8893 li
383.748 83.9535 li
376.74 59.2536 mo
376.026 59.2536 375.447 59.8329 375.447 60.5487 cv
375.446 61.2637 376.027 61.8429 376.742 61.8433 cv
377.457 61.8433 378.037 61.2628 378.037 60.5487 cv
378.037 60.3005 377.964 60.071 377.843 59.8742 cv
377.596 60.1208 377.384 60.2131 377.212 60.2131 cv
376.884 60.2131 376.703 59.8755 376.703 59.6334 cv
376.712 59.5051 376.731 59.3804 376.742 59.2536 cv
376.741 59.2536 376.741 59.2536 376.74 59.2536 cv
384.916 53.089 mo
384.708 52.9295 384.504 52.7747 384.294 52.6173 cv
384.335 52.4783 384.363 52.3424 384.377 52.211 cv
384.425 51.7421 384.291 51.3558 383.963 51.0288 cv
383.711 50.7769 383.406 50.6503 383.051 50.6503 cv
382.836 50.6503 382.603 50.6968 382.352 50.7902 cv
382.231 50.8351 382.109 50.8894 381.986 50.9528 cv
381.762 50.7978 381.537 50.6436 381.312 50.491 cv
381.575 50.3235 381.837 50.1905 382.095 50.095 cv
382.427 49.9718 382.748 49.9108 383.052 49.9108 cv
383.602 49.9108 384.094 50.111 384.487 50.5046 cv
384.976 50.9933 385.188 51.5927 385.115 52.2875 cv
385.087 52.5486 385.019 52.8169 384.916 53.089 cv
.992157 .803922 .427451 rgb
f
384.342 54.1866 mo
384.146 54.0347 383.948 53.8843 383.75 53.7344 cv
384 53.3484 384.189 52.9719 384.294 52.6173 cv
384.504 52.7747 384.708 52.9295 384.916 53.089 cv
384.78 53.4505 384.583 53.8186 384.342 54.1866 cv
380.929 51.7058 mo
380.723 51.5652 380.519 51.4274 380.312 51.2887 cv
380.642 50.9712 380.978 50.7034 381.312 50.491 cv
381.537 50.6436 381.762 50.7978 381.986 50.9528 cv
381.636 51.1333 381.28 51.3872 380.929 51.7058 cv
.996078 .901961 .713725 rgb
f
354.625 170.577 mo
350.315 166.807 li
350.315 166.807 li
337.781 155.845 li
358.23 162.856 li
354.625 170.577 li
337.78 155.845 mo
337.779 155.844 li
337.78 155.845 li
337.78 155.845 li
.992157 .772549 .345098 rgb
f
341.003 171.091 mo
337.78 155.845 li
350.315 166.807 li
341.003 171.091 li
337.78 155.844 mo
337.78 155.844 li
337.78 155.844 li
.996078 .858823 .592157 rgb
f
350.315 166.807 mo
337.78 155.845 li
337.78 155.844 li
337.781 155.845 li
350.315 166.807 li
350.315 166.807 li
.996078 .886274 .67451 rgb
f
358.23 162.856 mo
358.23 162.856 li
337.781 155.845 li
337.78 155.844 li
365.292 159.681 li
358.23 162.856 li
337.78 155.845 mo
337.779 155.844 li
337.78 155.844 li
337.78 155.844 li
.996078 .858823 .592157 rgb
f
337.781 155.845 mo
337.78 155.845 li
337.78 155.844 li
337.78 155.844 li
337.781 155.845 li
1 .929412 .796078 rgb
f
337.781 155.845 mo
337.78 155.845 li
337.78 155.844 li
337.781 155.845 li
1 .945098 .839216 rgb
f
225 225 mo
0 225 li
0 0 li
225 0 li
225 225 li
.239216 .678431 .87451 rgb
f
94.1573 142.92 mo
93.7865 142.92 93.4582 142.727 93.2595 142.431 cv
95.0544 142.431 li
94.856 142.727 94.528 142.92 94.1573 142.92 cv
123.224 142.784 mo
122.62 142.784 122.129 142.268 122.129 141.632 cv
122.129 141.469 122.162 141.312 122.222 141.17 cv
119.992 138.793 li
120.606 138.228 li
122.802 140.569 li
122.932 140.512 123.074 140.48 123.224 140.48 cv
123.831 140.48 124.322 140.997 124.322 141.632 cv
124.322 142.268 123.831 142.784 123.224 142.784 cv
95.2534 141.761 mo
93.0603 141.761 li
93.0621 141.514 93.1395 141.288 93.2666 141.101 cv
89.8881 135.539 li
90.5101 134.966 li
93.9566 140.638 li
94.1573 140.616 li
94.3477 140.616 94.5244 140.671 94.6799 140.761 cv
97.5289 138.288 li
98.0066 138.982 li
95.1954 141.421 li
95.228 141.529 95.2523 141.642 95.2534 141.761 cv
82.2834 139.092 mo
81.6788 139.092 81.1877 138.576 81.1877 137.94 cv
81.1877 137.305 81.6788 136.788 82.2834 136.788 cv
82.4332 136.788 82.577 136.82 82.7079 136.877 cv
85.7552 133.627 li
86.128 134.453 li
83.2893 137.48 li
83.3477 137.621 83.3812 137.777 83.3812 137.94 cv
83.3812 138.576 82.8881 139.092 82.2834 139.092 cv
99.0582 138.666 mo
98.8684 138.666 98.6917 138.61 98.5366 138.522 cv
98.5074 138.547 li
98.0047 137.817 li
97.9786 137.72 97.9614 137.619 97.9614 137.514 cv
97.9614 136.879 98.4527 136.363 99.0582 136.363 cv
99.5201 136.363 99.9138 136.665 100.075 137.091 cv
100.587 137.091 li
99.6829 138.459 li
99.5057 138.589 99.2904 138.666 99.0582 138.666 cv
109.592 138.665 mo
109.15 138.645 108.778 138.349 108.621 137.937 cv
107.187 137.937 li
107.746 137.091 li
108.509 137.091 li
109.592 138.665 li
110.255 138.466 mo
108.971 136.603 li
109.156 136.452 109.387 136.363 109.639 136.363 cv
109.789 136.363 109.932 136.395 110.061 136.451 cv
112.228 134.141 li
113.374 134.141 li
110.644 137.055 li
110.701 137.196 110.735 137.35 110.735 137.514 cv
110.735 137.909 110.544 138.259 110.255 138.466 cv
119.618 138.236 mo
118.692 136.187 li
120.152 137.744 li
119.618 138.236 li
106.396 137.937 mo
100.818 137.937 li
101.377 137.091 li
106.955 137.091 li
106.396 137.937 li
118.363 137.056 mo
115.966 134.499 li
116.151 134.332 116.269 134.083 116.269 133.806 cv
116.269 133.725 116.26 133.647 116.241 133.573 cv
117.301 134.703 li
118.363 137.056 li
89.5364 134.96 mo
88.2806 132.892 li
88.078 132.914 li
87.9286 132.914 87.7849 132.882 87.6548 132.824 cv
86.6157 133.932 li
86.2431 133.107 li
87.073 132.222 li
87.015 132.08 86.9816 131.925 86.9816 131.761 cv
86.9816 131.126 87.4729 130.61 88.078 130.61 cv
88.684 130.61 89.1749 131.126 89.1749 131.761 cv
89.1749 132.011 89.0983 132.24 88.9684 132.429 cv
90.1582 134.387 li
89.5364 134.96 li
114.594 133.47 mo
114.362 133.47 li
114.262 133.457 114.167 133.429 114.078 133.39 cv
114.002 133.47 li
112.857 133.47 li
113.497 132.788 li
113.439 132.647 113.405 132.492 113.405 132.328 cv
113.405 131.693 113.897 131.177 114.502 131.177 cv
114.711 131.177 114.906 131.238 115.073 131.345 cv
115.073 132.961 li
114.855 133.055 114.682 133.239 114.594 133.47 cv
.392157 .741176 .898039 rgb
f
122.895 134.758 mo
122.416 134.758 122.026 135.167 122.026 135.671 cv
122.026 135.776 122.045 135.877 122.078 135.971 cv
114.128 143.291 li
114.011 143.228 113.879 143.189 113.737 143.189 cv
113.528 143.219 li
108.848 136.424 li
108.933 136.283 108.985 136.116 108.985 135.938 cv
108.985 135.434 108.594 135.025 108.114 135.025 cv
107.634 135.025 107.244 135.434 107.244 135.938 cv
107.244 136.122 107.299 136.294 107.388 136.438 cv
104.233 141.206 li
104.041 141.182 li
103.674 141.182 103.363 141.422 103.235 141.761 cv
92.6022 141.761 li
92.4743 141.422 92.161 141.182 91.7949 141.182 cv
91.3151 141.182 90.9262 141.592 90.9262 142.096 cv
90.9262 142.478 91.1506 142.804 91.4689 142.941 cv
91.4689 144.683 li
85.5173 131.499 li
85.6593 131.337 85.748 131.122 85.748 130.884 cv
85.748 130.381 85.357 129.971 84.8771 129.971 cv
84.3994 129.971 84.0091 130.381 84.0091 130.884 cv
84.0091 131.388 84.3994 131.798 84.8771 131.798 cv
84.9271 131.793 li
91.1573 145.591 li
91.0154 145.755 90.9262 145.969 90.9262 146.208 cv
90.9262 146.711 91.3151 147.12 91.7949 147.12 cv
92.2744 147.12 92.6646 146.711 92.6646 146.208 cv
92.6646 145.826 92.441 145.499 92.1227 145.363 cv
92.1227 142.94 li
92.3416 142.846 92.5143 142.662 92.6022 142.431 cv
103.235 142.431 li
103.363 142.768 103.674 143.008 104.041 143.008 cv
104.521 143.008 104.91 142.599 104.91 142.096 cv
104.91 141.911 104.856 141.739 104.767 141.595 cv
107.921 136.827 li
108.114 136.853 li
108.324 136.822 li
113.002 143.619 li
112.918 143.76 112.868 143.925 112.868 144.103 cv
112.868 144.606 113.257 145.017 113.737 145.017 cv
114.216 145.017 114.606 144.606 114.606 144.103 cv
114.606 143.996 114.586 143.896 114.554 143.802 cv
122.502 136.481 li
122.62 136.545 122.753 136.585 122.895 136.585 cv
123.375 136.585 123.763 136.175 123.763 135.671 cv
123.763 135.167 123.375 134.758 122.895 134.758 cv
.172549 .341176 .470588 rgb
f
122.319 145.93 mo
121.839 145.93 121.447 145.521 121.447 145.018 cv
121.447 144.78 121.538 144.565 121.68 144.402 cv
119.396 139.342 li
119.905 138.873 li
122.269 144.108 li
122.319 144.104 li
122.798 144.104 123.187 144.513 123.187 145.018 cv
123.187 145.521 122.798 145.93 122.319 145.93 cv
84.3014 141.144 mo
83.8215 141.144 83.4326 140.735 83.4326 140.231 cv
83.4326 139.727 83.8215 139.316 84.3014 139.316 cv
84.4437 139.316 84.5747 139.356 84.6934 139.419 cv
87.2907 137.028 li
87.5785 137.665 li
85.1192 139.929 li
85.1504 140.024 85.1715 140.125 85.1715 140.231 cv
85.1715 140.735 84.7817 141.144 84.3014 141.144 cv
99.0815 140.877 mo
98.6016 140.877 98.2114 140.467 98.2114 139.963 cv
98.2114 139.784 98.2628 139.619 98.348 139.477 cv
98.0066 138.982 li
98.5074 138.547 li
98.8736 139.079 li
99.0815 139.049 li
99.2762 139.073 li
99.6829 138.459 li
99.8575 138.33 99.995 138.149 100.075 137.937 cv
100.818 137.937 li
99.8083 139.463 li
99.8984 139.607 99.9516 139.778 99.9516 139.963 cv
99.9516 140.467 99.5605 140.877 99.0815 140.877 cv
119.108 138.706 mo
118.363 137.056 li
119.539 138.309 li
119.108 138.706 li
97.5289 138.288 mo
93.6687 132.683 li
93.4578 132.712 li
93.3176 132.712 93.1867 132.673 93.0689 132.61 cv
90.5101 134.966 li
90.1582 134.387 li
92.6422 132.1 li
92.611 132.005 92.5894 131.905 92.5894 131.799 cv
92.5894 131.294 92.9797 130.885 93.4578 130.885 cv
93.9377 130.885 94.3288 131.294 94.3288 131.799 cv
94.3288 131.976 94.2774 132.142 94.1934 132.282 cv
98.0047 137.817 li
98.0089 137.833 98.0134 137.848 98.018 137.863 cv
97.5289 138.288 li
88.0888 137.195 mo
87.801 136.558 li
89.5364 134.96 li
89.8881 135.539 li
88.0888 137.195 li
101.377 137.091 mo
100.587 137.091 li
102.429 134.306 li
102.34 134.162 102.286 133.99 102.286 133.806 cv
102.286 133.301 102.676 132.892 103.156 132.892 cv
103.522 132.892 103.834 133.133 103.96 133.47 cv
112.857 133.47 li
112.228 134.141 li
103.96 134.141 li
103.834 134.479 103.522 134.719 103.156 134.719 cv
102.963 134.695 li
101.377 137.091 li
118.692 136.187 mo
117.301 134.703 li
115.727 131.218 li
115.727 132.961 li
115.979 133.068 116.171 133.294 116.241 133.573 cv
115.506 132.789 li
115.565 132.648 115.598 132.493 115.598 132.328 cv
115.598 131.912 115.388 131.548 115.073 131.345 cv
115.073 130.538 li
114.755 130.402 114.53 130.076 114.53 129.694 cv
114.53 129.191 114.922 128.781 115.402 128.781 cv
115.88 128.781 116.269 129.191 116.269 129.694 cv
116.269 129.932 116.182 130.147 116.039 130.31 cv
118.692 136.187 li
115.402 134.719 mo
115.035 134.719 114.722 134.479 114.594 134.141 cv
113.374 134.141 li
114.002 133.47 li
114.362 133.47 li
114.407 133.477 114.454 133.48 114.502 133.48 cv
114.65 133.48 114.795 133.448 114.925 133.39 cv
115.966 134.499 li
115.814 134.637 115.617 134.719 115.402 134.719 cv
.619608 .839216 .937255 rgb
f
98.0066 138.982 mo
97.5289 138.288 li
98.018 137.863 li
98.0134 137.848 98.0089 137.833 98.0047 137.817 cv
98.5074 138.547 li
98.0066 138.982 li
99.6829 138.459 mo
100.587 137.091 li
101.377 137.091 li
100.818 137.937 li
100.075 137.937 li
99.995 138.149 99.8575 138.33 99.6829 138.459 cv
119.539 138.309 mo
118.363 137.056 li
117.301 134.703 li
118.692 136.187 li
119.618 138.236 li
119.539 138.309 li
89.8881 135.539 mo
89.5364 134.96 li
90.1582 134.387 li
90.5101 134.966 li
89.8881 135.539 li
115.966 134.499 mo
114.925 133.39 li
114.795 133.448 114.65 133.48 114.502 133.48 cv
114.454 133.48 114.407 133.477 114.362 133.47 cv
114.594 133.47 li
114.682 133.239 114.855 133.055 115.073 132.961 cv
115.073 131.345 li
115.388 131.548 115.598 131.912 115.598 132.328 cv
115.598 132.493 115.565 132.648 115.506 132.789 cv
116.241 133.573 li
116.26 133.647 116.269 133.725 116.269 133.806 cv
116.269 134.083 116.151 134.332 115.966 134.499 cv
113.374 134.141 mo
112.228 134.141 li
112.857 133.47 li
114.002 133.47 li
113.374 134.141 li
.698039 .870588 .94902 rgb
f
119.396 139.342 mo
119.108 138.706 li
119.539 138.309 li
119.618 138.236 li
119.905 138.873 li
119.396 139.342 li
87.5785 137.665 mo
87.2907 137.028 li
87.801 136.558 li
88.0888 137.195 li
87.5785 137.665 li
.588235 .670588 .737255 rgb
f
67.4849 215.195 mo
68.9453 215.195 li
70.8398 215.195 72.814 214.36 72.814 210.411 cv
72.814 206.382 70.7593 205.804 68.833 205.804 cv
67.4849 205.804 li
67.4849 215.195 li
cp
68.7046 205.002 mo
71.2568 205.002 73.8252 205.885 73.8252 210.411 cv
73.8252 214.97 71.1445 215.998 68.8813 215.998 cv
66.5215 215.998 li
66.5215 205.002 li
68.7046 205.002 li
cp
.172549 .341176 .470588 rgb
f
80.7144 213.943 mo
80.7144 211.631 li
79.2539 211.631 li
77.5684 211.631 76.6211 212.29 76.6211 213.622 cv
76.6211 214.777 77.2793 215.42 78.3867 215.42 cv
79.4463 215.42 80.1846 214.89 80.7144 213.943 cv
cp
81.6455 214.136 mo
81.6455 215.066 81.9023 215.339 82.3521 215.516 cv
82.1431 216.174 li
81.4048 216.03 80.9712 215.661 80.8428 214.762 cv
80.249 215.725 79.3501 216.174 78.2266 216.174 cv
76.605 216.174 75.626 215.163 75.626 213.67 cv
75.626 211.904 76.9585 210.941 79.1094 210.941 cv
80.7144 210.941 li
80.7144 210.139 li
80.7144 208.806 80.1689 208.212 78.7725 208.212 cv
78.0981 208.212 77.3276 208.389 76.4927 208.694 cv
76.252 207.987 li
77.1831 207.618 78.0176 207.426 78.9004 207.426 cv
80.811 207.426 81.6455 208.373 81.6455 210.09 cv
81.6455 214.136 li
cp
f
88.8555 215.645 mo
88.3418 215.981 87.7637 216.174 87.0898 216.174 cv
85.8218 216.174 85.0352 215.42 85.0352 213.959 cv
85.0352 208.356 li
83.6226 208.356 li
83.6226 207.602 li
85.0352 207.602 li
85.0352 205.596 li
85.9658 205.483 li
85.9658 207.602 li
88.1333 207.602 li
88.0205 208.356 li
85.9658 208.356 li
85.9658 213.911 li
85.9658 214.89 86.3516 215.372 87.2021 215.372 cv
87.6675 215.372 88.0688 215.243 88.4863 214.986 cv
88.8555 215.645 li
cp
f
94.7959 213.943 mo
94.7959 211.631 li
93.3354 211.631 li
91.6499 211.631 90.7026 212.29 90.7026 213.622 cv
90.7026 214.777 91.3608 215.42 92.4688 215.42 cv
93.5278 215.42 94.2666 214.89 94.7959 213.943 cv
cp
95.7271 214.136 mo
95.7271 215.066 95.9839 215.339 96.4336 215.516 cv
96.2246 216.174 li
95.4863 216.03 95.0527 215.661 94.9243 214.762 cv
94.3306 215.725 93.4316 216.174 92.3081 216.174 cv
90.6865 216.174 89.7075 215.163 89.7075 213.67 cv
89.7075 211.904 91.04 210.941 93.1909 210.941 cv
94.7959 210.941 li
94.7959 210.139 li
94.7959 208.806 94.2505 208.212 92.8535 208.212 cv
92.1797 208.212 91.4092 208.389 90.5742 208.694 cv
90.3335 207.987 li
91.2646 207.618 92.0991 207.426 92.9824 207.426 cv
94.8926 207.426 95.7271 208.373 95.7271 210.09 cv
95.7271 214.136 li
cp
f
106.422 205.788 mo
104.367 212.177 li
108.46 212.177 li
106.422 205.788 li
cp
104.094 212.996 mo
103.131 215.998 li
102.152 215.998 li
105.828 205.002 li
107.032 205.002 li
110.691 215.998 li
109.68 215.998 li
108.717 212.996 li
104.094 212.996 li
cp
f
118.72 209.994 mo
118.72 215.998 li
117.789 215.998 li
117.789 210.123 li
117.789 208.742 117.227 208.18 116.2 208.18 cv
115.06 208.18 114.29 208.886 113.6 209.914 cv
113.6 215.998 li
112.668 215.998 li
112.668 207.602 li
113.471 207.602 li
113.567 209.031 li
114.226 208.068 115.156 207.426 116.376 207.426 cv
117.901 207.426 118.72 208.373 118.72 209.994 cv
cp
f
126.331 213.943 mo
126.331 211.631 li
124.871 211.631 li
123.185 211.631 122.238 212.29 122.238 213.622 cv
122.238 214.777 122.896 215.42 124.004 215.42 cv
125.063 215.42 125.802 214.89 126.331 213.943 cv
cp
127.263 214.136 mo
127.263 215.066 127.519 215.339 127.969 215.516 cv
127.76 216.174 li
127.022 216.03 126.588 215.661 126.46 214.762 cv
125.866 215.725 124.967 216.174 123.844 216.174 cv
122.222 216.174 121.243 215.163 121.243 213.67 cv
121.243 211.904 122.576 210.941 124.727 210.941 cv
126.331 210.941 li
126.331 210.139 li
126.331 208.806 125.786 208.212 124.39 208.212 cv
123.715 208.212 122.945 208.389 122.11 208.694 cv
121.869 207.987 li
122.8 207.618 123.635 207.426 124.518 207.426 cv
126.428 207.426 127.263 208.373 127.263 210.09 cv
127.263 214.136 li
cp
f
131.503 214.553 mo
131.503 215.099 131.696 215.372 132.193 215.372 cv
132.386 215.372 132.579 215.339 132.755 215.259 cv
133.012 215.949 li
132.723 216.078 132.37 216.174 132.017 216.174 cv
131.118 216.174 130.572 215.661 130.572 214.553 cv
130.572 204.183 li
131.503 204.071 li
131.503 214.553 li
cp
f
137.893 216.03 mo
137.267 217.859 136.513 218.871 134.458 219.273 cv
134.361 218.55 li
136.047 218.132 136.464 217.475 136.994 215.998 cv
136.673 215.998 li
133.751 207.602 li
134.763 207.602 li
137.299 215.307 li
139.787 207.602 li
140.767 207.602 li
137.893 216.03 li
cp
f
147.462 208.356 mo
147.013 208.983 li
146.29 208.453 145.665 208.196 144.813 208.196 cv
143.706 208.196 142.952 208.742 142.952 209.609 cv
142.952 210.443 143.481 210.797 144.99 211.198 cv
146.82 211.68 147.687 212.306 147.687 213.734 cv
147.687 215.291 146.323 216.174 144.653 216.174 cv
143.289 216.174 142.374 215.708 141.651 215.099 cv
142.181 214.489 li
142.872 215.066 143.61 215.388 144.637 215.388 cv
145.857 215.388 146.708 214.81 146.708 213.798 cv
146.708 212.771 146.242 212.402 144.493 211.92 cv
142.711 211.455 141.988 210.797 141.988 209.609 cv
141.988 208.341 143.192 207.426 144.782 207.426 cv
145.857 207.426 146.676 207.747 147.462 208.356 cv
cp
f
150.177 215.998 mo
150.177 207.602 li
151.108 207.602 li
151.108 215.998 li
150.177 215.998 li
cp
151.333 204.585 mo
151.333 204.954 151.06 205.259 150.626 205.259 cv
150.209 205.259 149.936 204.954 149.936 204.585 cv
149.936 204.215 150.209 203.91 150.626 203.91 cv
151.06 203.91 151.333 204.215 151.333 204.585 cv
cp
f
159.248 208.356 mo
158.798 208.983 li
158.076 208.453 157.45 208.196 156.599 208.196 cv
155.491 208.196 154.737 208.742 154.737 209.609 cv
154.737 210.443 155.267 210.797 156.775 211.198 cv
158.605 211.68 159.472 212.306 159.472 213.734 cv
159.472 215.291 158.108 216.174 156.438 216.174 cv
155.074 216.174 154.159 215.708 153.436 215.099 cv
153.966 214.489 li
154.657 215.066 155.395 215.388 156.422 215.388 cv
157.642 215.388 158.493 214.81 158.493 213.798 cv
158.493 212.771 158.027 212.402 156.278 211.92 cv
154.496 211.455 153.773 210.797 153.773 209.609 cv
153.773 208.341 154.977 207.426 156.567 207.426 cv
157.642 207.426 158.461 207.747 159.248 208.356 cv
cp
f
110.252 106.996 mo
100.661 116.586 85.1122 116.586 75.5219 106.996 cv
65.9318 97.405 65.9318 81.8572 75.5219 72.2674 cv
85.1122 62.6763 100.661 62.6763 110.252 72.2674 cv
119.842 81.8572 119.842 97.405 110.252 106.996 cv
cp
114.356 68.1603 mo
102.5 56.3043 83.2753 56.3043 71.417 68.1603 cv
59.5602 80.019 59.5602 99.2424 71.417 111.101 cv
82.3155 121.998 99.4207 122.852 111.325 113.719 cv
145.976 151.016 li
146.582 151.668 147.426 152.046 148.315 152.062 cv
149.205 152.078 150.062 151.732 150.691 151.103 cv
152.525 149.269 li
154.36 147.434 li
154.988 146.805 155.334 145.947 155.318 145.059 cv
155.301 144.169 154.924 143.325 154.272 142.72 cv
116.974 108.069 li
126.107 96.1636 125.254 79.0579 114.356 68.1603 cv
cp
f
84.0737 112.538 mo
92.8544 115.91 103.174 114.074 110.252 106.995 cv
118.421 98.824 119.606 86.3409 113.855 76.8914 cv
88.4164 76.8914 li
86.0183 76.8914 84.0737 78.8359 84.0737 81.2345 cv
84.0737 112.538 li
cp
1 1 1 rgb
f
102.847 82.3177 mo
110.997 82.3177 li
110.997 85.8223 li
102.847 85.8223 li
102.847 82.3177 li
cp
.301961 .301961 .301961 rgb
f
86.8919 89.5304 mo
96.6755 89.5304 li
96.6755 93.036 li
86.8919 93.036 li
86.8919 89.5304 li
cp
f
101.624 102.988 mo
108.921 102.988 li
108.921 106.494 li
101.624 106.494 li
101.624 102.988 li
cp
f
113.471 102.988 mo
110.123 102.988 li
110.123 106.494 li
110.711 106.494 li
111.754 105.393 112.674 104.219 113.471 102.988 cv
cp
f
86.8919 102.984 mo
96.6755 102.984 li
96.6755 106.489 li
86.8919 106.489 li
86.8919 102.984 li
cp
f
93.1937 96.2576 mo
102.977 96.2576 li
102.977 99.7614 li
93.1937 99.7614 li
93.1937 96.2576 li
cp
f
95.3364 85.8223 mo
92.9326 85.8223 li
92.9326 82.3177 li
95.3364 82.3177 li
95.3364 85.8223 li
cp
f
111.325 93.036 mo
108.921 93.036 li
108.921 89.5304 li
111.325 89.5304 li
111.325 93.036 li
cp
f
114.359 99.7614 mo
112.548 99.7614 li
112.548 96.2576 li
114.359 96.2576 li
114.359 99.7614 li
cp
f
116.526 96.2576 mo
115.266 96.2576 li
115.266 99.7152 li
115.772 98.5871 116.199 97.4332 116.526 96.2576 cv
cp
f
100.827 112.846 mo
102.965 112.117 105.012 111.075 106.923 109.74 cv
106.923 109.71 li
100.827 109.71 li
100.827 112.846 li
cp
f
99.8984 106.489 mo
98.0849 106.489 li
98.0849 102.984 li
99.8984 102.984 li
99.8984 106.489 li
cp
f
116.171 85.8223 mo
112.548 85.8223 li
112.548 82.3177 li
116.171 82.3177 li
116.171 85.8223 li
cp
f
112.548 93.036 mo
117.179 93.036 li
117.34 91.874 117.414 90.7034 117.408 89.5304 cv
112.548 89.5304 li
112.548 93.036 li
cp
f
90.5157 99.7614 mo
86.8919 99.7614 li
86.8919 96.2576 li
90.5157 96.2576 li
90.5157 99.7614 li
cp
f
98.9919 113.215 mo
92.324 113.215 li
92.324 109.71 li
98.9919 109.71 li
98.9919 113.215 li
cp
f
90.5157 113.215 mo
86.8919 113.215 li
86.8919 109.71 li
90.5157 109.71 li
90.5157 113.215 li
cp
f
102.029 85.8223 mo
96.6764 85.8223 li
96.6764 82.3177 li
102.029 82.3177 li
102.029 85.8223 li
cp
f
105.559 93.036 mo
97.9082 93.036 li
97.9082 89.5304 li
105.559 89.5304 li
105.559 93.036 li
cp
f
111.812 99.7614 mo
104.161 99.7614 li
104.161 96.2576 li
111.812 96.2576 li
111.812 99.7614 li
cp
f
32.9157 19.9725 mo
30.5597 19.9725 li
31.7379 30.4478 li
32.9157 30.4478 li
34.0956 30.4478 li
35.2733 19.9725 li
32.9157 19.9725 li
cp
32.9157 31.7789 mo
31.6154 31.7789 30.5597 32.8336 30.5597 34.1361 cv
30.5597 35.4364 31.6154 36.4929 32.9157 36.4929 cv
34.2182 36.4929 35.2733 35.4364 35.2733 34.1361 cv
35.2733 32.8336 34.2182 31.7789 32.9157 31.7789 cv
cp
49.8039 47.7284 mo
47.1443 52.7795 38.7758 54.9455 32.9157 54.9455 cv
27.0551 54.9455 18.6879 52.7795 16.0288 47.7284 cv
15.6311 46.9712 20.9437 43.2662 28.7523 41.4007 cv
28.7523 39.9324 27.9262 37.9092 26.0664 36.4551 cv
23.2288 34.2367 21.2548 30.9088 21.2548 27.0315 cv
21.2548 20.5908 26.4755 15.3684 32.9157 15.3684 cv
39.3567 15.3684 44.5788 20.5908 44.5788 27.0315 cv
44.5788 30.9088 42.6047 34.2367 39.7672 36.4551 cv
37.9061 37.9092 37.0812 39.9324 37.0812 41.4007 cv
44.8899 43.2662 50.2024 46.9712 49.8039 47.7284 cv
cp
.996078 .807843 .407843 rgb
f
76.687 36.4845 mo
71.7554 36.4845 67.7573 32.4864 67.7573 27.5548 cv
67.7573 22.6233 71.7554 18.6251 76.687 18.6251 cv
81.6185 18.6251 85.6166 22.6233 85.6166 27.5548 cv
85.6166 32.4864 81.6185 36.4845 76.687 36.4845 cv
.572549 .792157 .890196 rgb
f
199.405 45.4142 mo
194.474 45.4142 190.475 41.4161 190.475 36.4845 cv
190.475 31.553 194.474 27.5548 199.405 27.5548 cv
204.337 27.5548 208.335 31.553 208.335 36.4845 cv
208.335 41.4161 204.337 45.4142 199.405 45.4142 cv
.356863 .72549 .894118 rgb
f
194.375 197.316 mo
189.444 197.316 185.445 193.319 185.445 188.386 cv
185.445 183.456 189.444 179.457 194.375 179.457 cv
199.307 179.457 203.305 183.456 203.305 188.386 cv
203.305 193.319 199.307 197.316 194.375 197.316 cv
.392157 .741176 .898039 rgb
f
32.9166 206.868 mo
26.3529 206.868 21.0312 201.547 21.0312 194.983 cv
21.0312 188.42 26.3529 183.099 32.9166 183.099 cv
39.4802 183.099 44.802 188.42 44.802 194.983 cv
44.802 201.547 39.4802 206.868 32.9166 206.868 cv
f
24.1204 139.818 mo
18.6172 139.818 14.1554 135.357 14.1554 129.853 cv
14.1554 124.35 18.6172 119.889 24.1204 119.889 cv
29.6237 119.889 34.0855 124.35 34.0855 129.853 cv
34.0855 135.357 29.6237 139.818 24.1204 139.818 cv
f
24.1539 151.841 mo
26.9321 151.841 29.1838 154.093 29.1838 156.87 cv
29.1838 159.649 26.9321 161.901 24.1539 161.901 cv
21.3756 161.901 19.1239 159.649 19.1239 156.87 cv
19.1239 154.093 21.3756 151.841 24.1539 151.841 cv
cp
.172549 .341176 .470588 rgb
f
164.093 27.5548 mo
161.314 27.5548 159.062 25.3031 159.062 22.5249 cv
159.062 19.7466 161.314 17.4949 164.093 17.4949 cv
166.871 17.4949 169.122 19.7466 169.122 22.5249 cv
169.122 25.3031 166.871 27.5548 164.093 27.5548 cv
.619608 .839216 .937255 rgb
f
26.0408 70.0697 mo
24.3718 70.0697 23.0201 68.7179 23.0201 67.0489 cv
23.0201 65.3799 24.3718 64.0281 26.0408 64.0281 cv
27.7099 64.0281 29.0617 65.3799 29.0617 67.0489 cv
29.0617 68.7179 27.7099 70.0697 26.0408 70.0697 cv
.572549 .792157 .890196 rgb
f
165.325 200.013 mo
166.994 200.013 168.345 201.365 168.345 203.034 cv
168.345 204.703 166.994 206.055 165.325 206.055 cv
163.656 206.055 162.304 204.703 162.304 203.034 cv
162.304 201.365 163.656 200.013 165.325 200.013 cv
cp
.172549 .341176 .470588 rgb
f
174.024 44.3586 mo
175.694 44.3586 177.045 45.7112 177.045 47.3795 cv
177.045 49.0485 175.694 50.4011 174.024 50.4011 cv
172.355 50.4011 171.004 49.0485 171.004 47.3795 cv
171.004 45.7112 172.355 44.3586 174.024 44.3586 cv
cp
f
198.651 151.46 mo
194.215 151.46 190.62 147.865 190.62 143.43 cv
190.62 138.995 194.215 135.4 198.651 135.4 cv
203.086 135.4 206.681 138.995 206.681 143.43 cv
206.681 147.865 203.086 151.46 198.651 151.46 cv
.619608 .839216 .937255 rgb
f
112.322 184.628 mo
70.6265 184.628 36.8255 150.827 36.8255 109.131 cv
36.8255 67.4348 70.6265 33.6338 112.322 33.6338 cv
154.018 33.6338 187.82 67.4348 187.82 109.131 cv
187.82 150.827 154.018 184.628 112.322 184.628 cv
112.322 34.8536 mo
71.2996 34.8536 38.0454 68.1089 38.0454 109.131 cv
38.0454 150.153 71.2996 183.408 112.322 183.408 cv
153.344 183.408 186.6 150.153 186.6 109.131 cv
186.6 68.1089 153.344 34.8536 112.322 34.8536 cv
f
96.4962 167.891 mo
95.2218 167.891 li
95.2218 165.413 li
93.7382 165.326 92.5701 164.784 91.6614 163.911 cv
92.5341 162.969 li
93.3198 163.719 94.2796 164.191 95.554 164.191 cv
96.9858 164.191 98.1371 163.457 98.1371 162.027 cv
98.1371 160.822 97.5605 160.299 95.554 159.688 cv
93.268 158.989 92.1324 158.134 92.1324 156.372 cv
92.1324 154.766 93.3893 153.561 95.2218 153.387 cv
95.2218 150.839 li
96.4962 150.839 li
96.4962 153.387 li
97.6836 153.527 98.5036 153.962 99.3061 154.696 cv
98.4518 155.622 li
97.6474 154.87 96.8108 154.573 95.816 154.573 cv
94.5766 154.573 93.6512 155.168 93.6512 156.301 cv
93.6512 157.331 94.1407 157.819 96.2343 158.449 cv
98.1547 159.041 99.655 159.793 99.655 161.975 cv
99.655 163.737 98.5036 165.046 96.4962 165.342 cv
96.4962 167.891 li
.203922 .509804 .670588 rgb
f
82.6358 163.74 mo
82.6358 176.21 72.5276 186.318 60.0567 186.318 cv
47.5886 186.318 37.4794 176.21 37.4794 163.74 cv
37.4794 151.271 47.5886 141.163 60.0567 141.163 cv
72.5276 141.163 82.6358 151.271 82.6358 163.74 cv
cp
.996078 .807843 .407843 rgb
f
51.762 173.258 mo
42.5477 173.258 li
42.5477 157.408 li
51.762 157.408 li
51.762 173.258 li
cp
.0901961 .772549 .8 rgb
f
63.9525 173.258 mo
54.7381 173.258 li
54.7381 149.533 li
63.9525 149.533 li
63.9525 173.258 li
cp
.317647 .396078 .494118 rgb
f
76.1438 173.258 mo
66.9302 173.258 li
66.9302 163.033 li
76.1438 163.033 li
76.1438 173.258 li
cp
.776471 .129412 .152941 rgb
f
131.937 39.4513 mo
131.937 50.3426 123.109 59.1713 112.217 59.1713 cv
101.326 59.1713 92.4972 50.3426 92.4972 39.4513 cv
92.4972 28.5598 101.326 19.7321 112.217 19.7321 cv
123.109 19.7321 131.937 28.5598 131.937 39.4513 cv
cp
.996078 .807843 .407843 rgb
f
128.095 38.8145 mo
127.819 32.1621 123.462 26.5717 117.454 24.4809 cv
113.133 38.8145 li
128.095 38.8145 li
cp
.0901961 .772549 .8 rgb
f
124.082 50.0473 mo
126.454 47.394 127.938 43.9487 128.095 40.1473 cv
113.88 40.1473 li
124.082 50.0473 li
cp
.984314 .690196 .231373 rgb
f
112.899 55.3406 mo
116.87 55.1754 120.458 53.5643 123.156 51.008 cv
112.901 41.0548 li
112.899 55.3406 li
cp
.301961 .745098 .576471 rgb
f
116.174 24.0972 mo
114.91 23.776 113.595 23.5862 112.235 23.5862 cv
106.655 23.5862 101.757 26.4637 98.9211 30.8098 cv
111.841 38.4743 li
116.174 24.0972 li
cp
1 .921569 .760784 rgb
f
98.2338 31.9528 mo
97.0271 34.1949 96.3389 36.7574 96.3389 39.4789 cv
96.3389 42.2027 97.0271 44.7643 98.2329 47.0024 cv
110.926 39.4789 li
98.2338 31.9528 li
cp
.317647 .396078 .494118 rgb
f
98.9193 48.1467 mo
101.642 52.322 106.268 55.1191 111.566 55.3406 cv
111.567 40.651 li
98.9193 48.1467 li
cp
.776471 .129412 .152941 rgb
f
205.529 89.6772 mo
205.529 101.649 195.825 111.354 183.852 111.354 cv
171.882 111.354 162.177 101.649 162.177 89.6772 cv
162.177 77.7057 171.882 68.0016 183.852 68.0016 cv
195.825 68.0016 205.529 77.7057 205.529 89.6772 cv
cp
.996078 .807843 .407843 rgb
f
198.534 102.665 mo
189.015 102.665 li
189.015 94.5433 li
198.534 94.5433 li
198.534 102.665 li
cp
178.408 102.665 mo
178.408 94.5433 li
188.777 94.5433 li
188.777 102.665 li
178.408 102.665 li
cp
168.651 102.665 mo
168.651 94.5433 li
178.17 94.5433 li
178.17 102.665 li
168.651 102.665 li
cp
168.651 91.4382 mo
178.17 91.4382 li
178.17 94.3042 li
168.651 94.3042 li
168.651 91.4382 li
cp
188.777 91.4382 mo
188.777 94.3042 li
178.408 94.3042 li
178.408 91.4382 li
188.777 91.4382 li
cp
198.534 91.4382 mo
198.534 94.3042 li
189.015 94.3042 li
189.015 91.4382 li
198.534 91.4382 li
cp
189.015 91.1987 mo
178.17 91.1987 li
168.413 91.1987 li
168.413 94.5433 li
168.413 102.904 li
178.17 102.904 li
189.015 102.904 li
198.773 102.904 li
198.773 94.5433 li
198.773 91.1987 li
189.015 91.1987 li
cp
1 .921569 .760784 rgb
f
170.821 92.7121 mo
169.109 92.7121 li
169.109 91.9756 li
170.821 91.9756 li
170.821 92.7121 li
cp
f
172.881 96.1754 mo
169.109 96.1754 li
169.109 95.4389 li
172.881 95.4389 li
172.881 96.1754 li
cp
f
172.473 92.7121 mo
171.816 92.7121 li
171.816 91.9756 li
172.473 91.9756 li
172.473 92.7121 li
cp
f
177.261 92.7121 mo
176.604 92.7121 li
176.604 91.9756 li
177.261 91.9756 li
177.261 92.7121 li
cp
f
175.708 96.1754 mo
175.051 96.1754 li
175.051 95.4389 li
175.708 95.4389 li
175.708 96.1754 li
cp
f
174.007 92.7121 mo
172.881 92.7121 li
172.881 91.9756 li
174.007 91.9756 li
174.007 92.7121 li
cp
f
176.062 92.7121 mo
174.937 92.7121 li
174.937 91.9756 li
176.062 91.9756 li
176.062 92.7121 li
cp
f
174.569 96.1754 mo
173.444 96.1754 li
173.444 95.4389 li
174.569 95.4389 li
174.569 96.1754 li
cp
f
185.956 91.9756 mo
187.669 91.9756 li
187.669 92.7121 li
185.956 92.7121 li
185.956 91.9756 li
cp
f
189.473 91.9756 mo
192.797 91.9756 li
192.797 92.7121 li
189.473 92.7121 li
189.473 91.9756 li
cp
f
184.304 91.9756 mo
184.962 91.9756 li
184.962 92.7121 li
184.304 92.7121 li
184.304 91.9756 li
cp
f
179.517 91.9756 mo
180.173 91.9756 li
180.173 92.7121 li
179.517 92.7121 li
179.517 91.9756 li
cp
f
182.771 91.9756 mo
183.895 91.9756 li
183.895 92.7121 li
182.771 92.7121 li
182.771 91.9756 li
cp
f
194.749 91.9756 mo
195.406 91.9756 li
195.406 92.7121 li
194.749 92.7121 li
194.749 91.9756 li
cp
f
193.216 91.9756 mo
194.34 91.9756 li
194.34 92.7121 li
193.216 92.7121 li
193.216 91.9756 li
cp
f
196.331 91.9756 mo
197.933 91.9756 li
197.933 92.7121 li
196.331 92.7121 li
196.331 91.9756 li
cp
f
177.57 98.7634 mo
174.246 98.7634 li
174.246 98.0264 li
177.57 98.0264 li
177.57 98.7634 li
cp
f
182.331 98.7634 mo
179.007 98.7634 li
179.007 98.0264 li
182.331 98.0264 li
182.331 98.7634 li
cp
f
172.374 100.038 mo
169.05 100.038 li
169.05 99.3013 li
172.374 99.3013 li
172.374 100.038 li
cp
f
172.294 98.7634 mo
171.637 98.7634 li
171.637 98.0264 li
172.294 98.0264 li
172.294 98.7634 li
cp
f
173.828 98.7634 mo
172.703 98.7634 li
172.703 98.0264 li
173.828 98.0264 li
173.828 98.7634 li
cp
f
170.711 98.7634 mo
169.11 98.7634 li
169.11 98.0264 li
170.711 98.0264 li
170.711 98.7634 li
cp
f
180.716 91.9756 mo
181.841 91.9756 li
181.841 92.7121 li
180.716 92.7121 li
180.716 91.9756 li
cp
f
175.549 96.6835 mo
177.261 96.6835 li
177.261 97.4199 li
175.549 97.4199 li
175.549 96.6835 li
cp
f
178.989 96.6835 mo
180.701 96.6835 li
180.701 97.4199 li
178.989 97.4199 li
178.989 96.6835 li
cp
f
183.913 99.3013 mo
185.626 99.3013 li
185.626 100.038 li
183.913 100.038 li
183.913 99.3013 li
cp
f
169.153 100.595 mo
170.864 100.595 li
170.864 101.332 li
169.153 101.332 li
169.153 100.595 li
cp
f
173.897 96.6835 mo
174.554 96.6835 li
174.554 97.4199 li
173.897 97.4199 li
173.897 96.6835 li
cp
f
186.483 96.6835 mo
187.141 96.6835 li
187.141 97.4199 li
186.483 97.4199 li
186.483 96.6835 li
cp
f
187.427 96.6835 mo
188.084 96.6835 li
188.084 97.4199 li
187.427 97.4199 li
187.427 96.6835 li
cp
f
173.116 99.3013 mo
173.772 99.3013 li
173.772 100.038 li
173.116 100.038 li
173.116 99.3013 li
cp
f
169.109 96.6835 mo
169.767 96.6835 li
169.767 97.4199 li
169.109 97.4199 li
169.109 96.6835 li
cp
f
172.364 96.6835 mo
173.488 96.6835 li
173.488 97.4199 li
172.364 97.4199 li
172.364 96.6835 li
cp
f
181.104 96.6835 mo
182.228 96.6835 li
182.228 97.4199 li
181.104 97.4199 li
181.104 96.6835 li
cp
f
170.309 96.6835 mo
171.433 96.6835 li
171.433 97.4199 li
170.309 97.4199 li
170.309 96.6835 li
cp
f
194.096 98.0264 mo
197.868 98.0264 li
197.868 98.7634 li
194.096 98.7634 li
194.096 98.0264 li
cp
f
183.075 98.0264 mo
186.847 98.0264 li
186.847 98.7634 li
183.075 98.7634 li
183.075 98.0264 li
cp
f
191.269 98.0264 mo
191.925 98.0264 li
191.925 98.7634 li
191.269 98.7634 li
191.269 98.0264 li
cp
f
192.409 98.0264 mo
193.533 98.0264 li
193.533 98.7634 li
192.409 98.7634 li
192.409 98.0264 li
cp
f
187.193 98.0264 mo
188.318 98.0264 li
188.318 98.7634 li
187.193 98.7634 li
187.193 98.0264 li
cp
f
181.794 95.4389 mo
185.566 95.4389 li
185.566 96.1754 li
181.794 96.1754 li
181.794 95.4389 li
cp
f
178.967 95.4389 mo
179.623 95.4389 li
179.623 96.1754 li
178.967 96.1754 li
178.967 95.4389 li
cp
f
180.106 95.4389 mo
181.231 95.4389 li
181.231 96.1754 li
180.106 96.1754 li
180.106 95.4389 li
cp
f
189.407 95.4389 mo
192.731 95.4389 li
192.731 96.1754 li
189.407 96.1754 li
189.407 95.4389 li
cp
f
194.682 95.4389 mo
195.34 95.4389 li
195.34 96.1754 li
194.682 96.1754 li
194.682 95.4389 li
cp
f
193.149 95.4389 mo
194.274 95.4389 li
194.274 96.1754 li
193.149 96.1754 li
193.149 95.4389 li
cp
f
185.956 95.4389 mo
187.081 95.4389 li
187.081 96.1754 li
185.956 96.1754 li
185.956 95.4389 li
cp
f
196.265 95.4389 mo
197.867 95.4389 li
197.867 96.1754 li
196.265 96.1754 li
196.265 95.4389 li
cp
f
189.477 99.3013 mo
190.133 99.3013 li
190.133 100.038 li
189.477 100.038 li
189.477 99.3013 li
cp
f
186.191 99.3013 mo
186.847 99.3013 li
186.847 100.038 li
186.191 100.038 li
186.191 99.3013 li
cp
f
191.059 99.3013 mo
192.661 99.3013 li
192.661 100.038 li
191.059 100.038 li
191.059 99.3013 li
cp
f
191.428 97.4199 mo
189.716 97.4199 li
189.716 96.6835 li
191.428 96.6835 li
191.428 97.4199 li
cp
f
193.08 97.4199 mo
192.424 97.4199 li
192.424 96.6835 li
193.08 96.6835 li
193.08 97.4199 li
cp
f
194.613 97.4199 mo
193.489 97.4199 li
193.489 96.6835 li
194.613 96.6835 li
194.613 97.4199 li
cp
f
180.679 101.332 mo
178.967 101.332 li
178.967 100.595 li
180.679 100.595 li
180.679 101.332 li
cp
f
182.331 101.332 mo
181.674 101.332 li
181.674 100.595 li
182.331 100.595 li
182.331 101.332 li
cp
f
183.864 101.332 mo
182.738 101.332 li
182.738 100.595 li
183.864 100.595 li
183.864 101.332 li
cp
f
196.668 97.4199 mo
195.544 97.4199 li
195.544 96.6835 li
196.668 96.6835 li
196.668 97.4199 li
cp
f
183.839 97.4199 mo
182.714 97.4199 li
182.714 96.6835 li
183.839 96.6835 li
183.839 97.4199 li
cp
f
185.895 97.4199 mo
184.77 97.4199 li
184.77 96.6835 li
185.895 96.6835 li
185.895 97.4199 li
cp
f
181.851 99.3013 mo
182.508 99.3013 li
182.508 100.038 li
181.851 100.038 li
181.851 99.3013 li
cp
f
182.793 99.3013 mo
183.45 99.3013 li
183.45 100.038 li
182.793 100.038 li
182.793 99.3013 li
cp
f
181.261 100.038 mo
180.137 100.038 li
180.137 99.3013 li
181.261 99.3013 li
181.261 100.038 li
cp
f
199.783 84.4324 mo
199.664 84.4324 199.551 84.4579 199.448 84.5031 cv
193.677 78.3495 li
193.724 78.2374 193.751 78.1148 193.751 77.9847 cv
193.751 77.4824 193.361 77.0737 192.883 77.0737 cv
192.405 77.0737 192.016 77.4824 192.016 77.9847 cv
192.016 78.1144 192.042 78.237 192.089 78.349 cv
189.371 81.2459 li
189.27 81.2011 189.156 81.1756 189.038 81.1756 cv
188.671 81.1756 188.359 81.415 188.232 81.7522 cv
181.472 81.7522 li
181.345 81.415 181.033 81.1756 180.668 81.1756 cv
180.189 81.1756 179.801 81.5842 179.801 82.087 cv
179.801 82.1833 179.819 82.2751 179.845 82.363 cv
177.205 84.6551 li
177.082 84.5839 176.942 84.54 176.792 84.54 cv
176.633 84.5568 li
172.688 78.0647 li
172.79 77.9149 172.852 77.7338 172.852 77.5365 cv
172.852 77.0342 172.462 76.6255 171.984 76.6255 cv
171.505 76.6255 171.116 77.0342 171.116 77.5365 cv
171.116 77.6656 171.143 77.7887 171.189 77.9004 cv
167.736 81.583 li
167.632 81.5373 167.519 81.5118 167.401 81.5118 cv
166.922 81.5118 166.534 81.9209 166.534 82.4237 cv
166.534 82.9263 166.922 83.3347 167.401 83.3347 cv
167.879 83.3347 168.269 82.9263 168.269 82.4237 cv
168.269 82.2944 168.242 82.1714 168.196 82.0598 cv
171.648 78.3772 li
171.752 78.4228 171.865 78.4484 171.984 78.4484 cv
172.144 78.4307 li
176.087 84.9237 li
175.985 85.0735 175.923 85.255 175.923 85.4524 cv
175.923 85.9546 176.313 86.3629 176.792 86.3629 cv
177.27 86.3629 177.658 85.9546 177.658 85.4524 cv
177.658 85.3561 177.64 85.2643 177.613 85.1768 cv
180.256 82.8833 li
180.379 82.9536 180.518 82.9975 180.668 82.9975 cv
181.033 82.9975 181.345 82.7585 181.472 82.4214 cv
188.232 82.4214 li
188.36 82.7585 188.671 82.9975 189.038 82.9975 cv
189.515 82.9975 189.904 82.5888 189.904 82.087 cv
189.904 81.9569 189.878 81.8348 189.831 81.7231 cv
192.548 78.8249 li
192.651 78.8702 192.764 78.8957 192.883 78.8957 cv
193.001 78.8957 193.115 78.8702 193.218 78.8249 cv
198.989 84.9786 li
198.942 85.0906 198.915 85.2146 198.915 85.3443 cv
198.915 85.8461 199.304 86.2548 199.783 86.2548 cv
200.262 86.2548 200.651 85.8461 200.651 85.3443 cv
200.651 84.8415 200.262 84.4324 199.783 84.4324 cv
cp
.317647 .396078 .494118 rgb
f
199.522 79.9065 mo
199.142 79.9065 198.834 80.2299 198.834 80.6284 cv
198.876 80.8662 li
192.587 86.656 li
192.494 86.6059 192.39 86.5751 192.278 86.5751 cv
192.113 86.5989 li
188.411 81.2243 li
188.479 81.1127 188.52 80.9813 188.52 80.8403 cv
188.52 80.4417 188.211 80.1178 187.831 80.1178 cv
187.452 80.1178 187.143 80.4417 187.143 80.8403 cv
187.143 80.9857 187.186 81.1216 187.256 81.2353 cv
184.761 85.0068 li
184.609 84.9879 li
184.32 84.9879 184.073 85.1777 183.972 85.4453 cv
175.562 85.4453 li
175.461 85.1777 175.213 84.9879 174.923 84.9879 cv
174.544 84.9879 174.236 85.3117 174.236 85.7107 cv
174.236 86.0122 174.414 86.2711 174.666 86.3787 cv
174.666 87.7568 li
169.957 77.329 li
170.07 77.2007 170.141 77.0302 170.141 76.8421 cv
170.141 76.4444 169.832 76.1205 169.452 76.1205 cv
169.073 76.1205 168.765 76.4444 168.765 76.8421 cv
168.765 77.2412 169.073 77.5655 169.452 77.5655 cv
169.491 77.5615 li
174.419 88.4754 li
174.307 88.6045 174.236 88.7742 174.236 88.9627 cv
174.236 89.3609 174.544 89.6847 174.923 89.6847 cv
175.302 89.6847 175.611 89.3609 175.611 88.9627 cv
175.611 88.6608 175.434 88.4024 175.183 88.2943 cv
175.183 86.3783 li
175.356 86.304 175.492 86.1581 175.562 85.9753 cv
183.972 85.9753 li
184.073 86.2425 184.32 86.4324 184.609 86.4324 cv
184.988 86.4324 185.296 86.1085 185.296 85.7107 cv
185.296 85.564 185.255 85.4281 185.183 85.3144 cv
187.678 81.5434 li
187.831 81.5632 li
187.996 81.5394 li
191.697 86.9153 li
191.631 87.0265 191.591 87.157 191.591 87.2981 cv
191.591 87.6962 191.899 88.021 192.278 88.021 cv
192.657 88.021 192.966 87.6962 192.966 87.2981 cv
192.924 87.0594 li
199.211 81.2696 li
199.305 81.3202 199.41 81.3513 199.522 81.3513 cv
199.901 81.3513 200.209 81.0275 200.209 80.6284 cv
200.209 80.2299 199.901 79.9065 199.522 79.9065 cv
cp
.0901961 .772549 .8 rgb
f
168.996 84.9575 mo
169.376 84.9575 169.684 84.6336 169.684 84.2355 cv
169.643 83.9969 li
175.93 78.208 li
176.024 78.2576 176.127 78.2884 176.239 78.2884 cv
176.405 78.265 li
180.106 83.6396 li
180.039 83.7512 179.998 83.8822 179.998 84.0237 cv
179.998 84.4223 180.307 84.7461 180.687 84.7461 cv
181.066 84.7461 181.375 84.4223 181.375 84.0237 cv
181.375 83.8774 181.333 83.7424 181.261 83.6281 cv
183.756 79.8568 li
183.909 79.8761 li
184.199 79.8761 184.445 79.6859 184.546 79.4187 cv
192.956 79.4187 li
193.057 79.6859 193.305 79.8761 193.595 79.8761 cv
193.973 79.8761 194.281 79.5518 194.281 79.1533 cv
194.281 78.8509 194.104 78.5925 193.853 78.4853 cv
193.853 77.1067 li
198.561 87.5345 li
198.448 87.6632 198.377 87.8333 198.377 88.0214 cv
198.377 88.4196 198.687 88.7434 199.066 88.7434 cv
199.445 88.7434 199.753 88.4196 199.753 88.0214 cv
199.753 87.6223 199.445 87.2985 199.066 87.2985 cv
199.027 87.3025 li
194.099 76.3886 li
194.212 76.2594 194.281 76.0894 194.281 75.9013 cv
194.281 75.5031 193.973 75.1792 193.595 75.1792 cv
193.215 75.1792 192.906 75.5031 192.906 75.9013 cv
192.906 76.2031 193.084 76.4615 193.335 76.5693 cv
193.335 78.4853 li
193.162 78.56 193.026 78.7054 192.956 78.8882 cv
184.546 78.8882 li
184.445 78.6211 184.199 78.4307 183.909 78.4307 cv
183.53 78.4307 183.221 78.7546 183.221 79.1533 cv
183.221 79.2996 183.263 79.4353 183.335 79.5496 cv
180.84 83.3201 li
180.687 83.3008 li
180.522 83.324 li
176.82 77.9482 li
176.887 77.8375 176.927 77.7065 176.927 77.5659 cv
176.927 77.1673 176.619 76.843 176.239 76.843 cv
175.86 76.843 175.552 77.1673 175.552 77.5659 cv
175.594 77.8041 li
169.307 83.5935 li
169.213 83.5438 169.108 83.5121 168.996 83.5121 cv
168.617 83.5121 168.309 83.8365 168.309 84.2355 cv
168.309 84.6336 168.617 84.9575 168.996 84.9575 cv
cp
.984314 .690196 .231373 rgb
f
74.5064 129.15 mo
64.7488 129.15 li
53.9039 129.15 li
44.1463 129.15 li
44.1463 120.79 li
44.1463 117.445 li
53.9039 117.445 li
64.7488 117.445 li
74.5064 117.445 li
74.5064 120.79 li
74.5064 129.15 li
64.7488 120.79 mo
64.7488 128.912 li
74.2682 128.912 li
74.2682 120.79 li
64.7488 120.79 li
54.1422 120.79 mo
54.1422 128.912 li
64.5106 128.912 li
64.5106 120.79 li
54.1422 120.79 li
44.3854 120.79 mo
44.3854 128.912 li
53.9039 128.912 li
53.9039 120.79 li
44.3854 120.79 li
64.7488 117.685 mo
64.7488 120.551 li
74.2682 120.551 li
74.2682 117.685 li
64.7488 117.685 li
54.1422 117.685 mo
54.1422 120.551 li
64.5106 120.551 li
64.5106 117.685 li
54.1422 117.685 li
44.3854 117.685 mo
44.3854 120.551 li
53.9039 120.551 li
53.9039 117.685 li
44.3854 117.685 li
.572549 .792157 .890196 rgb
f
46.5544 118.959 mo
44.8425 118.959 li
44.8425 118.222 li
46.5544 118.222 li
46.5544 118.959 li
f
48.6147 122.422 mo
44.8425 122.422 li
44.8425 121.685 li
48.6147 121.685 li
48.6147 122.422 li
f
48.2069 118.959 mo
47.5495 118.959 li
47.5495 118.222 li
48.2069 118.222 li
48.2069 118.959 li
f
52.9944 118.959 mo
52.3378 118.959 li
52.3378 118.222 li
52.9944 118.222 li
52.9944 118.959 li
f
51.4413 122.422 mo
50.7856 122.422 li
50.7856 121.685 li
51.4413 121.685 li
51.4413 122.422 li
f
49.7397 118.959 mo
48.6147 118.959 li
48.6147 118.222 li
49.7397 118.222 li
49.7397 118.959 li
f
51.7963 118.959 mo
50.6704 118.959 li
50.6704 118.222 li
51.7963 118.222 li
51.7963 118.959 li
f
50.3022 122.422 mo
49.178 122.422 li
49.178 121.685 li
50.3022 121.685 li
50.3022 122.422 li
f
63.4023 118.959 mo
61.6894 118.959 li
61.6894 118.222 li
63.4023 118.222 li
63.4023 118.959 li
f
68.5308 118.959 mo
65.2067 118.959 li
65.2067 118.222 li
68.5308 118.222 li
68.5308 118.959 li
f
60.6953 118.959 mo
60.0377 118.959 li
60.0377 118.222 li
60.6953 118.222 li
60.6953 118.959 li
f
55.907 118.959 mo
55.2505 118.959 li
55.2505 118.222 li
55.907 118.222 li
55.907 118.959 li
f
59.6292 118.959 mo
58.505 118.959 li
58.505 118.222 li
59.6292 118.222 li
59.6292 118.959 li
f
71.1393 118.959 mo
70.4819 118.959 li
70.4819 118.222 li
71.1393 118.222 li
71.1393 118.959 li
f
70.0741 118.959 mo
68.9491 118.959 li
68.9491 118.222 li
70.0741 118.222 li
70.0741 118.959 li
f
73.667 118.959 mo
72.0648 118.959 li
72.0648 118.222 li
73.667 118.222 li
73.667 118.959 li
f
53.3045 125.01 mo
49.9797 125.01 li
49.9797 124.273 li
53.3045 124.273 li
53.3045 125.01 li
f
58.0647 125.01 mo
54.7407 125.01 li
54.7407 124.273 li
58.0647 124.273 li
58.0647 125.01 li
f
48.1076 126.284 mo
44.7835 126.284 li
44.7835 125.548 li
48.1076 125.548 li
48.1076 126.284 li
f
48.0276 125.01 mo
47.371 125.01 li
47.371 124.273 li
48.0276 124.273 li
48.0276 125.01 li
f
49.5613 125.01 mo
48.4372 125.01 li
48.4372 124.273 li
49.5613 124.273 li
49.5613 125.01 li
f
46.4456 125.01 mo
44.8432 125.01 li
44.8432 124.273 li
46.4456 124.273 li
46.4456 125.01 li
f
57.5741 118.959 mo
56.4492 118.959 li
56.4492 118.222 li
57.5741 118.222 li
57.5741 118.959 li
f
52.9944 123.666 mo
51.283 123.666 li
51.283 122.93 li
52.9944 122.93 li
52.9944 123.666 li
f
56.4352 123.666 mo
54.7231 123.666 li
54.7231 122.93 li
56.4352 122.93 li
56.4352 123.666 li
f
61.3588 126.284 mo
59.6468 126.284 li
59.6468 125.548 li
61.3588 125.548 li
61.3588 126.284 li
f
46.5985 127.578 mo
44.8864 127.578 li
44.8864 126.841 li
46.5985 126.841 li
46.5985 127.578 li
f
50.2873 123.666 mo
49.6307 123.666 li
49.6307 122.93 li
50.2873 122.93 li
50.2873 123.666 li
f
62.8741 123.666 mo
62.2166 123.666 li
62.2166 122.93 li
62.8741 122.93 li
62.8741 123.666 li
f
63.818 123.666 mo
63.1606 123.666 li
63.1606 122.93 li
63.818 122.93 li
63.818 123.666 li
f
49.5059 126.284 mo
48.8494 126.284 li
48.8494 125.548 li
49.5059 125.548 li
49.5059 126.284 li
f
45.4998 123.666 mo
44.8425 123.666 li
44.8425 122.93 li
45.4998 122.93 li
45.4998 123.666 li
f
49.2221 123.666 mo
48.0979 123.666 li
48.0979 122.93 li
49.2221 122.93 li
49.2221 123.666 li
f
57.961 123.666 mo
56.8378 123.666 li
56.8378 122.93 li
57.961 122.93 li
57.961 123.666 li
f
47.1663 123.666 mo
46.043 123.666 li
46.043 122.93 li
47.1663 122.93 li
47.1663 123.666 li
f
73.602 125.01 mo
69.8296 125.01 li
69.8296 124.273 li
73.602 124.273 li
73.602 125.01 li
f
62.5805 125.01 mo
58.8083 125.01 li
58.8083 124.273 li
62.5805 124.273 li
62.5805 125.01 li
f
67.6588 125.01 mo
67.0032 125.01 li
67.0032 124.273 li
67.6588 124.273 li
67.6588 125.01 li
f
69.2672 125.01 mo
68.1422 125.01 li
68.1422 124.273 li
69.2672 124.273 li
69.2672 125.01 li
f
64.0518 125.01 mo
62.9268 125.01 li
62.9268 124.273 li
64.0518 124.273 li
64.0518 125.01 li
f
61.3 122.422 mo
57.5268 122.422 li
57.5268 121.685 li
61.3 121.685 li
61.3 122.422 li
f
55.3568 122.422 mo
54.7003 122.422 li
54.7003 121.685 li
55.3568 121.685 li
55.3568 122.422 li
f
56.9644 122.422 mo
55.8402 122.422 li
55.8402 121.685 li
56.9644 121.685 li
56.9644 122.422 li
f
68.4649 122.422 mo
65.1399 122.422 li
65.1399 121.685 li
68.4649 121.685 li
68.4649 122.422 li
f
71.0734 122.422 mo
70.416 122.422 li
70.416 121.685 li
71.0734 121.685 li
71.0734 122.422 li
f
70.0082 122.422 mo
68.8832 122.422 li
68.8832 121.685 li
70.0082 121.685 li
70.0082 122.422 li
f
62.8143 122.422 mo
61.6894 122.422 li
61.6894 121.685 li
62.8143 121.685 li
62.8143 122.422 li
f
73.6011 122.422 mo
71.9989 122.422 li
71.9989 121.685 li
73.6011 121.685 li
73.6011 122.422 li
f
65.8676 126.284 mo
65.2102 126.284 li
65.2102 125.548 li
65.8676 125.548 li
65.8676 126.284 li
f
62.5805 126.284 mo
61.9248 126.284 li
61.9248 125.548 li
62.5805 125.548 li
62.5805 126.284 li
f
68.3953 126.284 mo
66.7922 126.284 li
66.7922 125.548 li
68.3953 125.548 li
68.3953 126.284 li
f
67.1613 123.666 mo
65.4492 123.666 li
65.4492 122.93 li
67.1613 122.93 li
67.1613 123.666 li
f
68.8137 123.666 mo
68.1572 123.666 li
68.1572 122.93 li
68.8137 122.93 li
68.8137 123.666 li
f
70.3465 123.666 mo
69.2224 123.666 li
69.2224 122.93 li
70.3465 122.93 li
70.3465 123.666 li
f
56.4124 127.578 mo
54.7003 127.578 li
54.7003 126.841 li
56.4124 126.841 li
56.4124 127.578 li
f
58.0647 127.578 mo
57.4073 127.578 li
57.4073 126.841 li
58.0647 126.841 li
58.0647 127.578 li
f
59.5975 127.578 mo
58.4725 127.578 li
58.4725 126.841 li
59.5975 126.841 li
59.5975 127.578 li
f
72.4014 123.666 mo
71.2773 123.666 li
71.2773 122.93 li
72.4014 122.93 li
72.4014 123.666 li
f
59.5729 123.666 mo
58.4479 123.666 li
58.4479 122.93 li
59.5729 122.93 li
59.5729 123.666 li
f
61.6277 123.666 mo
60.5027 123.666 li
60.5027 122.93 li
61.6277 122.93 li
61.6277 123.666 li
f
58.2414 126.284 mo
57.5848 126.284 li
57.5848 125.548 li
58.2414 125.548 li
58.2414 126.284 li
f
59.1844 126.284 mo
58.527 126.284 li
58.527 125.548 li
59.1844 125.548 li
59.1844 126.284 li
f
56.9942 126.284 mo
55.8709 126.284 li
55.8709 125.548 li
56.9942 125.548 li
56.9942 126.284 li
f
59.3457 89.6772 mo
59.3457 100.183 50.83 108.699 40.3236 108.699 cv
29.8189 108.699 21.3023 100.183 21.3023 89.6772 cv
21.3023 79.1717 29.8189 70.656 40.3236 70.656 cv
50.83 70.656 59.3457 79.1717 59.3457 89.6772 cv
cp
.996078 .807843 .407843 rgb
f
46.4227 85.5002 mo
46.4227 81.1681 li
50.7557 81.1681 li
50.7557 85.5002 li
46.4227 85.5002 li
cp
50.7557 89.8903 mo
46.4227 89.8903 li
46.4227 85.5574 li
50.7557 85.5574 li
50.7557 89.8903 li
cp
50.7557 94.2796 mo
46.4227 94.2796 li
46.4227 89.9466 li
50.7557 89.9466 li
50.7557 94.2796 li
cp
50.7557 98.6698 mo
46.4227 98.6698 li
46.4227 94.3368 li
50.7557 94.3368 li
50.7557 98.6698 li
cp
46.3655 98.6698 mo
42.0326 98.6698 li
42.0326 94.3368 li
46.3655 94.3368 li
46.3655 98.6698 li
cp
41.9754 98.6698 mo
37.6433 98.6698 li
37.6433 94.3368 li
41.9754 94.3368 li
41.9754 98.6698 li
cp
37.5862 98.6698 mo
33.2532 98.6698 li
33.2532 94.3368 li
37.5862 94.3368 li
37.5862 98.6698 li
cp
33.1969 98.6698 mo
28.8639 98.6698 li
28.8639 94.3368 li
33.1969 94.3368 li
33.1969 98.6698 li
cp
28.8639 89.9466 mo
33.1969 89.9466 li
33.1969 94.2796 li
28.8639 94.2796 li
28.8639 89.9466 li
cp
28.8639 85.5574 mo
33.1969 85.5574 li
33.1969 89.8903 li
28.8639 89.8903 li
28.8639 85.5574 li
cp
28.8639 81.1681 mo
33.1969 81.1681 li
33.1969 85.5002 li
28.8639 85.5002 li
28.8639 81.1681 li
cp
33.2532 81.1681 mo
37.5862 81.1681 li
37.5862 85.5002 li
33.2532 85.5002 li
33.2532 81.1681 li
cp
37.6433 81.1681 mo
41.9754 81.1681 li
41.9754 85.5002 li
37.6433 85.5002 li
37.6433 81.1681 li
cp
37.6433 89.9466 mo
41.9754 89.9466 li
41.9754 94.2796 li
37.6433 94.2796 li
37.6433 89.9466 li
cp
41.9754 89.8903 mo
37.6433 89.8903 li
37.6433 85.5574 li
41.9754 85.5574 li
41.9754 89.8903 li
cp
33.2532 85.5574 mo
37.5862 85.5574 li
37.5862 89.8903 li
33.2532 89.8903 li
33.2532 85.5574 li
cp
33.2532 89.9466 mo
37.5862 89.9466 li
37.5862 94.2796 li
33.2532 94.2796 li
33.2532 89.9466 li
cp
46.3655 94.2796 mo
42.0326 94.2796 li
42.0326 89.9466 li
46.3655 89.9466 li
46.3655 94.2796 li
cp
46.3655 89.8903 mo
42.0326 89.8903 li
42.0326 85.5574 li
46.3655 85.5574 li
46.3655 89.8903 li
cp
42.0326 81.1681 mo
46.3655 81.1681 li
46.3655 85.5002 li
42.0326 85.5002 li
42.0326 81.1681 li
cp
46.4227 81.111 mo
46.3655 81.111 li
42.0326 81.111 li
41.9754 81.111 li
37.6433 81.111 li
37.5862 81.111 li
33.2532 81.111 li
33.1969 81.111 li
28.8068 81.111 li
28.8068 85.5002 li
28.8068 85.5574 li
28.8068 89.8903 li
28.8068 89.9466 li
28.8068 94.2796 li
28.8068 94.3368 li
28.8068 98.726 li
33.1969 98.726 li
33.2532 98.726 li
37.5862 98.726 li
37.6433 98.726 li
41.9754 98.726 li
42.0326 98.726 li
46.3655 98.726 li
46.4227 98.726 li
50.812 98.726 li
50.812 94.3368 li
50.812 94.2796 li
50.812 89.9466 li
50.812 89.8903 li
50.812 85.5574 li
50.812 85.5002 li
50.812 81.111 li
46.4227 81.111 li
cp
1 1 .878431 rgb
f
53.3283 100.063 mo
51.0422 99.3017 li
51.0422 99.6743 li
27.8453 99.6743 li
27.8462 81.3773 li
28.2179 81.3773 li
27.4576 79.0912 li
26.6965 81.3773 li
27.0692 81.3773 li
27.0692 99.6743 li
27.0692 100.45 li
51.0414 100.451 li
51.0414 100.823 li
53.3283 100.063 li
cp
.172549 .341176 .470588 rgb
f
50.0719 83.1412 mo
49.7828 83.1412 49.5481 83.376 49.5481 83.665 cv
49.5481 83.8452 49.6443 83.996 49.7823 84.0905 cv
47.0437 92.4362 li
47.023 92.4322 li
46.794 92.4897 li
43.601 88.9487 li
43.6511 88.8682 43.6876 88.7786 43.6876 88.6766 cv
43.6876 88.3865 43.4538 88.1528 43.1637 88.1528 cv
42.8737 88.1528 42.639 88.3865 42.639 88.6766 cv
42.639 88.9126 42.7968 89.1042 43.0108 89.1705 cv
42.8411 97.9174 li
41.2341 94.8136 li
41.3356 94.7178 41.4006 94.5842 41.4006 94.4335 cv
41.4006 94.1434 41.166 93.9097 40.8768 93.9097 cv
40.6373 93.9097 40.4439 94.0722 40.3806 94.2911 cv
38.1324 94.2911 li
38.0692 94.0722 37.8758 93.9097 37.6363 93.9097 cv
37.3463 93.9097 37.1116 94.1434 37.1116 94.4335 cv
37.1515 94.6316 li
34.6502 96.589 li
34.5637 96.5266 34.463 96.4822 34.3483 96.4822 cv
34.2451 96.4822 34.1541 96.5199 34.0732 96.5714 cv
31.912 94.6576 li
31.9664 94.4335 li
31.9664 94.1434 31.7318 93.9097 31.4426 93.9097 cv
31.1526 93.9097 30.9179 94.1434 30.9179 94.4335 cv
30.9179 94.5705 30.9733 94.6927 31.059 94.7859 cv
29.1008 97.9873 li
28.9641 97.9597 li
28.6741 97.9597 28.4394 98.1934 28.4394 98.4835 cv
28.4394 98.7735 28.6741 99.0082 28.9641 99.0082 cv
29.2541 99.0082 29.4888 98.7735 29.4888 98.4835 cv
29.4888 98.3459 29.4335 98.2237 29.3474 98.1306 cv
31.3055 94.9304 li
31.4426 94.9582 li
31.5459 94.9582 31.6369 94.9204 31.7181 94.8685 cv
33.8789 96.7824 li
33.8245 97.0069 li
33.8245 97.2961 34.0582 97.5307 34.3483 97.5307 cv
34.6384 97.5307 34.873 97.2961 34.873 97.0069 cv
34.833 96.8095 li
37.3344 94.8513 li
37.421 94.9138 37.5216 94.9582 37.6363 94.9582 cv
37.8753 94.9582 38.0687 94.7951 38.132 94.5767 cv
40.3811 94.5767 li
40.4444 94.7951 40.6378 94.9582 40.8768 94.9582 cv
40.9762 94.9379 li
42.6157 98.1037 li
42.5142 98.1991 42.4492 98.3327 42.4492 98.4835 cv
42.4492 98.7735 42.6838 99.0082 42.973 99.0082 cv
43.2631 99.0082 43.4977 98.7735 43.4977 98.4835 cv
43.4977 98.2475 43.3399 98.0563 43.1259 97.9903 cv
43.2965 89.1745 li
43.3922 89.1437 li
46.5858 92.6848 li
46.5356 92.7653 46.4992 92.8549 46.4992 92.9569 cv
46.4992 93.2469 46.7329 93.4807 47.023 93.4807 cv
47.3131 93.4807 47.5477 93.2469 47.5477 92.9569 cv
47.5477 92.7767 47.4515 92.626 47.3135 92.5315 cv
50.0521 84.1859 li
50.0719 84.1898 li
50.362 84.1898 50.5966 83.9551 50.5966 83.665 cv
50.5966 83.376 50.362 83.1412 50.0719 83.1412 cv
cp
.945098 .403922 .160784 rgb
f
164.415 123.742 mo
160.255 123.742 li
160.2 123.742 li
156.093 123.742 li
156.039 123.742 li
151.932 123.742 li
151.877 123.742 li
147.77 123.742 li
147.717 123.742 li
143.555 123.742 li
143.555 119.581 li
143.555 119.527 li
143.555 115.419 li
143.555 115.366 li
143.555 111.258 li
143.555 111.204 li
143.555 107.043 li
147.717 107.043 li
147.77 107.043 li
151.877 107.043 li
151.932 107.043 li
156.039 107.043 li
156.093 107.043 li
160.2 107.043 li
160.255 107.043 li
164.415 107.043 li
164.415 111.204 li
164.415 111.258 li
164.415 115.366 li
164.415 115.419 li
164.415 119.527 li
164.415 119.581 li
164.415 123.742 li
160.255 119.581 mo
160.255 123.689 li
164.362 123.689 li
164.362 119.581 li
160.255 119.581 li
156.093 119.581 mo
156.093 123.689 li
160.2 123.689 li
160.2 119.581 li
156.093 119.581 li
151.932 119.581 mo
151.932 123.689 li
156.039 123.689 li
156.039 119.581 li
151.932 119.581 li
147.77 119.581 mo
147.77 123.689 li
151.877 123.689 li
151.877 119.581 li
147.77 119.581 li
143.609 119.581 mo
143.609 123.689 li
147.717 123.689 li
147.717 119.581 li
143.609 119.581 li
160.255 115.419 mo
160.255 119.527 li
164.362 119.527 li
164.362 115.419 li
160.255 115.419 li
156.093 115.419 mo
156.093 119.527 li
160.2 119.527 li
160.2 115.419 li
156.093 115.419 li
151.932 115.419 mo
151.932 119.527 li
156.039 119.527 li
156.039 115.419 li
151.932 115.419 li
147.77 115.419 mo
147.77 119.527 li
151.877 119.527 li
151.877 115.419 li
147.77 115.419 li
143.609 115.419 mo
143.609 119.527 li
147.717 119.527 li
147.717 115.419 li
143.609 115.419 li
160.255 111.258 mo
160.255 115.366 li
164.362 115.366 li
164.362 111.258 li
160.255 111.258 li
156.093 111.258 mo
156.093 115.366 li
160.2 115.366 li
160.2 111.258 li
156.093 111.258 li
151.932 111.258 mo
151.932 115.366 li
156.039 115.366 li
156.039 111.258 li
151.932 111.258 li
147.77 111.258 mo
147.77 115.366 li
151.877 115.366 li
151.877 111.258 li
147.77 111.258 li
143.609 111.258 mo
143.609 115.366 li
147.717 115.366 li
147.717 111.258 li
143.609 111.258 li
160.255 107.097 mo
160.255 111.204 li
164.362 111.204 li
164.362 107.097 li
160.255 107.097 li
156.093 107.097 mo
156.093 111.204 li
160.2 111.204 li
160.2 107.097 li
156.093 107.097 li
151.932 107.097 mo
151.932 111.204 li
156.039 111.204 li
156.039 107.097 li
151.932 107.097 li
147.77 107.097 mo
147.77 111.204 li
151.877 111.204 li
151.877 107.097 li
147.77 107.097 li
143.609 107.097 mo
143.609 111.204 li
147.717 111.204 li
147.717 107.097 li
143.609 107.097 li
.619608 .839216 .937255 rgb
f
164.633 125.73 mo
164.633 125.377 li
141.908 125.377 li
141.908 124.641 li
141.908 107.295 li
141.554 107.295 li
142.276 105.128 li
142.997 107.295 li
142.644 107.295 li
142.643 124.641 li
164.634 124.641 li
164.634 124.288 li
166.801 125.009 li
164.633 125.73 li
.392157 .741176 .898039 rgb
f
148.921 86.968 mo
138.33 86.968 li
138.113 86.968 137.937 86.7918 137.937 86.5747 cv
137.937 86.337 li
137.937 86.1199 138.113 85.9437 138.33 85.9437 cv
148.921 85.9437 li
149.138 85.9437 149.315 86.1199 149.315 86.337 cv
149.315 86.5747 li
149.315 86.7918 149.138 86.968 148.921 86.968 cv
.619608 .839216 .937255 rgb
f
148.921 89.0211 mo
138.334 89.0211 li
138.117 89.0211 137.941 88.8449 137.941 88.6278 cv
137.941 88.3883 li
137.941 88.1708 138.117 87.995 138.334 87.995 cv
148.921 87.995 li
149.138 87.995 149.315 88.1708 149.315 88.3883 cv
149.315 88.6278 li
149.315 88.8449 149.138 89.0211 148.921 89.0211 cv
f
148.288 91.076 mo
138.955 91.076 li
138.388 91.076 137.928 90.6164 137.928 90.0495 cv
149.315 90.0495 li
149.315 90.6164 148.855 91.076 148.288 91.076 cv
f
149.342 85.0353 mo
137.903 85.0353 li
138.026 83.2252 138.129 82.762 135.886 80.3121 cv
135.886 80.3121 li
137.803 82.4058 140.559 83.7191 143.621 83.7191 cv
146.667 83.7191 149.408 82.4212 151.324 80.3481 cv
149.118 82.7664 149.217 83.2341 149.342 85.0353 cv
f
143.621 83.7191 mo
140.559 83.7191 137.803 82.4058 135.886 80.3121 cv
134.179 78.447 133.137 75.9626 133.137 73.2347 cv
133.137 67.4444 137.832 62.7497 143.621 62.7497 cv
149.412 62.7497 154.106 67.4444 154.106 73.2347 cv
154.106 75.98 153.051 78.4791 151.324 80.3481 cv
149.408 82.4212 146.667 83.7191 143.621 83.7191 cv
f
144.39 92.1022 mo
142.857 92.1022 li
142.289 92.1022 141.83 91.6429 141.83 91.076 cv
145.416 91.076 li
145.416 91.6429 144.956 92.1022 144.39 92.1022 cv
f
143.739 60.6307 mo
143.515 60.6307 li
143.199 60.6307 142.942 60.374 142.942 60.0572 cv
142.942 57.5185 li
142.942 57.2016 143.199 56.945 143.515 56.945 cv
143.739 56.945 li
144.056 56.945 144.313 57.2016 144.313 57.5185 cv
144.313 60.0572 li
144.313 60.374 144.056 60.6307 143.739 60.6307 cv
f
136.981 62.4394 mo
136.782 62.4394 136.59 62.3365 136.484 62.1525 cv
135.215 59.9548 li
135.139 59.823 135.118 59.6664 135.158 59.5198 cv
135.197 59.373 135.293 59.2478 135.425 59.1717 cv
135.619 59.0601 li
135.709 59.008 135.807 58.9832 135.905 58.9832 cv
136.103 58.9832 136.295 59.0858 136.401 59.2697 cv
137.671 61.4674 li
137.747 61.5993 137.768 61.7557 137.728 61.903 cv
137.689 62.0497 137.593 62.1749 137.461 62.251 cv
137.266 62.3626 li
137.176 62.4146 137.078 62.4394 136.981 62.4394 cv
f
132.225 67.273 mo
132.128 67.273 132.029 67.2482 131.939 67.196 cv
129.741 65.9266 li
129.467 65.7684 129.373 65.4176 129.531 65.1435 cv
129.643 64.9501 li
129.749 64.7663 129.942 64.6635 130.14 64.6635 cv
130.237 64.6635 130.336 64.6881 130.426 64.74 cv
132.624 66.0079 li
132.756 66.0839 132.853 66.2095 132.892 66.3563 cv
132.931 66.5036 132.911 66.66 132.835 66.7918 cv
132.722 66.987 li
132.615 67.1704 132.423 67.273 132.225 67.273 cv
f
130.525 73.8385 mo
127.987 73.8376 li
127.671 73.8376 127.414 73.581 127.414 73.2646 cv
127.414 73.0409 li
127.414 72.7245 127.671 72.4677 127.987 72.4677 cv
130.525 72.4665 li
130.677 72.4665 130.824 72.5272 130.931 72.6348 cv
131.039 72.7419 131.099 72.8884 131.099 73.0405 cv
131.099 73.2655 li
131.098 73.5818 130.842 73.8385 130.525 73.8385 cv
f
130.137 81.6402 mo
129.939 81.6402 129.746 81.5375 129.64 81.3536 cv
129.529 81.1606 li
129.37 80.8868 129.464 80.5362 129.738 80.3775 cv
131.936 79.1075 li
132.024 79.0568 132.123 79.0308 132.223 79.0308 cv
132.273 79.0308 132.323 79.0372 132.371 79.0504 cv
132.519 79.09 132.644 79.1862 132.72 79.318 cv
132.832 79.5132 li
132.989 79.7874 132.895 80.1371 132.622 80.2954 cv
130.423 81.5636 li
130.333 81.6155 130.234 81.6402 130.137 81.6402 cv
f
150.498 62.4394 mo
150.401 62.4394 150.302 62.4146 150.212 62.3626 cv
150.018 62.251 li
149.886 62.1749 149.79 62.0497 149.751 61.903 cv
149.711 61.7557 149.732 61.5993 149.808 61.4674 cv
151.077 59.2697 li
151.183 59.0858 151.376 58.9832 151.574 58.9832 cv
151.671 58.9832 151.77 59.008 151.86 59.0601 cv
152.054 59.1717 li
152.185 59.2478 152.281 59.373 152.321 59.5198 cv
152.36 59.6664 152.34 59.823 152.264 59.9548 cv
150.995 62.1525 li
150.889 62.3365 150.696 62.4394 150.498 62.4394 cv
f
155.254 67.273 mo
155.056 67.273 154.864 67.1704 154.757 66.987 cv
154.644 66.7918 li
154.568 66.66 154.547 66.5036 154.587 66.3563 cv
154.626 66.2095 154.722 66.0839 154.854 66.0079 cv
157.053 64.74 li
157.143 64.6881 157.241 64.6635 157.338 64.6635 cv
157.537 64.6635 157.73 64.7663 157.836 64.9501 cv
157.947 65.1435 li
158.106 65.4176 158.012 65.7684 157.738 65.9266 cv
155.54 67.196 li
155.45 67.2482 155.351 67.273 155.254 67.273 cv
f
156.954 73.8385 mo
156.637 73.8385 156.38 73.5818 156.38 73.2655 cv
156.38 73.0405 li
156.38 72.8884 156.44 72.7419 156.548 72.6348 cv
156.656 72.5272 156.802 72.4665 156.954 72.4665 cv
159.491 72.4677 li
159.808 72.4677 160.064 72.7245 160.064 73.0409 cv
160.064 73.2646 li
160.064 73.581 159.808 73.8376 159.491 73.8376 cv
156.954 73.8385 li
f
157.342 81.6402 mo
157.244 81.6402 157.146 81.6155 157.056 81.5636 cv
154.857 80.2954 li
154.584 80.1371 154.489 79.7874 154.647 79.5132 cv
154.759 79.318 li
154.835 79.1862 154.96 79.09 155.107 79.0504 cv
155.156 79.0372 155.206 79.0308 155.256 79.0308 cv
155.356 79.0308 155.455 79.0568 155.543 79.1075 cv
157.74 80.3775 li
158.014 80.5362 158.108 80.8868 157.95 81.1606 cv
157.839 81.3536 li
157.732 81.5375 157.54 81.6402 157.342 81.6402 cv
f
92.5666 174.363 mo
91.8643 173.096 li
128.247 152.897 li
127.91 152.289 li
132.326 151.46 li
129.287 154.769 li
128.95 154.163 li
92.5666 174.363 li
f
108.345 174.362 mo
98.2812 174.362 li
98.2812 171.846 li
108.345 171.846 li
108.345 174.362 li
f
120.061 174.362 mo
109.997 174.362 li
109.997 166.241 li
120.061 166.241 li
120.061 174.362 li
f
132.326 174.362 mo
122.262 174.362 li
122.262 159.008 li
132.326 159.008 li
132.326 174.362 li
f
176.921 167.771 mo
176.921 177.553 168.992 185.484 159.209 185.484 cv
149.427 185.484 141.497 177.553 141.497 167.771 cv
141.497 157.989 149.427 150.059 159.209 150.059 cv
168.992 150.059 176.921 157.989 176.921 167.771 cv
cp
.996078 .807843 .407843 rgb
f
166.973 172.611 mo
166.472 173.664 165.983 174.673 165.983 175.628 cv
165.983 178.07 165.986 178.029 165.986 178.029 cv
160.852 179.59 li
154.806 178.245 li
154.808 176.207 li
154.808 176.207 149.913 176.575 149.685 174.238 cv
149.685 174.238 149.533 171.454 149.406 169.493 cv
147.42 169.337 li
147.227 169.321 147.054 169.208 146.963 169.036 cv
146.872 168.865 146.875 168.658 146.97 168.489 cv
149.444 164.121 li
149.604 162.545 149.935 161.066 150.544 159.999 cv
153.152 155.435 161.249 154.052 165.966 159.447 cv
168.212 162.016 169.128 168.076 166.973 172.611 cv
cp
.172549 .341176 .470588 rgb
f
162.19 161.452 mo
161.86 159.996 160.56 158.909 159.004 158.909 cv
157.618 158.909 156.438 159.77 155.961 160.986 cv
155.815 160.956 155.664 160.94 155.51 160.94 cv
154.264 160.94 153.255 161.95 153.255 163.195 cv
153.255 164.383 154.173 165.353 155.338 165.441 cv
155.336 165.45 li
161.843 165.45 li
161.851 165.432 li
162.026 165.45 li
163.135 165.45 164.033 164.551 164.033 163.443 cv
164.033 162.391 163.221 161.537 162.19 161.452 cv
cp
1 1 1 rgb
f
156.391 169.09 mo
158.019 169.09 li
156.896 172.21 li
160.898 168.344 li
159.473 168.344 li
160.898 166.241 li
157.434 166.241 li
156.391 169.09 li
cp
.992157 .737255 .329412 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (IvAN) ()
%%Title: (1407.i043.030.S.m004.c10.modern concepts 2x2 set 1.eps)
%%CreationDate: 9/13/2014 9:26 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9=QoCqkQ^97&JdY3u&#i6Aj/I<Sb2A?L??`9/Ji8Q<4d[m$Hs3L\g87&VP'H5`ioDj_!9:F8l2iG,@V.+euW]R?S@f,&B
%S<-rR<$@#]_E\')>'fTVgV'RH9't?*Bt*q/h0.'2olf&,]A))]mJOCr\HD.;SliN6[d1AOjbg3@]7bA8qs%>;EU@eYgU-f;/ME2R
%q2DuaV?_$*!Vi(YlY$)h834$QI:rbJ:$Omu.n6SXL>fo/:WN1>e*D4[^=-tJH%]<.q\h'_`9pb"!>Mu)'B.h(4Ns)WL,ErI[*DpD
%$U48+jfjQ+ggLFdHK6Xe.MBif_>?a;M+3Tbs'$0,s"N3k-i>OWjIAR&3BAWu*>6Vi+fF;(jLl[r<.HF@Ulia7;nL_&XhIN@8s7]:
%RTlP:U0miBcj(iVRP*^0gmY+=GsfoWP*B%@6;u-uVO'1,Ac&B8s4YOW\#m6tofBG+m@QB<6)T!ki?]QV>eBm1jn++>)G)`!59.&r
%[L6&hYErOQoPB1Oo%V?-C3@ki5)<\&*FLgBj:&kSp1hsU=MJ\e3mk"hY[b.;gM]YNf-F2u>3)1ZjGUTXk!VMdr2qf*:/R!mTjK8b
%JHbg;le"9h+GPYWkM0cgLpEUVP9n\Ad(QS\%g>q!EX)J2Lr^Nt+4L8[g'X)=qf^/$]I9?<*(32#a<-p[e[qs[::l?gd)3%U&FpUX
%^Y:sHSq^Un1FQ_ZnRs'PB<U%YK%%Sgs7tP&qTLo\EX2)QYM1+?p03OM5Q=q?eD!tbpXZM?gKj$mHLA$6*POYY/X'V147-3/-j.0g
%H1I9MGr29]TX/FskYl_mI"f<Er6+XpN)>+`YQ1-'g\PWrm7sJ8+N8*GF762JLSaJbf4nIE*-i*[?#b>1'+7nXQ6)nX'apbb!@Eqq
%8=lM)VIYKF@]IT9?N@mqXa2WKSUMSo4AB?8o&P#$g30#n1FOrG&q";-?/P(Y%U6<.h*LKRGM6rH+X:Y)mnq`Zh*-670pMm0a&N*M
%P?[gBjgr`_fBQU#[;k;hGofpAiE[cZWY)CpX"jT%W,2*c,h:o_d;Ib@n=),5Vrg#8AbBgT!&)m*eTL3r@hH>^iNtl'k"Z+Uh[]Oa
%h<^eCQ92X]3gbjdbE8<'\`t%\Lo:AW>FVT17"INaH+O<i=s%ncHLNr(!T2`U<*k,"-_F%,%J@$WrB92gAo@G%VV?]XCVZaK;]YLI
%5cdu,=Qjq1iB4LUa/sRQ(<I`]f(T3(K896&ru5[-LWcD7/3V.XT0T*Po6@.)Q94SV?.dHu7=RY<QIVeaTETeaeO5VmbGk4h(oZuq
%/W,q4r`R))>ZbXuCm(;L"$N#c;8f^2bARS'IP6_72DOG?Ibegt)J%b>CS$*c=RIGYe0N23`;CR%R+9KX@:F`5Xb%5;WnF^=6/S-Q
%N1fZo&1#MtUGZ^+f)!rnRmg)IR28:jX*rE?^`o.?>*%`3\"/5]=RLm&_7ZGd-ELtTluL_W0`Y'^J^0teM]rXdf50HXG&Q<EQlLQE
%7^/<1AoV"DBB-XQ3X[bgD4]&KKld[Up9TQkGO2I9VE%#AKNXKjAPR"R2TG)1bdAic:>1><c/,45,R[%7">,#6&4`fl>Vh,nE^QrO
%p=AR7XI&9CDNh\Q#p^m8Y+3@73UY$9WM?cdau-aG3%F?s[aWEW1WP"ggmLg$1WL'Aj1ZN-jgZtaI6$`=EF03H+!k.**"t?sn`>Z%
%:YS%CYj1U_R@'LKP;;(FYn<+8Ittj#kk46fqklfIC,24(dHleVgT!?&K^F8&B.hO@+;(=6=93d"T\"7d<cN.e-/3<L(d)pV%'2*;
%YgmFZm/E5%8E4Ytknk1@YQ()6"A?p?59s^(b#.T$.?(>'C1IRfYD^MO92'.#G$/:,?G8j")(pA%*),Xb1ld!=FV)5P[pdhRPFBJA
%7Bu44_1T^OFq!1/1-'<UmS:CElWYqVTc8Dk@Islm"Rc9DBt*H>#Rk'3WPbtf$LhC<Hq,M=raR)2^BKdo1/W&)54D;"(e8G@eZZ2G
%\5mON)(49;Xa#"V.ZL%D9aP@Vd$Z[:OSH?rjrR-QcSOH08(%s!_,.b.)*.gT/P;fU<86N1=@%lMAT9P/?)N2"[/2EGJ#PbFQHkmD
%KX&f7(Is,DoZ9#Q%&ju-ER1@P0%6Ld'!E)H&qE40I+!-&4@/_KFQe;34h$Q;WO-j$JNTG#EMKYoX*j[lT<[I5fimLDdr)e:Y&43Z
%0L(g",sG#.QLHTqmF\kPVD@dC[b!7=KYWa7il!ss^AG'5G6TU]l"=6820B."aNI]0JjIUYj61,r:"_hEgUY*EqA9oF!o4ER>mhXl
%3/l\+R&(#,3-Z_Q][jBm*k%Mkm27HCUh5-5mGpp\!)N,7fF2YVY;4`ZM')!kb?ar3IZLpjm-\Kt]9MaOB,OS2d5rnF5Y;_daq#o!
%:0M=q-DY5s,!CR27<^).E<S^roN6<o/9lN_25A\gLcB"6`n7i+=tSJlZ!DB'#0X*fa=E1CYJ;ic2EuVbY:Nf1Pal(#[;%VVUN0ab
%;Q4]*()4eC?'l*t-PNB`#+%(+7Qu^7O0aZh+'DhQ5@]k'/j2Z+M]%ioMjiM,2%:goNGhgO^d6s'JRpWO.Sh^+ka_:(H5>U`c(dI:
%UTMAB.]hU=0&*BNGB"YW[>B#bRi8>6GOT3%#)^:!Mk\@7Ip'N6R0<&"f=/>M"-;SL'M5EMMkubT[6\jfAX5F/:Q`kZ,0P+4[`,Ik
%*ZX_hhLWd6<gYb\WiXTb2d*qIA6T`g%%=6SAoX3l$hQ7m@%_8,1FXn/hkEYM0Rofni)fo8:bWgtiqXB;Et&"IB/sI\k$"]r@C;UP
%',7Y,<!tI#0\`%YJX%Xk/?D6J+X0(@9Qn8hHmMCJij6$DX@-JWq2-gonRtS:;NqUI)TX\2;PSN)Ck7hLSs6EIWF]Ki$4@I1)'%=3
%Mo+DYUgu("Fe][YMfJpln[0dE;)t%JMc.aZ=qpKBX@6R^\b$^JHn@s"n?'^^U5ZM>'!W4+V/t'@l5-Z?,n71;Bj=TSKGl<(bB+ht
%a0_.opB3\hJY-:/G7-0KIUQ[bX@1?43P4DrC)Za]9*giUP-_q0=[l1nT(A0aNbe7ER`9?,JH[%F33I7+9*MKcFs2R/CY:JpD!Y,]
%C)kcA2l^k-/Q9Y-7l?<A[i3ek1I>a+]Z_RZi5WQa5Fms3eH@!:7e7-8SIZqL(@YbNLXGTF3cb5-h':PJI?oSHN47go+]ZU_$qh@M
%>E>1Q/Oo<.'`YafZT[giPI)@e,3Hg<8]Z`<r"a>BZO*8_mj:0<ASA=u5GX#U;R=G3C3gm_VIh_pWB-h%6O0AGXh*>->*CT^NfBor
%D=pOq-\t1]/rI#=g,]*:^5+=lR)K_GP%GV4frhPS\oI`d4PU'`:MNr!BCa'Ze/u+UOjRm6F/cR:STYMpK>R`-IIJ[)4`a:C-%<ls
%U\77c&FB1$QV%s"M"+bG>!`ni#gBY0pP+6R8TRKY)O(Cp#eEe2U1s@)L3T^pRAFsO$"9oV`+3PI/00\i1AG"ZalNShadg@^ig&PO
%<m7[EP%gGBQkM[3d\hJjheKU_J$X+*-(k5!o=nFqs!9ge1Vf0Xak5?qcBllQni:%]Z8-\[$(phNF2!%IGGMKkc8Xhh4eM=?7;.h0
%q'H[Ul;"*/@(C_2nM%aP8SU^'_dRAp6+6lTdL#5Zij%hX1B:PSLm>&DmR:"GgNMEHYM#_^cM9mN19B$qYZD%oL0mJj[s;J&VqhEh
%[)Ff?7c$\E[a"[A[[E#7d1Np7hR2b%-M4LT$%AXjhVS1pZsC;YfsU.8mB5!.3*X0cB<+.:`^=B$FN-[\BaC7a=]QDrTAA(&Eg()d
%BadpX[L:t0_bQ?,$^3/pJL9\IV`Es:\k+V7@f2`(%b$X^ia#Lp+;VOHV*s.1MMG01'`24WY(;__c.8V80rr\;n8^9(Pdl1OI6hp`
%%+=<u]/cT9UTYqhG^6FIrO2mCd9Hg/YOK?NiWCi?R"Y`N]I42F^[T#H&%qDI$P0o>^^C[cnA#DB]_mW!ARNU]%j:BBd[Ub,nJn-"
%8!#KMcpTcZ@ThGV4'+)3AHcPS&"?re$\0<WnJC!YX<':9EhG_H&"@O/rfQ;9N/+9-[BPUXUn9HZ^2uF3W\L9XPGDDCnroHNEa3kP
%Ud[<7;j``E*TqOQ'!EJ3NNcWb*7Hn)4pPo"V*Fe?9<8)'nFWQ@$`i.``NS./b0`jr6mdXE[eP%>`S5'R4*qTGAql3flO5_;P"Z6N
%a[W%<pTY+;G+DLG;DW,k3bX[[Liq(Z8Op(nN;5gbDR\!u\B7'09<ZY($m_rf1)c28*a88"1f5$SAkV?Ac*hX@aLEYS-7US-r,V'r
%bI>-3M]sM?T!NBTnX?C3F:F.N]1CuU<h-nJel=8Em_>`\@q[ubOTpT"a"``j!#n%\OmHModQp!U_;cA(*GB0O<?B1OIAcQo7N18'
%kUZBZVDW7JpQYJ91BWgZ?)uPcgfJ?JAIUGDD^JtGiYOpZ/IPu.QD7hkKB=>!hG:#$0qt'P79$=9dWbPq8MS+b9E=[T3\D(_Z.t6]
%:<542DH!rhG.DDg(tbr/Ms!!_5KQ8B2,7@m!NZ0^#5afLBS`:k_p@,sBC7<;SMe"G-4;qtCl>'AiGP<;S&MOI091nu*ur4.'W(ib
%T\Fd/cqO[m:']V?^]filB2C:'Vk7MeS.MPO6:sSPo54'XJ^W6"+UZn+nARdjH5:m^b2I0bhY8or"'I[?0DS5UOtW,]b4^Fjr[bB,
%D:8e"CHQhahP2YGJTr?MOa%jP2\V*VUj^C63UY'BIai=TNdGj&RnL1Ka.V+r2oiTlm`k:`@1u1@3.$2QF34"9(qP[<F53>HmMpH6
%\3%ae\ReX_Q93,T:3t^+GO9SP]PFdfCuTlR23E6,.IlQQ\glJ6*91YgUlRP@LOc!HZ1sk*);Y(VqK!sgF$=1?YUn6.AFP48P6P@F
%F$R`SK$c21%eOr'NN-dE/iRi.WSOgo:B1%m;l$YLs6[*[WP*\;OugTUPS4RGN-(jI`*#RG9B@SeOg>UC1*U%mMq)Fn*4X]?7>['q
%ZXS&L9S@NFQcFOuA(%WAR?H'YItlK8]g9,9ea/Kg`FbscZ7h(fk%j-^abo1d'NMn#R!'F\hBhf0dpOk%h!b[XmPSngm^-33^,>H7
%\!X'Sr5S,E>EbonLob1H5U_WN5UbB@Di=_c8D]&[5FFeZ=T:D+!Rnu!OE88#;op1-^VVn@]R#bN+])/.i&6kOgftYOE]](]$n9Z)
%8MtnnEAr[71]#82k[Vu)IVX0-mBg*k>QfebUtI0U2A*ETDP'XFif2nr)b$/&H=t^LbM'8f\U');]Dp%1R+WL"3U$O6BLcI-7>V`e
%%?orI@l,TlUVZ4VrJRPtFDu]/OI<pb\=Ad2eiDaLBQ0OAOl]7nn^FF?=N1c-5.Opk3anYZ9>5/bkXsHK.n:BAil[B6`uFCcXrJ*8
%mZXdnkOc.pY9;N;m+1F@1e*T&AV3Q3HEoKVdWWrEdNg#hBDCuNdF*2o:R9=;SU'!b)NErSh?]bEK8H$4'ZY/P6TQn`-[>[2I0rka
%;bK<[!26$);&&K8gV#'%\^C`so3bp/:kJ%n4.%qWOpr(-4WPcBS)Q3&BiBLN`YsKCReT6*%^Wg9F=dlU94Ti3QJt7Y1:O\%j4#Jg
%V`/eKChfUp"nO!\p]tR7K9S#5@(?M&Q0*0&(`7EeV?Rq#"2)""U=:.3fIcP2G.6g[ZP3CB+CHS!L\k,;Kak#;:.dO$.4.CN>Lr:R
%/GFbDUc`>@N`-6/=VA$QSeH-I(UH7WAr@E\1&G?Z>j1/Yio8m^i7"jZl8;[];FmJ)B/9*FU[&dR3p5@;OSH?+I,7.mS@3Np50/nr
%K'V:;^e(;V1G>Ds78D=?`:AXdOKD0;pmnjWWEK-F8=sHZpaiK:B3A;"b8U:,_AU7+Vo0\"_XBj\9j8h06fPQup#fGiQ3pE[@2anS
%Mt^mX`3OV2bNn0`jgGJ;l7s1:@D*(-nKAHmL'78;\7_.*c]2G9.ei;>B?*.s^?9bC8IPmAICj%cFq!=lmb2[4Nk9Ji[H"D1GO5J+
%!F,k(+Dq;V&c--3K*52+6kL&3i`hL$7EWQ-dHrX1<?\7q/An6"4_?Hj,'d+%Vg%N?q^7#M%[9^lL,-[YGCb=(S@C!S3DkLf64SH&
%iA:DfKEhq/HrG*H7G$t;(<`59<NeK4B4Cn\/uf2_/rD.%rFPr!`;[8DgUFbQ<\;S,3;9GldS%"%TK-sC(,[/V]I:(3*S4^CXCf#N
%K/UoIVF]9lH&E**=1-AB9LCJjU.B9-Fh?V>R'$Jm/?u=+M.KIe2"./0S#)[N_of1Y'd7#ZaGT.fQkEm@`&^hHe\.PXS;UjaS0eoP
%-.&,o]PB.a`kBY1gIpMnBt!G$foCZC*CH"d4k#gWkgfTe;&4*Hb0ka/`S;N+N'Lt&:k7G5_XB3^Gip@N*g<O7@2L\t;(Yq\bTps?
%@ErN)gc?aL`efL3i?Kq&au=LHni:06>sX;X,Omd'5"D,s3F^FS3(ke/RuG&*kCr`E0V9.n+:Dh9/V^2=T,6Y]_L,[7:($g0E'hbl
%4tf$L)Eog%"6Arsi?Vkth.\\M/3DT!%g1%?Uh7QL>Sf*X2S`0NR<!+g%+o%B(M3ZOp(8fXZ.t83lF6/lm9d1kF)d7'A6>nkj_tXX
%%DS"_DY(m+::g[Yl,9'd@i!kh)p-[>=[.-q;\:cG+udi[[b]Yjrj=]$Dfj:ZRm3IPC\Kd"G($^Q[9=5V'R8hXQ&!Y0k_t;BGj$[f
%Tee%=.Kf2sQ,h2`@4Z+$;f9#Oh\a7+Oh;'c/VAU$lT_:-?ogV)aLU4_:!"R87>:+KZdkO]#]Y&<*`Ah4m!Bbb#"D'@>79o=X@?F0
%bK4^"iqhL)"jMlY8=qj/k(p1!^67^=jgB:+?[;n(*!D#"nA*6,"#!uJKa(kr-k(sInA#DB]^W]E&%qDI$P0o>^^C[cr/&'t@*&H\
%+RoH[S..LK*1g,"O>;"s75dMB=kdaS="gC]"_,%RUgQ29J0.>P(Ynqi*_=+fkX!W-Ui;n(Ol]8qLSdqVY`,!GT1-T1F?95tOWQ*G
%5ip'_CZ<KViLQ/JjiC548sXXje(I@+L1E6[DOkfAj*^_DY`Y7Nj<lddrfa`'RRB#;(UPr[PH#!o'm`Cd3C-<W6aAo!Woj9!1jH1'
%oWt!?/!eaSIX*HmqQ%T-!QN\jftP0X,A178>hR9G\6-E(QI.Bil;+ru(d<'XPuV1ec>#1^Fr",l:dS!E\osWaFu_Dc^`mJD)Ro]a
%dQolFi,q"rga!iI)K*/mVi*#`Wif@6gs"0AG/pUCrSJP\T#i\]c*go7k$+)"0s2Nk4M3DsOgZ4Rb:%V7*(@OKX5<i`P7d?-gtK;4
%Rfc_8/d7F^XB;#+'-Z2T"S`RXaW:Cah,Kuj,Q*!r0^[.Xm:LWmJm\4In0>6)KmR"1$uV)g)>!se*;'OGiMZ!\4,@)L8_0k4213i#
%]$;;9#MmDKFng]2DA1i(Rttu":L_[4RoUTf0[>=,2r#^,_`6Ne[qJhd21+=<Ug!PJnRSW=N377s[rUOK`jp+pGis&-R)j9>FQLU<
%Mr,H/R)TF&eJ@_PULWKA31dLKakf9UgID1<8OT=hebYU/WpR#M>P,UsEY0"XfEo:CTQpfbs(&\m+e![R7((_rIA^GA1p%GG_LhSY
%*LDVk=RJTiQPUM$[Am9R/pH\)"1qQCfmbuGIo3SD%_C2A$Z08g?E#ZR1O24`baqEbOuFs@No=r3FC9>gnG\FE'VrsMQ@*3D69jM)
%.,KTcHW/L:V%G':_7m:L"PF`<0Q!m;)^_k:3^uRt`FVrrVZ)O52$SCbnV:WpApH2s=r%U7aCY]0`J7,tDJ^E6WDUgb;TmGN^C%?E
%@%Lm=+!E4DORbgCH'Z]9Bf)`_^qd0A1,[-,+5iu,'W'ZZ`bp(ZYe+JES#$,+!WbAs4l!NH/8RjGFAg799JI-2hm.tYA%<D7-KROo
%G+;/Aac_bIoph,e\sVl)0jD#PM:i-?i^+H:&/PS\"J9k><j0>[iBdTW5*MZN)I:[Vd5grEK>benk49)2ij>ODoKeeU'jUKF##6("
%S9Y,]/TR;g-'gL>JkY!c7.90`l.nFi%"C-\-]dQkkk`u.h+q*7"=/soRXkWJX6pBuN+,$3U6MV4SNMSSC;XV)BB;FkgUV"0m;n".
%"<?p6%Ic1aGRQ.]JB%\O"(""g:D1;Z('42PJ_mKlhnI/`]rYC`FiUml:>4dMa-#hV,9Jl?11g#rjQ"=*MigdLZ?671'00d<!F>8J
%%n%(foWp$&>"Oq!?]!hUl$$FDDYnf9a!!0Z-,0aL!B6_DHdMY2Cg0WQ)BWHI*W//2O1%FrL`p=)7#_,)m58(C3LfTg,;Qa@.r4=K
%Z]1E\3.LP%IH%s_p\f!1n&Jf@E8Q`RIba\0*Y)`M4@Fpf0Y$kD/FSXnbII/aSNlQ?ET`BEJ)'i-*":ghOJNE/)8kF#M0Bs=]%*?@
%PEk*OQ;enk_fhYmb-kknln#Wq+$@G]9OQ9ZEkKPC)lX]5=ZFIlqJV*qjI!]Ro,H/WC&,_+8VQ]9Y*%dLY;>@BM/p$OlBD]Pe4'=L
%#59V;Ie9)-ngV(j9YmuV<OO:6(q-70LrSF[1EOq7U++<jfU#)b(--253f$9_GXNdU""c+<as.h(mh?hj84>q!.0RF2)G,d!I$QYO
%Z`FFSS["(<NeL.X(KckVYgSnuLhm:rZ?f(g%fdm46:lS*+BqJW1,N82;MM!,ob:b%l(X:KD-j:%L"%'V/gdd"NG6Yp'5oL[X%SUo
%;,Z!2fX8W5UlJ%,fOq`BE6rH(2>^q,I:9B5MIk*D*\>=oA*=tqaan5MGM90*heKD%h<6?sUQ=Ao+2>4qs3g4Jjrc@*-)D*lROGt$
%=n!H"aS:gIN;jYaL<;p'p%lH_ARc^fSQ<MB(Ah:K\Rq@V6abq,%B2111:L+4H\P;H[b`b5:g/7<FC.,K@&R@+3\E/@&X[90,/p5/
%/gnUF@PfKkUVZ4VrJRQ/B:55_'dBu+c6OQlFcNsk)I01iA2t;Tpb\ucQ>t6F9.n\e8eS<C1V,^-g6?(cS`"dFmV1q4F>!])#P)^)
%#@IMKfDkbsEl?2(s&&#l.!XMi\J.L&/j[=3;8b9Z4@8M&'Lg?b8g#IC9R&DgQ>Cg*qjgh5AP!t`@\.#',ell`OeIacD5,/5d^(s;
%6qSAVYoHW]@>r+Vc&5_>@#T_>;S['"$d3._=kL^06:>PmG_V5q:%;]G%%c`jc,."J%'*k5dI\Js#s"HG60qKq1d0$<8rqh;Ylmt!
%GZ'"%IWa(bUbj5P$PDV@*%\ZWq.hZ$\tmBXR:O.G8?Ni4(.,qo__fBYL"0qkmYU>b27@bQkUVRcYJ;ic2EuVbY:Nf1Pal(#[;'m6
%DY4OA:+B7=dt6QrV@1l3kqGM;'!FNRSGt6$nkk?oS4tR1aPnuM)3`iskqO)Ybd`m>e2t0Qpg>"2,TGX@=h#31A^>'?%ln(^SFhbd
%(?KV^UHWCeXjOQDrtsam%EEVE<ZS`/ld2e/XLm08=S98SGCHjM7q't;;.[;QXP]48K(ukA>@#7"7rp;?UfP+HdS%"%TK/Apb8ooH
%8EN@'jZ5!J@T["K%XIH7c*C)*Ou:(UXO1lD=hoT!>8/(dR]G=XEL>GfoJ@CmTPC)T.4m41U.A]HJ"fct=8n(R0H1J\q%kB!%/j1=
%3JrdX>,Z(B[@AQW'X-@m$Sl[MgKG@fE3Eh],mk"ll1&;i'>EBT;3DWcX^toe$HiHQHmsqC>=+XM#RojA9%TfAN2b<?*[Y)6-)r?S
%CJehL=Gt$_7!]&-2V+TVpadjsMfRWe`Rgj>!.B5H8nq=#VUhKk1:\/h]EN(J=F)S_7K["UOr/SIn[0cTXggd#7:GGNoSiVMX@5^u
%/57&7e1dRc9):=!BC%@T-0.5*%n#9q*7!Al9HA1FNma-]ekA1q0+3fu?U%pNNLH<^fHsOAq2B1eAo.9rD)rZ]"\dPq%JIDWZTW<u
%5Mu+K2a,q-rprhpm?DF5?rCX:f_-HK):&.Tr5Ju><OWoBMs29f!(>T,Q^F)h8+J9i1_ujBmtBU\+YpH+/T[7AB'j>$[\[d(#h[FH
%nIlG"cB\qKQV*/3=]W1sW?ur#O%Ac8Sp<8T@"OF/<-nFt-IEo@5J-%`CDra?"r@.$[!\l#JbchQ$fgZDn,Gu>\78nI+*W3_gas97
%7H&'l<=d(k8Q.A.lrCZ?"Jt&,k%ea=H4dWi8"]_N^K2HHbb3:Bg]@=:,h$-\FR&7nSL\jg]o1Zse[!J/KHGC'd)K3!F7e^Wjgr_t
%]bJr=HJ38KlT$uWl0!-.37G<"ReKZs%F(m))ko%ZQ$?muf:cck)eIXdY<U1k4Z\-QE@PmW@h[ShLs4;#A<?7N)#9g'phNV.>\lI'
%bu^uR*j/h(J'lDm)m!9jQ",Tr\lJN\[@-**VOF^:<@3,pkk7gK^KnGVORf^-rm`4M&6G/*/HT,>mSh''@3ddV^.tb<?s0GiQ?Or4
%Vj4#[b20qQp9/gg<l_sud^NtX1L;S84f9'BVq\qmVnXL>0CE9#bIfm3*ItYCs4FK^@>*4R;ju+/0pK9)qqqGO:WU5":Z!>_(CK=k
%maDsq=8rLH*ofW_>K?:HL2m91bE9(3N.T1aUiPck<jt;ZY+9a:5&g@^8;b00`@`"1':C];Q0E,&!^`b);KgDaMuVX<Qnen"`F3'W
%'bF,,du#i*Em&BIp?k_gF]bin_;V,(\*AH2/h%s>=3.GDUd[f]$^ofDa^>#O<Q`Q`"n1gWCY&dC*;\#@S&^%U:6T3K3Cn6dK.a2)
%G3sm;,Y0jW\?_"0GsN!a(s%!E'EgjZ&%Z?iP"#YcBhG,"A"'Jl.Y(W-Q:s`3Z4>N:7A@(Te(e?5E3SJ4c,"^TYa-"uck2$:aj`/$
%$:J2:<.Jf[?jO%ei<N491eHjac!gHE?s;YGc!d'Yo_^DFl*>,?#h-@59,QV1G.&RP#?fXm*Bt*o7PL0N7Ep2kKS/sBK!iV7RY*I&
%lRN*'9O0R_7%:2'W#,mS6rd*?5n3OpLd3SMLt]eQ<cgXf@*QOa:V^/s@*QNVK/K8Y>dU/7LShU:fLubZh\Ip-.$Qb,b3%C]k3fg+
%*)a`9i"3@$1F%Y-7c?SrHOdLm==SKH<6Yl^$!Jg%>ECWCO@*N3L8*+Q*DMbe19I=N]&p,\&k#Y3a*cel@L=h?8LC0o*5ph`@V3P4
%gN^t;`)OQiZ:r1>`<J?\Ekpdeb5jP%<6Yf\Wk\Y%""jg`%_*KtrsmuX=f5I5\9nJ.Ps`?ETh;gc<0RiK/."0[fe<gi_G*bO%=Dh[
%Z7;909:&Vsb^'P^Y>r/:[,r<>D`(^>oD"2VmI?4?e4MS*-cK][>HD^"$?M])#:[1)qj5*!j'[57_3US'guRQDn%qqhDcGgHbYab&
%0Lt(jU+fsSb>FY%0LoQ3_M^fj^*rbWUG*5Y??OAC.Og*;c5;m9=Z=EA>)&o;lN?\b/sX4na#3dU*&_[_ZD_:SYBg'@7aYE&$f!^F
%F0r[(!]O7=%0U31(DHnrV_noPeE@dY!^+F9"V4!hS(#+q6DQP.E7!a?r<K"?f=>nJk+Kt#=E(LXH*B.=F:JccgWY?$Z448?'HeHH
%?5-^ej-\jaa(p^e*3[hBf*T#PmC!"5Ae7Vd"iVb]4K=",76ZgkX!pRaIlUbR\G?lK18X'I'fRd%':$-<@*NUdkHWdV%+a4BjL-@A
%'?cBT7H4s:V4/7q8s;<[4ppm=Z.s*lqe45uo5_5#B[(DVKaULrBUTlmq-IBf_&S*2?nlGOW!UD7cV(biJI"YM+LC`S+k)'eKtP56
%RNqHs+EW5/q;)mcbmHohOsXu.bfbl]k[_7pPsmIs,7(/4AqIDJ-f[2*UTZV7<3hUY>B;c%V$j9tRRiH@$U?8W.mGUNQR4H""aJ9D
%99.JN&Z>G6:la!EV`@LnS5(t;o0&ceV`@ND)1@O^MaZM,XiBNPS=,5WCni[K[OPirRuHTW=l<Ko37r8UjX0H5"XQ5ec&KPe,6>hm
%Nkne"`2X-L7Mi>0W[Zra/dr?hb:Ia('hjQ-X1G1l*2Y_irt.rr]`oIR3D<fI8/I!Hc4r09Q10ke8WslfVMrd[Te;d*:3mLoK5\rp
%0`=KqSY-Ds*2YM:L:7/[F]fML@P2GJ+GjXZKk<q(3DDdq,WnCZ(=AAd%jllcT!!UQfC3'T*45_KZph]lR=dC&D'"F<\=dAfVR\FK
%Y>W*b(sH'rE=D!1h\M6hr#W+INPaH`^&eZ5eScl=gI.FA]#OJkghNqP(,*.ADlL]+jHZOn]XjE%%3N%_:GW&?Gtg);)4)+pMCb.U
%N\AfP&,ql*;\I4'?uk0aSn=oOC??*YX%$Scd#.:Z8.3M88I@IYF0+M+IGJ"rTUch,"`ub.EO=_=FX=ES)[t-rEbU\'Nn#,M3EBKG
%<qBT$[i2=C2#UFZg+Y?\-Kd;0RV3mYbHe2e'YRLH7t;BRgLk%c'Qq?372Jq`<pVT_g.YFcVYbLb_#o`&>SXYg5pe[e$q2kk-7N(2
%9S-c;Af(ZkE#YjOOUhFqjKMh_0'ThG[CE&YA#PZcX\g(GdY1l[0BQs@QdL\/,"`6aV/p0Y(9=uQbl-N)@5d"``%d`k2TKWog$-=h
%^3,9B2TKWofc7?IK@pRbkJT):1K):KRq"@sm$klY"RYoo/`<*!eD^^rE4!._g@5&5*,R[hE4#F&BTo+f7N?8CK/WW-TIdkiprPHb
%e\"/3TZo;5Lc>rc+M+C7A0biD#`m>F`\-F.S0]#tU/O[FK1q#(C*[K1$O>W!:1eJW:-T"seJ:p*WOrGmahqPS__?jS%`8[.i<4#C
%\Li'KJVXC?#GPWL9$iS3%R_:m3"XnH+A1!=$4]HDLc>t%<ZpCK"#pj3+Q>YnE$.d"[K.GLkFm23_]4DL,7Gr556ZgN%`99@3=Oe7
%(f&Fq&e;f!L,fZ`(qt\XCaNgKc#(9q%R_:m3"QN$&`6BI(B!1c+GXA8_\n0e"RRSI/U5EhL]\4oU1#0:d#JHN&,q!(O<=%472X;X
%Juk-1Q;(L<nIAOCPY=Xrj4cCJ6,tfL_!;,C`7#57a6P:J#*GE#$I&]j3oO23)(FWKc*<^IolXbeK(e;FXNlb=h@?X<<H>-s@%%Fs
%2Ia'cZ.^lW=bRBtW+uasJKc"aCe>\J3EH.\<[VSH'$':]8Du/9C-sq&"0\+JA5+4+:k>1>WL+kYVICZI96^IPr;`-A)VQseCl[1u
%MV3BD(WU?Pfc7?I-X#,rBjT$G>J`@3F3M?"Ao!j7bOgBfN/GCU!J"<!b6[YO!4.J_]P8:l`dio>.r+4uL2a6.;68pW`]."?XQEWU
%*f8#L:%Mf$+XC`B)9;$d80Q#gNn#,MY8aP<r]?.j*32)#VamJe6dr\MSY/]'*31k?KcI-R<cb@V2QZl\l.3Z;Iu/dMM::h$+]qOq
%3K%pBf2Y*LM*.5q+d3Fg,Y>N&<"QHFY@_2qnJ$EA4G"a0T2*48?'7B=/)WpQ+76D;pts'_OL8'?2pZYOog6,`>1b&k.OL_"C:B57
%n:K+M?X*-MMtX^13jN#&hmY$P7of8+07Q$;pNukAKbEt<&`LP&s,`fA#QO_jW!5K*YVe_;@5FVer9&R53Z^0>R86T^$D$!W0o6l]
%$8#dH?cFup'^3Guhp#oj`M3@(T+6PaVbX8.,HK=s%@VI@?aBMN1J;BHIKE+WIZ4=.8U,_]H.B(P'-;)SQN(g5/]b/.p%r$m3p><]
%1;Y2UU"d!SC,+=>9-dm3_K"mI]B/,U,AA6%'g0KCrSJXMHbB9LeN<YBFaKT3I)2TZm`4qu[+ms/)'AJtA8K*7p[WU3l,CE7SlK06
%gFQTMgU0\dcGV%olY7ULX?*IE1g"93&nL.Cm_9sq0G#/II[rgqk=cJc1PLf'N`C4=VNJ^CdgHtFq*AHL-T`kehIHmSdTIO]qX%kr
%i9s-(FJEKB7><i;`Z_sirf(n"%8'fNZ8IknNF*!Rmh?micZO!UJT4*^O87G:gaNqEfZs9re*maN-3Cb]B`$o@q\Mr%GrZO(fbt64
%^R<1>SIgrre+543l6M$(d1=l(Uo2r7K2GLN)u[[W"$S7LH)!#=`dT&GGg[XTCN^:W\]HNJ5d)K.*DO.ae\SQ&L;oU1gmEG200I)s
%F-56WTHmC^(#3f(HS*q8[QB2GD=%bCh+56lAN--`N8\eS0P+N)"L@UADbW1[GTi,_aJPZX9T_I#>s$sNjH:fX&ri$:WZg1`Mu;kj
%X+L?MSb0M_qUN3%a05,For&Ec0=4pM4pe[jhO[9UfMls0]7,\gmVRWJn].Qp:@t7F5MU>7<QdP63s2qs`QuFH:"1G\99XUrR@7ZR
%JgRIHP=PMR:;jDB5_P$"!@fuiBdrD<3NLo<[]OF1=)5G8DGJ>C)`fcr8@bUtZ8t"HR&eN[L.GW"P-<cN>.oq"P$Rqom<%X(T(AR;
%KFFUZ:?l9D0>$(\o"M*_-,GN=Ha;ciZt%YP+d8m+Bj/3niNuphh&fCu>UO!5(\Vp(6,/sP[X*A6)\N`n0C4U+c6)Jbb>u5ufcKd:
%kk:Z*4g3=M]2men*nhl)1n*1CFf^VZ"m.ZI/eK2V5+JC[ULGK`Z69I@rJ9s'ebX"Q:1?@'+m>k?p[%<D4*PH>gX#9<S\A*H>c7&F
%8[8m53]>o8d-gseI"i9>ElU'l@h>>1<+@R%fY*2GY:P/aYj9T-)0td!11EgZK-3*tUOu=E$s`2S/RU:VU7[?sdY*,]U[M3af(m*B
%[rY(,:=.7\^_A^P:2K[8eVB<\=M)1PlB0-I9o^?7V-UE4CfN$11rh%+f3%]Z];;hI&F^_,kQB1/@pu9+bbHTU-kU1`(k`<F4g;.h
%Eu"SMm>_b]+kI"0#p[6.>'@&=B(Pu[Zn1Kf+Wj/#bJJ^Ri4;*rhqD?=H?_J_jCj\HX]F?$6$'-aR#L&DdKe1l1!Kt@E!5iVCpL9T
%%m]Cg+aEb=I]/=*j<Zi=Q?a*!3r\nfs0TBYS;cuBXbR!7p-tASqV"`D%YcCq5c[m(2tj!7e6JmR@iE6^s2+7i7pQd!bBe7GG=YV%
%ApIh'HHiHT3sm$8m$G_Kq3[KNNie([om3ahl/lKYDC>Y8I(d7`mr[hhOB/h*)iGBPN;ApU@Mpf&:?UZ1gmN<6Y[s2#2:]>^NN4'M
%GFF$_q/1kcED=6=?5'2u',K5=G9YR5X?B1eTnn!CR$9DHp_f@/0F!8nA2kfFP!>m0bC]@h<e\l*U;L=Qrk`:W4tA,]Y%fulU-PG<
%+0$O_Q"U@q;`4>I*f]V(X>(n+8?&:WVh)F,ZXp&jB_:YjI%bRBS8X'2hqM/pigt5JMJDBq3D"e?4;ouEL5R9A;>%T=W>1Vem=sX2
%CTao[X^9QB2m(B42S.^l1Xm6$]*/RYNG?YqEbatWTO&]LX_Dlbec6blY#W*(QFU5G\%<+mmn@Udc3=:/7D&G(kZs.lenOlKG\LZ`
%JQ.#g^L51E:WJ:.`,%T`m<2=[b`"c!:thsmgtM3G8458a>.s/UNs%^T\5jtLl.FG\@-C$2fBK,+,G9,7]Zc!I%E;(i<jl>=Ht\[b
%P&)88IAbDSP9O1P#j!@T/B2(8!-9tHUA-gTWO6Vjg/'#>Wb@14b1$H"F'=RsXF/jFlBf:?r[_ar`F:D+];kU.=skFFBemYA!o+\>
%M@'N"7ALGopsBfeeHq?#.-rHNn,]6<HV:)ZJ.sMZcTIbkUTRG-9Yc&F9jF/i).O*G;')K`>ID&UBlY&2)UNk&bK\0M.ca_Z#/Z__
%AM6&Y4,d6UR([3V07-(2B#kuNRj%AS/#L_ZkNd"Ak!i%ceEJmFXf69#q0I[.DlTY]b?#^k14;*%Hlb6+N_Ci*X^\NNHdd*@A8Kr^
%()ltSM?A"URZY],Yu]$q:`b\bOKj"<ea9M&NE_dnm\?c=!\2&N)I)&p2H''9M>qbih<qNIXH-;>OE8MC:aZs%5#U<lN1NTPEQQ5B
%)eK5t4X5_p>nAr9HEHR0D&RRa%Wj1W:DqVpj3-`4XK=Yld8uXP&9[NHUA-.($S>`fT?8S/L=iMN[Pc$EP#2nWGC:[$6>L2cC#+*E
%a.R`M[`4t?RjN\CPNS28;E2C%,d2oqd:kL3F1*Ym$As0V4)M#/*bkFhn$jL0\^/Ir-\j]ZdM.+(g5lG'q>=ohmV.9H*&XY7=m1qR
%OkseH6SMCNp&3YDMa/jfT[M.iC];&<8hKRqWM5g.Z"Tn2COb-lS>D]a?5/"rM<,iF#fhfEo^#Jf7Uf3!GUnV!io8sLs(3krh3o(,
%R-^pLJPYdKc=aaIBPp7[Nh[uoWEaX:[bdk0!Onp`c)ng0?-m3>SrEkqB4OFM$"TR2I6R>a=oG(#h$;[ib%NLJL2OE:i)S':OZ4$N
%9>U8Qbg<DT/*tRh[mi]4(j<q:?QkHMdGPfiE<i7F4'pG&3#;0*aa<6j!`*8k8RYN*dni7tj)cOWNC9tbV#e0eE.BR,pM`+W`tG<,
%4Z]!`>F9aQ]4dUkr1]Tl1G#,9!lnt$7[A<G%eD5TW>\7dO.:]:pW2b\lqhSp'*klLp:=9FUBNZY<VL)<L>agE7mZ%4+A%8>I>^d9
%9V8-MRQbq,oJMBWk+7Zj0^ZgTBchkXi]tO#L7fYM+#d/8a(bdtodo/MG)d@F<;"T?%/iT5ZYT3g^?Z8bPM5HMjT:H";<J4VO10k+
%TgtsMfg37#Y$H/(9i+Nu>'+KABV1>=5f*Tde.tgJ[/*;BL;:eN[9[E[>fL]45Ecjk%o0#'Dg&2lSQ'[siGKSa8ATn*`B$GAph`4^
%>+Ns?S>::<*iU!fg!_>U"u&DN3rA;<eW#%713DqG]DC*`ItdE*#pi<jKuU>=BF#%/R*hG!o'&C.,8Q.Q*?jRT&=6JErXQ&T)Cgl)
%@iEu(-&cj(gJB!Vc:=\8Zr;$Pr'U$j_>(K-"!rCpJmaS"/(E<R(tka+4r4FX0gEBBRiBcs"C>Wm"rd!IL1p\YO$(EVB>J?09_^,a
%@=0i9,BQ:1OtQPo#]3&heL6PD:uk3!T^b\`V\;CSE^@U>."ktq8JON94[*7NUapjUnqa'S-Uq\q<.37^$X>8]K'5'[Nm).O#JW\n
%PtG/Ja.JISB_3iVQ7n8\4sZb30=0`E,j#U54fA)*!E3/J1(+]W#]8TI^A%adEV=!Z-i#Jb,n`E6q4O\^$/k6(&%&drFZQl,Or.(:
%cNmL(E(-NcT^EYI"`0k7FC^c.;4KYe'[(qd2%1HQ!)VYOdt>;^f$geNN4*u"?97>'<<4#1\[@\Vc8^g&@-d_#<TQlOjjtVMe[$WU
%.[[R(G,p+O@;=]EL7p<7W`.9B-a=sW'.JCZZ\`=93]'&U=g:g#iA@iZM1ktDEI\^GH80)6>F+=G]ePG0SM2<,@G?G>c<C#t`L\2L
%!YgjIEN:,#ER*<%q`A80boFW/Tia[Jg,*f.]FcrZVUn1p.m,"!2GZ8?U1SY;]X+#7"0A$_69U#Jce@,leNbVodl$+'faDE3#$h9D
%MbHa0_-@.sqpk+@(2(Tn-4$9RY\/9XHHqd[XR'LUY:&&eN;Z,Dh'(2*Om\Wub7SDeVG`;R%GSFS$PNltp<Qh\I6=.T(:u.VW]Ys(
%n=0\3+qQF;"24[N#D1Fd-a%Jl`J8H,e6E!\?O&71BfJDODE^'i2e1j;MN:e0Rc"d=@Fg5?.SO>h68(('Z%ZAj?+'MDlaP]`)Pi'f
%dr[p3:h>;XQAuu*gR7C@;DXeN11OVL\G=CJ/IOfT>?8A(>D>XieEmCT&jKJsFSnBuiFHSNhbZsh%JTSS;ru]kK24"%n")Ys[,/"#
%O<5IF't:f%c&7SQet!W=40-O8G8r-j]<Ann^8p)EfRC1$oK[]1;>L.Z@(SM!l/c48^fV3ajdmUe9&E;)X2=i&c*-r`gKU_LhKJ@a
%ZjtW&DcZ:JrEM#P`Ui8r/)+9cIBqlqH!2`[o+0/;lDi>u5_XN`]X4A^h!:<@Ijlihf2`:(G,89m5NuOV4Orj/asH0K]Ae&/iB+!8
%e.>qca-LmU2]MVJf:P5C:3Z8I-eB9]\++$Vla$G"H_ZpGY*;tR#3Fs[H3:/jr$m0u@4=(J][Mf,[ekNK;7u,]>j*9K(e;;'.+Q8Y
%O6s&^&)YcdT[CHDYNK9InEIcMdXHWE:3"PRI_Tj-G-==Rn_U8VTGmG!nk*c.VS6Bn\PUR0[gGe!K9bGseSctm3tL55GO30+Vf,qt
%]@a48X@rKPXR%hp(URpS=L[q*F8t!LoCYPckUo#F\COs]4=F0(*rJ8)*c5i0\<*C&D=d.]m6[lIYds>c?uoUlIX^;?qKf=g(V7#&
%ETM4.%#V-O?M*(UkOaP<r_=6o)pZa?"e@1c4BYup[>V2:e>+pKW%;fSlu1^,\%?CTGlC?Ms-%WpWP6j\]!D";rb4a"hYTX^IG.j+
%P+HELmpW\Qdb\]A>KEhB`QLd*RO=bHlP2_`Epo[.DJ_Nbhc]d-`G.5Wn<K5)Z9U96p$TO\^8sFKDg@t`hX/%Qq0,k`^X:K*&(3X4
%n9\U*l-nHgWV#QTM-&'9-X3)5n#sHgh@*QrjW,+:^Db0nHkA3o9@sAeq8kARZ5&P"hC4c9#eRq$IAU["[I:N?C$GLeWNlHna0&u:
%]O00gDdI?F0:b6XS6j_AKqnOQK>OT5UBhS+0-BVu9D+@Xn%V")"C.\<)jAjVQXOT_S*rQ847,DIe2Z-`':(tqet\M.pGUpV?G_l!
%Rb]c>j_[k?s.[0^m9[G&2@eS,,J@Wd:03&hI([$gCn"de\JZbXb'K[[Zu`K#W+L,4a^DYaElFdB6J[0!H\+TmHE(!"gRG,>]7n]M
%rP9m@LO(bnHGB43GOJqn.:V"l]MfYZe_o)ebKCDWO*3._j,^fP@I%pTmWMY8qrl.6ck=K`J/sog_V#<ZaP>A#[k\HHQhf)/GMVgd
%JG-!_ntZ#dE;6hc:u5p!0EgoW[9h^h2a7j!*RbOG79=j,/hC8n=.Xdj5!QaTA>g):%CF#:/F?^qfhg;d/Hd"qBPb=sO1'6l?O]3$
%p@gUlX/<G5WOs//al\&Uh:Q^nN^f[_mF.3ikhc=1OKM<)j$=?uo^O.?Z@eDi00[,>CH_\+QmT`"V97i3r`Qp;3;N9B[-g%Z0%0k?
%&"dWkdt@Aip=n&EX1W5\ILjtFXU)P2"-.JH=50pSncNah4`pV;goXl]Gi71=#)[1nR""Ph@0Nn+ahu!#gNad`pY'p';#!l7O"VR;
%$SO`7[%NinUAGhR[SQQ$LHCbCVd`>R4FU+A'HV^_WJ';Pq<ZM"$UP+!E6F!0V,iACqBCG-/n:=to(limX*a6ie^N4c@-$Wt0Z;l+
%?[;K9PKD:jam+%ba)PG;OgmK?jg=[Njn#nNeunk*4=/LI5AnmHV[(sL7JDLta8YoL%b.W/R\D4bDl`4#dIRkr!,'!.o]Z;+V]a\h
%SdBSJ]Ig9=+)^,jVcrD6moZZ?[>OT*rdnlU#(1TOBLn;Y@VM`+Y,CpbPKMA+;#'bt^/6"enq0$ukpKB3Ar,_fGk^-XUe,3k*q!J^
%YT!'Z-?#)KML.GR$XpC2f1GJoZ_3RZjhd=o8'6NE.U.u]DF3&\)4Dcji@f#rf,]6B5\d<+h\;c84%T;S(A+JSjdor8-7PGrVuHHT
%GS.Ah=4`I-e/t$X8#0PoXZN=e4qC)Ge;sG1$@`s.IR5OV))'E=imVOnV,2F$("Tc]$3I(2AZY2/CH_>..I;ce7@N909nBYWq='n:
%$i:_X=h\@C+m1>h#^@<il3Y(Tp<k.IqaWqRSR?M^OD-eP8?Cd;Zom\=gAAt*YTo8KGdBr>)%t(PHJao9nf$JMcQ_g,AK'gt.=s<\
%8cmjG*YJbhGsZfeR>/*_hLqYSn;HpR^htXiU^Y#c;<A)#@YeC;#`G@EY].?qN^ss#_Ld.AN]*!-%XUERdn.o7;>qe]d2^*+&[',h
%THcIW.9(Q6=#+=U?%3!&SO(^%EC9R,$S$q5-09G_O,c`6e$/*^dOdb_D3G4QfuHjE1i-VSiU@iH_e:^:$&2_G'IZ#Bn7s`O-d*k1
%bo#sr0@@K:/eohf"VB^Ta0/9]m;9Q<kl+l]oV,K%'oj6r0>[X8fbr0rTEF&bC]U`YbIsac1QZNt=c4+NK@`b#jg4sNj6]S"kg%?=
%g\9$B<O[-9@WFjFLR;.se\nd,2hKaCTVPX5^78kgJ+KtE4TlGgdAMiXQbN:#;D-%WpKnK0JWL#b"A3]g3#"jZKqRn;XYuElb@a&(
%BJmab]5ZOdGuH]eml,Gl.dP:JVf$e7>jD):aRQ#;Df#ZjO4,2)_k#da@"^CI]E,2NNO:aJ&VEL/XM$VHkau3%QX4bUIiBkf1/58c
%:nN6j0>)],qP2ZN2bTKa]gKEtR>;T[#b(^554CE"dli[62Zp(Jk\4F=])LiMrNapth)eb`N]r#=mf(k4[^dsFrA<>U$I*c]bs^_D
%'N??<qW7/RLZQtYG@s"_GAVc7d9J^;9DGat4F-ctf8o67Cu&9.71k.gNSEVDm[)>LY14%++qSfaDT!%lqo3hKHp:#G*5iG\QHn)'
%4ejmIQCiU.Hg^C^cGdq]STX,[P7=_1iiJ#_/ske(X]4lQd!q'qmcZ[q!iT,5LI$\&'mrfu,;#>EJin9M`#[B33#%CE]5L&T+mpgJ
%RVH0_06_rBqF^S<fi,5apH`_J'>H%(d[kJELJ_1;lT:.kUZ4)KX7:!(p:AauZU2kZY\*45F=7dj(A5"*61!pgK?HjH9.teno(X8X
%c#.=d9j0<A#.9e!n#q3roNL?Fnb(9f;"LCVb)6W94tIFT^H-XE/j663%ml\&57mJ161mdI]W?9Ca-spr_KZtJki:d<SVtg<2HHF;
%SXoTIod(.)R"&8O4BMVKi2@4th@0nAHnAYs:[WlHK(so$;/a#Il:"ZfaRbIV,:1r>2,lB7p?3XejBo)QHY`TLCH0kR2d_$D$QeKM
%STs+KKp04HGNbMD?"s2\*Ad$bW924m5dF8\)YD^hMr'!V[.tU_(9.D3kq8P#G0`3YFaN`)_gE`L-E6Fhc,S]*Hf=UVo`8g[E/!lG
%D&Jf6HnE-K<74.M&(<,>)jB>P%.XS>3*P%S@1:])8$X+L`M&DV4H(Sgn=W`\m$!jTpc1rMckmbEkF]nXNnhm"8c:'>4T4d2nS"$n
%_1;lG'f(_fglRY'XINSk>^\=TjcA_CgDd?1?NrRW<4c@Pm<HH9&Abd"O1%tjJ%rP]Zh0s)IURa)L+M_;XkP?h+`Q]qBbcoJ<,<U>
%<F[*H/#@JMO?WfYO*eJhO0qGFKn[s1!i=_fpVYY?Gk],/CcnnmDf<9A0?#L^$K9M!2lf?)DlnK8Ss.#9#(`+:=9e6.?\:Q?\66+!
%LD=9.B_O"!4\V&302E,HL@skNh$QWE5l!RT^O%<7^6BP6V8hq<qd<5s[gSgOCIdff+Y1\CDOrLe!kOhEp"oPG[tW;R2NC:K/]%gt
%9j>fqh)1Ba#EOns^MGl:N<XM&]>pVqj6NTjlQA-Oa'c?'IT&Gb]N?8Y<I4M:#sE]cBD]`URN4T-rYcK0C?HS:ac"L&Y'S4:e&LYN
%+)C!"[eXV#JQT&@948]h^;WRV=t@0YT`IK$q,)LMEVNshZX\l&q^.b32dWs8O0TmsAYWS8rYWoNENLLR+!6emD!eNI>-c)@CYU_m
%,EPrU385C-Y?aqU4Ko]c,r40DV"Xd$%%bm5iV7Nla/FODlg6Z-%XQkKjX!QHVS1mAH+!5Z4mBb&oH[qiWI68`f8boLaucRededD?
%h#V(2]IkkPGZHPkIkLIYle(OE4G_`bD=clf6DJXOmu*oYFRf\q?mdsq7nRRLD%sWY>EA2*SY;-`m8hh'G2d*oD4#>>i;Q=Dm,!@.
%TQ'#amapq+)Mqp`m@1fgDRK7aH/i:$r_tj?I;gP\1=,ZHE[tITbEInm"V:Y!kAaBdD<U0Waub;1?p8Js^FtpS:XpTQ8D@od(3WI]
%\p8[@.c6+X+L<Iib^t/W6=9$*>&3df1i<nl_2Wba\\7[Co<.;cKEl#0Y`"hYq_*iLLV%Jr5P_BCA>7U1r\T[MIR20QcUISKrtW$k
%]C"e^e@+,1+(&EgF:!],Hk5"fO(R%-%FM]WWr2(u;8;VkK342aqW-b=3\#`-dp.m?D&GV=nFA\0@g^?FD\m/!a9GQd'RNnf[D/%H
%jpSXtII&MQQ#GK\EkuVK*=8]kc,0:mNE84-T1^hEDQQh>:3q>o<o+Q1bN4`#nQfL8hCX@(3*k.-PRC9Fg/:Emm9B#,#Sag>\2Y';
%o]6pp2.([?Is5O=(i?AbN]r]:L&Ms3I&gGbo6=7<5PGW$@7i5*jDQ^nT,Ec3ji>Q*Vus&ll<hYL(o_+]HYEmrDO-X`Rg&ECo;d6"
%da>m&H)[P=cFgL0\)lU>,oi/@B`t%p]8Ol@(A*f;3sGD)Nl,pR/cTKX243^G*la^76^D#''Yj'A(6mq?S)*14oa>5d36X%L\,)5/
%!`T8SGjWD%C/-6Iku$J_C`26M(Nji$?P_?3LQA45e``*Sq47usJ:a^A`rAFR'X5?JP'+))H#IEcMZH.c3J_56=3=mK#]/BG-AjbX
%WGN`AnqS#c&`J/<XgZE6+0B9c*@XY>Bl(Cl$?OZSCN$n#4mg4X.':m!"c5U52coI.EV1QVgsb;SHDA.NEmK^<1_JEmTC:_@[r>74
%1oNbjBm7m]c+D!i\,j#9]]0I?:u@@LhT8uf^A7WpW,OM:,E4/i[9M@'3^(i"`?mFhe]QbZQHULtU!W$A#)0sSXlGt)HKF#Y55,Kq
%_ecO.G,t#nCGYOP5'Zg5fD;q*(]1)?nj&^YP8'%K]m:4Fm6m6D%$fsN8&OO0TbXt.j30s8VY0lW&$X.L?UZ+5HhZLrnq06K/h2Jt
%3$[@C7pL8$V7CCBSE>%OiqMn3gSOlFl[J*;no>VG=81rI<5Gu2`*>VTh1)YYa00om?!A1Zgj0`RpKel:Dmf*2nJUQ7>#UB3o8>nA
%f`/=f'kkqga8iQCG.R5/CNWJQp/Pk%UrgGPrPtj%4gBo4YY.!],[>d"?1EBSe9K>+Db]Q4louqk\bYnhIcp%^3V5l2Z+faNjTHru
%<egK@IajOs85QC>o'g)B']6T/0,T&L4t]J.6Z:k.^YO8/rbgu^M_@;N_nPg:DQMa0.A4!d*C,e6le4i$nA3&pa1Q2>p\"H0q5jU-
%Xh=VZ4s^kiE<F?*1;;Xb"PS0KmD=A\=82DP)Q03OX/CYqV/u<\1PB9>M"rAfJ6N:^Ui3n`fd/dJAi=ic5&L6H(QPpc)[F&B3sr(X
%SnQggd6'&3G-&m8@qWKPDooWbm`3?HD@k,>=\`A_T9N2SiFHrE=NfU@^r[W$Z)?='8,`)7oC[-<:a!*8YJCWm\5k)g$4!5$:EL<)
%2n.@#ZXp)VEr`h9_.c&;)aXn.-pYq'ICH.=.^/<l2bN6Fkk(I<hX`_oZ0tEG\6\p-4oOp71?qsdRu7fd._D`gMKduaWC^n+W$^RA
%.-/\a]_V=kWVYI8L10iKq;-n5c8Pfl_(ZeNrC@0=Oi8[JkA01+>5.^]B4Od6iA8:9QTpATB"_O=UJu)EDiX,K0P'(BQC#O$n?-+?
%YEiMMBaCK%4/2HB8#&=+7!Yc+DhKF#cqlS!T`!a.H)oG.Ip!qGVQk\j&,D+fL6PL.#5QQr_TS"$N)0XrKu([_g>MC#j7'U<:8',?
%^=Y!/XhNVI<>ZEl]%\:Rj3`Imm@7OJ+6&Nr0tr0u[YL$srm=rj73mYb0@#?"@2(nYJrLStgOkRk0k^A@(rcgBLO2\UkKUe\!Y=SP
%rI!kKauu"hmFq\M[.WnVeuGcnoP0tCC!F7#YkQJjMVF!lftZb*RpXbOL!q(@$p<!"Gi@t(<hWg'b@0^M.IqLfP:R^Nntr@pp.rZU
%Qh)k.iPaPYpIbVP33'k]FLH^-Zr07pb7F:rST*[hrltW;XerdNcF)-/%j.Y(4);h.McSZFDk=`0U'N<bI#_h^(<%<WcDQH0/!"I1
%9#CP7(/anmSXmeFp^>?Yi!d8tmU<VJ8X08Dks*#PBaON.k75W-Q!UU]N[g'-V&_`Vn>$d=]VQQ6G[fr7;3A8>bJE<oD\k+!C=K-V
%L3H`iMhiol]\8ZsVfh7tqY=I"gZ\X(ZEVa"=)/=uc$oZKo)7-N%e$0]YcW<>T%&AXT%LQ=1"_Z!3Mso\lc+\IZ!,#6Y]0'r5EX^-
%a9kmmH(!mPFb[YR1FGda:/Y*eU1.l6qTo2-`CII2M_GWE2=C0h2u=n/jRV!=Z?Z'k8#[6K+S2)\O@3pC);]*tY#fuMl_"1dYl6u0
%^U5XH#`=G)Rd%,\l71Y.VAPJV.=r\`VG:#g_)1)&!X[ol1f4p.6^d\K6sMfHcG+:,7e3NF52h-OpH8<*bL%H7LAr>+`n`Eu)L>^&
%FX=LDb@]TFU!:haWZgL^;$A;IEaB>8-s'C<"/L`^?C(dTP#V>AIlbq/.;C,*f(+tLMik<^'YdCf0h@O&"$`cqTI<B1nqn],OXbu/
%GVa#:QnN-&:tQUOCP4cYXouK`"floC!<tFg/XgBEO[N?u.uI#Y2,%9`&n7+#Ba/aqB]Obc'N)t^VC:bD$6_dZl\ZBJ'Fcp<RNP^@
%;3@YFNF?SKYctL-nRIBN/9q*TTDuSJdZIU@njm\BeT/ioEpqn2H,ODWQHi=N&7eB9.)nk\/:Ck#!mnW\K]1n<=-YMqdVrbH><6Os
%VU.tm2-H/kG)798`l]BsodUR[P[7&gOj#=K+nk6Pj_tQj:d2j\oDm>g+I=:NXN:f9XsdtPM:YS(JCD:C,.r3=^Tpnj,ulZ+%-f1H
%<^u=PTP^\s7R+-(d#\jFQoAO^d8X3=!8_1P&(BUP.?Jq>1_JT0'RU]M_ZYh76n,<QU,eI:jAj/Qn82hW2A[%7]W#Z*:ei5gaH@65
%KH>]RjnS.rPZLSq(s490)q:S8@CulCY/f9\bR6?0$08QEk!e2UQD6h!CWJ!hG#cr70Wd[i1ej'Fb=#9oF,$"4;,g*&U&lR\0L-R,
%@O)*[_(^G\Ai()t1rE9U,4R(''?HJQ]7mmK)!"+!3?WX\0EmQK$:tpsrb-!q#QYVD6e*F-Pb:1l$;m!2.5fP$;\54-2WuSio';O5
%bV04Aeg1)uR&7Z,d@ilAg.X?//E]GB9*-FH\eI`0XV\WFo+I27L8<4kF:B&u8HG=^&0`bs',@`/0L><EPE$^KZA@XqC*cS%\P_Qu
%?o2AMC0m,1do=GRC#_l%N#nc\2Ut>*'!LCSg!lbLE.AV+7WsU7f.gD?9j."BpFGkK/*!'6QUEUk70,HeO::uc.]PlZ,H9$mG`+u8
%2!No%6VXN%0[t?^Ri2iS`3Q@f=VSMbGU#`(K^LMs:XCqj"9jHXM$t?!5R*'EV$UiK5URD/,S<X*23T@RB1h\^i#Q5j-:2JJDCCEc
%$2PNC/.oGp\^@+eRPH-p5e\F4AM2+c"T^WTj=rG?.OI:-of/ioM1CR>^&[s,!T;'"nl\lMOogX:_9C4/KW0^c;/=<D/j_c8Xf3A2
%rC#QXp5?s*YDWD3&^[b0%ouR&%FPSL'_P!(Q=ce-0Vd;fHD#Ua<QpGc>oP/G?>##^MIIt8jI8IMZUHQO"P(kt>1'#(=HZ../t-lj
%,1*,Y$<ecS?Ij6T'IQ`\BLU/]Uu7^D%XZ0R8R3Sr!rlb6m7*%D_#V:%]g60YVF5-M3d!fNUfJn?!,6I!'cI:)5e7:[J>gJNU6LCh
%;I5SFC7CS;'b<QHA-5j?l<K/keRD8F;_)>s4q9Ru(dN=[I8lDeU-Wos<0^mdjDi\uAYKH.+Y%4p98O:e0T\:jRu%dMZ7[*$N)Et;
%'Ifd&YUop!gEHt6;\a$P6o5gr%X*gLW\gfp&<3Wo,)qGs?&]JkR$nl:.)P1IFMDEeCQYDhY=0*f`C<J;%hVKtd+B8bCo"n%WlFT1
%mreK,Vq[q;TlQ'hU37b1i'Ks+gLsAP>s#"@d"l4%1gDl&W]3\/_\=7`<h^^*(]d/W/$Y$]+0m=cZs6jrHo2_B2:Q\W=u]8^6,8?@
%O\0#7aFk$C[gFu-JWY3K9806p[!5tNO<*tND!Gbo49.TagdT;JJB`)Q/kT<oIgVI5BG+^V-Hl&;0GT>OM'*q76_kPU8Q>qHe>lLU
%bU9khS#iWqf<%k.N"_jdnPgI[^)@!!1s)PZDiM'B9*MRI=@,!?Wd8JP(]`W#1s)NE+*g.ABY:!b_b&6$PVAcY:jb&>LFd^PV7fU*
%%*2/T'=]/5^:>^*f`IG?89#2kf''u4m>Kf]RI3@1TEMtWSoW9o24=YQ+PPE,TUuQS$\1Zl*BIK$8YEY*;QhAAk+N!0jnG93*(D^Y
%"A5pO&UbO?>aQ5moIq#1gf,^)9hC>uZ:*>572n^NJD;7l;B_FaTL17J,PZ6^/>D7bW<Rl,0[]+*Lo0H.&rmOPF6Ea(ek(b##tcJ"
%0G4LqOd&s;fuMm@Y\4BCe9f_=-*.pHX'TM%UhO#><\K0>kr169'sp1VC4oCokcbOoL_uT*=<`-U<Ln^Ne75-^5:JI!1Q7P:LF#ep
%!p^'%8sX2!$GIgC1mM1`Qm>QMLdnEPRMeLTO4V!h8RRtu-9t$d;*:%DKX!u&ogK#;Lurn<$-YO$-N&)d<"NmB/sp"%?pso%<7`=S
%+]Zu88`X/RlREW(59l+<h4VOjG_LSP-7KiJCEp$Vjs;#Qri/Fn*!:g$-l_YAU;f)@$g@M5Os]H.Cr=c<7"WIRihM9<-qZ,?3^8J.
%)3hl]6o.jl(W=*jp0It=+DP6?'(\;U"M,JG,rODKI]>^R5rsZ[IL7t$#m5>(A=DN*+iq53aTd/9GhG@9"\"Iu74L`cXcUBWVcLH0
%MVd8D$"Q!qJ5Fq>B'QZ7CPnHHW/s7[Bc%u6."`m=R0"R(?m_%ieqpL(1?>?b`#I>N=I^^b8Wj*B,3NNCMkkSA'`&Uk[6bb+"U7#9
%4$kXXE@B#X,i>SXEsAHH(k\YVShU@'WD]]n<DW=!6SSHT%F_dL%"l2aidkDAJ9GcT#tC%&#*o%acu63^V-0PtIfRp<GuQJ;1^@(G
%\f^0u7+@^A:t_LT,6<Tl3gDjZ%SEqBGK+)`e.[B[-oAs+\$[)L"oYHZ+rNP,,'Y=RR]49[l6U_Na"U1=Q4]R\aBGs\8<QFggnW=o
%oc7\P*RKtC<YJ[%E?:5f+"^/\O(O?4Tm/m_9(+a3;al2_1LYE[C:t`AK&\=_0iS779n^"'^E#r=/Njhb(rMCfR'MUB?r@Xd9Hm_-
%Vb<%_6j`R@8Y\r`o0S^)Vd@h7i!C#@%9,0'7mqW#@T7\'OU+<2;3D&F_H&=T?o5tuNAG6-&/[9!OD#enG6RQ>U5Q"h#"$rGJ='4c
%JbDZOL;ifJ8I!SQ7'mdBV?#^DYCl@q87I1"_0Hf</-(pnKBC4V%H?],o7rJf)l%2q/LXf.M=DdB#Xja[8-7'oZrobEV31Qe&6]qU
%M[Fc),p=^%"^6nVX:P[2'1(sg9"nY3O:p'!0*[7;3^^^KTI<s`N\Ve9"tB%Nd'+WIUrY3(PX`gR.!(a#`c<8d4>/@RcE>A#GkJ*7
%=?=&L8'#4u5@pRYAfu6QC^E]PkWob,=Yh<Q<K\L5.[dj`%@X"(6l%JR91;Z4;)$$a?/t:7.ZjHQKMJ(?JsqFXECc<;U\dD8,)d[A
%c:F+4@/,W_=:esF).,>Mpnb=L.d.t2$mbpk)O8$s;*knA'dSa=OOm!<V\@tJBE+;!SNt;dd5rn;`Bp[bBHFWm[upIo!!!!VoE(*f
%RV:\OQ,,aDk`>s$'=fF;fd(eF,,-<k'OALn&9;Qng!'iJL+YE(kX-Q(>p^$VW*gg=,Sl3>X+ig#("Yr51dj2lT0PaDQ:SMOdlgV0
%`D6L>gZqa3,gNNB6q^jE<>pE%8C19-BH&GlH<WKUDbX$a80X0TWol'ufSoreo+]>lkQB<+8-9BgLtc#D^:kA8jq/%X&L=;/G%jJP
%'34$C6)"SOB+@j^d8.Th3<]L[7'T(9N`#'[Gu6>Rk5^>C7TU<]$N9N)4M`%9'J2if7&&=5$li+6!`22#VaBl[OGNQ9_b\6o/sUDc
%G,Oh>j>(#JJP?t,hXPTF:.KQtE<LelVI"9'i<Oi5Q-\+@^Z^+(rXu3OmCUclrX&G+V+]44:nnPe;=3X0pjX4-oRlTIei3/3XF+a1
%K37s5\q(U\OW)ZOW)>0D(i!ohKgP^PTb]6o82\3c"Q0i1n^2"S^iBIG;\a`]i.l#OQ8#nN9/*(t<<<t3)p5BFb4ht,H9*AC,aM2Q
%&Gnd686m1o2(hKTYD^rjm(SiiJms7SA>mj`cmQE0(fi/N3'-Rq4I8GfmPq7e2HmUKZ+_8c)_,NC;a]S8OiI!=1UgWTL5R5>SL5em
%Y#D`$4'qd\-\MQJARJ3jMA%C4d>4Wpke7)$UWk'Eq1+2#_#cnIXp+lVJ[:lkW7V<[>)@8ZA8>b()'kUMo6]99EgBo^mC_.5MRT'-
%L(UZKZ9`)-0ZfQ%ZC3O%;>UN]"'BAIL^!/l(`ia%dna#$_FGT`.5srJr=i(*#,]HK=_IgbRO!]\JIF\.UZe)(1\(YjFY<onXcT3<
%8T2hHMr%(1H$M6rDKcMMb"'?!LY5:qMi[ki<1IGm-t\Gj^Cr<.O6j[m"n;9?Tc#WU.7Jk[T<9W=)&cP9*N_k`7nG7+Wo2:Qe;<>k
%QFLUiM+rOL/gUbUA=6+K#\_/.H1quXJ\ocjkmCJ(JW"/sSOM[_LnOuqr<L[D$59h_.klC0%%##_6q'F0#g5$Ol;]PeLE2C(,0no%
%RWgh,g^,Z?9Z&Z!1s*(/dJon(S-lJD)6A:B-@7c;_>m,j"A-d&Jfosq9i5oi#T.-/P0Zo\ic[F2CPL/GC2/cLI]B@r?q:BUAee,3
%\f<qX<t?is;l:D=KN#;l]%`n69PS(T%hTa$Vg%?.729I9jP4D`+0LeBd9+4u;!-KK0bW_j,[Z-HV@f.J9I#a)(n!6mT1^$u`A%G-
%!*G+%[ic!P:HF;r,`0p-)MYI12-O7PjOK-kL5CM=Mq+Y/Ubi+M9E>VJebVl4DV.-;2'g$lD1pDY6()`jLo/JB&[6/Uc4bHu&%D[Z
%?^39C68QN;oAci91sqeVeJJC`M.A4F3+/Jd<6:;2E7/^QY=F6a8Kne$'5EbYIRXdu6L(i8,"WB'$5,YtMPu1QV#ct+(tXgJlR*:$
%$JH;,%&jMi)kj\Ufut"aA-(VW7)+9_<="Tcb_sEb6L0[@;:F.'.PssjXXI'lB6;X\J5r9)8A1s+'KW4MoLbtm8Zg?=ckIlI&m5?R
%!k0joLRM)+1rtJ'QZQ4!(sGLAJl5IeKSPSO;n-ECPRX!/+=3]T0J"BqG?$DJ&o!>ka7Xd@A"-R<)/n,EM*u(nEGiRflY+-n@k.+f
%N`&?r03W94:-jUc&93BfFNu8p'tgT(&f!<cUEZka+<1hm0B13TW=SO7:T]RmA&XcQdK5!ddLd`<B+dYZ49p10fbr`Q*<R*@9pH0P
%>Vp!u$UE$0MC6`M.3jk'3,!!OaLLY5a12aXF#'0%"TooDFoZec?kUYK#X5E;cuHLR`,j>)77/=mPm#?2ZloqSN>[u_6FWU)W^OE=
%XaIE'$-Xm+m-u=VN?jV%/t&D,d+q!tU-f<bO6d=m7GE,^8kh.Q<AQ,J\;jT)`?Cp6EG:I\7Rm^:3^J\q`t/`/*G5W[q;-t9,r,OW
%)`WBP5X4`Ie[GZkK'WpX%:>q^83.rNLArEHLh^"G=Q%AjO1M]P;<\H[$%t5_3"YVA1H6.\_;e5)_I1`DN"1SCfGIDsGK.%0!Y[C-
%PU;E15o4O^MOr'?i!2:3$;gMsqrc]kU8d,dW=k?L->bM,EF6YX_(*$)Ob"(Nc'Qh&K0=3$4fRI`S/RZ>:_YD)&;5[GZlqLEADT`+
%P@2-4b!mODS>muJT_g&U667!T,5`%OGtZ1,Pt.A,eEA["E'WI5T8G/R_I8M+Tk#C&eu2EmP9#6jKJJP8)ieuEOX6Y9%)Dq1aQ^4q
%C:#jn"CLme`3=`=._K3YF`'II0)u#G_X<8f2U[Qc=^bqJ`.oSjA(&Z4QAg]EgrLH<^TPC.^^s'Os)E\?39pQ]a`7"T9u!]^JEH6a
%D1o/g%>-ucn5k9[)5+$!_k#X:0n<])[VN+#HpJ=`#suQK6IN#S%j>/\D@skB'P`6)D%.f-)_5!oNM__rLjaqM\[mJ_V<*Rmdb#m$
%NImt8In8:),mJmL@e4$!UK/J6?JY$:GPUNi?`Z[N'H1K[:$gS5dkoS1W]8Ma=1<+C2+B-%Ui)]^9@L(Zjl5#r[WBKsPbl8r9%?b)
%CZ\H[?eLmgk)Qe2.2c3mk[R#62Efm[ImpDe;ST*(mDJ_#%cd.\r=d[.j#e#L^UfI=2lf7uKc2dLoi!2[@>Y=-mRJk9.f\#_)J<$0
%EP/69\shr=_rAhaf=:Omn2<Cl5u:("Yo@'<Wo8t:i`cQ5n/t;gE#H?R;^G[6M(&e/5W@Z1%N==#;el@1:En7]H6cA+'I"]L;.3'B
%$m)2Na>_Mf"XW+.(a=q&YehNZ7]&dl]7Rtol$c4AjGfX,)8h%sig`\E3kHj\E0+@f&PHb<A&ZAhPj$?,Q#0pa"@4B?ERUs3&DJ@!
%"&9,Z:6lEPX`&q4:E4Z5*Rf)iC5AZTMSmV1a4)lA#^;(VTq*#\[q^/J8O_F-P?%mjYorqp@u2BVWX>?W,'s)c!#U8$M4B>7UsoZ;
%,QV!+#DpMJGZTtNBoi=$VAq$KQ9nbP,O]o75W>(J?<L^*JZCV[dW*S>*[qZ/_,%%mWHtbUI\KIJ4ehkmODqu0=GfdrBo_a8k[K:#
%OCO;;,ASks0ZU;R6sE*tOYgr]jHRVY2mP%K='kuSUZPJUT%2f=<>3tQMJN[A%,C2Y`"nG[oO$?^4WO<kQD*]'/E8LE0al&J4;:*/
%$s`l34gK$Iee5?*>-'Z@f+XL>ZE9$!ET+.!hDDE%/)Ub5&_C=qiYZ"F!4nU#<j3nWo'fhqV!r]iqFC5D]LFSFa,S8b]GbW"9D,>q
%aS#0$n&Y/AMbo7Zs3nrc_]FZ<QiJ!<5R,'s4;(V`VA`%/`03KZK#cojRDV?<,f^8&R74/b?(NrkN[0NrS1<`;).KC=7%U2F67j2)
%E[9?2OsNDMk)Q[gX!3irg/8l!Sj^moE^u9m"-5MQlL<IE2TAOl"X>1Zch11!$N9$Vs*.P^;?Y=!)TP9j9TK?MBS2#Dcl!G1D8qai
%OV9$0:U8#EW^Fo"fW)lo*jo#lq24kqH#po5*D2m?Ad-o.=fitF8p9M[*r8V6lOFtRWH(Xs>H6IVj`8TteN^E?EPi2D=Ll8:1kRXk
%.iZ>rq"4(%<g1O90W&$j\0"7@<GJNOL.:;c_bdS0=;_p/Y!cV=Ri$F!,W7fok%GSmo('<SF<t87K]H5YZ)G&gH<eG>6i!M%CQ8qQ
%1WT5[2n"[G@T%T&Xq:W/@/`$bD1nT+P#Jfm_O&Z:a73_W(%^s,Cdg^=nQ5Q]Rc0('#b5dq9sRYa,sk#^42OB10:S,r_ZPE'dG)3!
%k&(nS%uaR6.<sp*MRum,BJp_k6p4FI,fQer?ORUi)6],R-qY0s`Jdd[-.%ho]OlG'Od:@UN"S*2F#^g;g?2^IN\1FRh2EO\m".<q
%1nCe&f'rGe"DO.FD\F3O9_<D;A)F1^1:5b;=--4tQ)bdNht9_S6`NO:+,:i;.+;\,]PT/bWes:US%'dYI:G#aNZa%253`bC,&57n
%+]H,3q4D(R%JQT[eZ;&>@?Ou3NUD#\;_bS.LYdc^.B7SU>$.ht7&g]"(M4()$]5lH2X#PgG)oJq$q4@tajWV3X_<=MSU`$p5_(92
%e#ij:Vb82u(3bDkg#T`R0jPQ*4Ot1loHnXl,`;ji7S_p.E!rsC9@FI09g"sU%g9dA@1n3D4?@@GKbPOZ7e.Vg.lYP.1*4Ak7u"(C
%IoVr3i]2glL8SsQl"(=H2AGW4D^\;UKc,-^TS_j+OSVY^q?p*t7_2-[7"l[C.Ztgq12T1CXZ<1[e]:p!Gc'IAjtY)Z:#!Cn#4F!m
%Y0=0"S-IL@hE^dk*j697Sc`Ujo2WnBQ_\qO+lE\RgnbC]!8W*.ThNC'a9dK4b&DWkCMj%Rn;/&Q#!(BM>EANXB\m`#\p'A]F<[:_
%/`h(pdK%B9irSsb%e&5he+-$:BEkcHJW)<G&-*A44@]^E?^$+:0a3LI"#h'4GfhKg[)VYo<N"LQNFYCT(mssE]@m?g"\O$3"k4%W
%UQ@:]-#ucb=F*#3XQ2MX=,CY`D?R&_(KMD9hqVleI@uoJLpB@R+h<g5%;Igi.dD8+:MuD05Gq:LceidUh*/9&_"#*Q+-EUA=F,fD
%MT4(?:uW4:$E.J#X/3.B]`kCqq?oo,l*2\Rf_IT[1m1NqEeVt]4FX@ULj;,7Zt)goJH[AAh[!OA*n3cHEL;VRDjf[rB[p>X7Y"an
%kcI/CN.E)XO^&,':pih<*\BkObV(M@nLL`(iSu5a>$aO>/hBUl8;&HrV4WE5+Db8D0r2T<D%*E(<cF&]81]1,Sq$fIPq,6nYK.Mn
%oH/$ak)"fD]q(S<J<lOt#uh"Q-B'Dco)2P#Y=0WHTc')]@1$kdl.I80+rGkL?4dd8V42]>Wg&E@l6d0p,&^$"N09$57\cf6.:K&]
%U>NCM=Zujr-lq#6+,kA`Mhb^bSuHs>MFs9\P,%69WKh_.Jt3NZ"6(%L2DKS$/Ta;!oqb&99^F6TKWUo@djNOB0?bd&!A274#7!/j
%R.U:lb_epSA"&([[oC?_3n8Zk#b7A>1T!LJdK;ES%:c05ia4YJQG5shAT*VESl0(X@C)+hDH3?g'C[=^;5C1CU<sXX7uNqcC^!dm
%?o%%c]`*YM0&n+6A-37s*2EquQ$/lqO-MQl`$I0n2*<'RnZO-7F>@Aa]N;qBB$#"S1E*=qUG\U1cQ\0r9RAlG*4S'tNJe!I[3>R"
%p>2plZ<TC#HlkWR+^Z-!cJXq3^VH5'ab'W686^fW%jVu]_ip760e+J:OQ=/@nO3T&i*%We.sLFHmW2?^,ZfK+2Alo-K0_7F_IXr1
%*ebt657#<?dJF7U@X4t8$3ppP6pAm5iU?m$JscL;3W`1eEsl#0cL'Ig3`*()Li$V^KBkL9Z=GI.>dONS@Q"POWZJ\k7-()u]*cYA
%%d-LTOKFdoCBnu?cs<39@,'VOC#Kt9/aNhHC#t.VTf"46.D&&:.c2R%V5?_WmR$F1T[?60hb0_E/;eJtBS<rD,.BC4j&-?RT[=$>
%RUl)cg$b]`E9VrF_PY]dN%)5AUS5&'FU*n\&rOW19r![p^R%ErdP3SIQ&VWgXDBGQAu4PClM"1j<]ZO=1X]]2RMCm[d]@\`g\kG.
%bm9,&BgtFJ8i%Z#<18r3MfsR^Q1cdi&,?00)f\bcp2%b9ppA`JAmU%*/'NNZK+@[18I,%5W0>PgB&.%YX67*N3r6?AmXSZ4GBD3C
%1@XArZ\`nZr4>>kR+1`\mptVoH=c@RHtDXVHtD_O2#T&s*ts&nf9O_gr+,L%]JBEGj0Ruog%bLLkgBG6IUrQ^^G5kA?^ZJ3mGD3$
%Y)P``cfQA>.t\E.Pt?5RrnRbB(it$$miS"hLSk!C.=Z$R+.A?Mj#NA$'oUM1UGmU7cG;TV:<e,IYMlp\US]lGVG1!XPLHBYc.U4;
%8oo0eD#J^\8ooU<<2DTB=]K/G;4FRBa/I2D^RqM_7k(Jgbur2h8opB*Wm[E7/t2d2WcFH!Mj*n4.sLg"4FLSFr]PDc/jYi%n4d!P
%,'8)C^MNpslH2hWY#",JY2$tZqG_psri^3>rm6rq[,hg8q*SBc)qL<VQK=Do#^*&rPE#6)]lZOKk5F.LccZVL+o5[0:]N<TK0BU1
%pusngnQal)YsT-'(k4l#@@'eqSK[hG.b6c*F%l8t=a.pekNF>?T%\]M*)eF8&UE1ns7/k@e!9sRjY3@)Xp-*FD*no+IbS6_l"#,>
%@@Km^`'/NOkYDQmD]?urZYuN+"J,/sO=NCoc@M2gOsMRH)KD_p:GTFXg)";d1YaL&$qA4QI7a_?F@k?<bSgGLaO,jM2t^Ktn5,D,
%",bM`*_;#5'Hc(#Z_RimZQ;m:4;:R1W=4Ibct(?<>QsA2&n^mHJh8tCLRgbe&;S;!C>KOV6SsJTG-]X0\<68RRU-f-nW&N";H"q<
%h$d`BX_bk4,b?ks&Z>T,']*cpZM'jMU^"GE#caF)Uq*j[QhimEj<$<aN.O&%GWccX_Z5)]5k+*/LU'da.@I6qI*;/@Ab@5uQ6*NC
%2CTRqFcem)o,=T6ont+p4Y4TI's^BX[JY8<hqPJI7Nq[mNC2VC7j:FLNFTMno:<uh<](uC$@WS)Q6rY^/9R$E_4b%dYe&7o\oUg%
%oTLgqY<HQ>nJ;n.Y?")^BfTh4=.AbKZEW^cU,TM4Z=WR^9)'?!?YZoZ<8,L4%n-(@auOO+d\VY[3#oabG,K1a17=n-F!@kH.>H*s
%\NjTr)9lFFK$CpdM4.)G?P4r&_l[J<L;P2TXklhL2jtacM((U!BrJZq_P^AXiN;?&]c+GKj=TVaK36spE$)8sGqreg]D(t'Y_0R:
%n(<]m&"e("N]:P<"U"&$(!1<25fE9Bd54m7b71`s4[O68b3e:9CTjIYe2,^/c]1e,\RY-f+b<]dI>g=/dNS^<OM+j7Qnk5ckn$5L
%#Au`A%@DUb=Xd2lE$E@B=HMN&)_aM]R=ru96;3.=<4[#M6j1`.4cgj@*)C+"(m%U[_Z0lgkh&n@ZeR<l1A)7Pi/m?8a=`XT"cot3
%A*XU10'4QGG/*1T0I`^GOH*>-T1b0bU=mXkO6==mabr"YTcZbb_@=>3M>&LS<9fX:`q5%j6S=riWM6r&N?]^5n?^>$C9Scd,Z<"!
%P_Ehc8^M&,@Xpa0(Q"?o`Xp"3qaBsgic`GV&9IeJ&OlYsg`E-+mMYP.dT)rT,^lqDbZN_UIs<;-QD+,AqC?U;jts[?gdJc)0*1,[
%/iUr45un^ta#SYfBK<D!Kkru-p\)g"eKT[FFqtr0dS*&%i&dPXd[-FKq_qJ&piJsYM.?a^71PbCbprK6T_?[9_<#*&LsUID"'PdM
%E<ojM<3G1(/jE6HM^9br*Y">'heJ=G.6CFt&F(c+<Th!qo2m;[DBYB<e@n<n(&Fd2V+i6>8chk<9:?DqlU.r,"U$(FSN<T6M'I?k
%jCl7BNT[[4d3PXi\(sLV,I,p6W+3eKOr4Dn-We#X*<S/^$6bI3<1Kmc5(bnZb0#pMPCWl1B!Ou%A_GXZ:1ZXZ"lA8*e.^7U->J>A
%+[#rY72orQ<mPk.koGrb_Hi47Q[#"VF_NB6a7<@80ro,L<`e9i``T<s#$j3L=+m+M<c&ugeiB3lA^9U@4EL@YITfW)eC]q[U$>[>
%6PVajOWifam_?ErrqAL"Fb$(^l0$6lH\4PkH#l"-gU;%sl&?YW:I!aLL!rh9h8D>RokiGCb*_%mOjgu!\s:a?hR8jPo^f3>\],u-
%)5Ykq2LLe(X*pS,F6cT);f^&fImqT1>=5nW!gr\NbQ(63GEX2SdB`Do'oCg/U1GP\>ut'Y^c0pQ4A!"a$<Ipjj+*F%60PF?";?6R
%)0%scgQZ'u(T`p@ZS4@Gb"Xe6'eS<8qD(5?^;^#C/`B_4`"K?^bG>gA/]0<O$.F%*:)L^i5%3i+K8">7i4"_ZR4^Tb[i$hmphf0:
%'esXTr]B]_38qPO8C+,&>[<TLYhTf*)K<rVd,#h"HG7Vm)>p7Z8Bre>jI*8>\V`MsL`h*+OJ)O^NYE.RZ5B1/I,iFa)]5?"W$h\2
%1oY<7Yp-M?j;6=&i+,Tg8L?h[kZ:&SL^#]cBa6`:F?EoiiouG1P>f%niX="Nn^mS?9-WWor\otCot=%RYNBVKlOPnWji3*L#/&F'
%qoKW299o;J(@IF>ni]$?c%5b/a`.^Zpso(jf?t,ma.@(Fe]60S4EU2:jLBn=<;r,<(^`@44!kPV/s)npk<nDoMOC#[m7E)D&q-YW
%$2$7"lVAnKc*3?/G@rg:"!+p(k^Q?;?tOW:dT_Zek,"S[j#:.G@&i.]$XTpC=RacL4+boe5qoFRL2Y=aQgCf_%u"R`ZPXT?j1<,m
%i:*;,*LeVKDNJKUM$Er?kXt=N>I`d]p0o2AkP5324QlJ=bKj=+qn(ZGjT5;Y$Dr)A%T\b,[i1M+;G]:_ViI:/J$/(-M5R+MO.:g*
%Y1o4rn-fE8,g<VNRHFZ_,;IpG%AIr,X">35'CO;O],8Q>4'R(-2du&q/r8GI;2`^@[2tN,Ikj%!V^!STWNuUlQMKA/1kAnE[5?TW
%c:Q/!Sbl7`d7)cF>d('TgV;+4p`?b+Bn.>f)j55j?XC45;g5U:K[O/9i-"LudEM]WPj:?Sq/=3UIanFDoab]Q3qaYMos`<<W_N5i
%`nm?9M=FY(p*q7/7j@pU_$b_GiQ^q<bp']3rKf>6L0Kmnqj1Vmj!u*[Q!@;Q:/h\p]Td"b0\^MbfAp,K"#YJR4q=+2Q`Jm:Vlb@F
%j"U,(GFU@tm'7!Z61-M!Q?^tO1gAr\7\Xu#a3))Vn./mC0_Ck^KQ.%WUQ\!9G-l]i\C5iZ>I[.($\/2ugIo1f1d2o/p*HEP_97i_
%EH*?4_rHZ!PGV.t&DPU.]^L@r;e?K8)=T//5.4ueA4bpfWS)niP`fZSZo#StV0&mIEu'&QW&F-"X-Oikr$tfb_j,9O^Bq5IY/4t.
%N4L!)Kl'"hf&H'7*lcrp,Rhcg1UW&4k^3blZsbD]WuTV18=g<fV3.k"?h[mo%;(+<XR2G]p&"<kP@CJM'Jg2n?@@o-0>70"6`20i
%kq;0Y@VU>>X@;OQS.<Rs,^1m<\`/[ede^)8[C\?q,A6^'DUo<c&^+k>LW@`!Q/Dg1*FNIJe$51iE8/V20l'Kr\qe"iM("'pN"0pZ
%%SugCK01fhfa[jZq+t8'j4Y?iSJXc:H2]&s[@,pbBks<Pmo<MJT:n9c[XJ(nK67S!j7gLedCG.R[XNXaDGSZ8.$CX&l""k_[ma"U
%>8sd)[[#%q;=Bf)J[YoB#>eXCG<);HK!=_J4W2="36Ok(aS";'FT%a)6NZ\cKFrf)Z8cMK/:Si!;]ZiQ-<KScG=IH#'r?t9X93b1
%)Ap#<m5&8faJPd;BQqcb#fXZIS3hWXmD*([[%QYY&\/&e<%5<_f9T1,PMG.GN)9?+_Mm3!A(Zc8+>]Ti&\76%@5n$Fat/Lt:s'qu
%**gRZ`.3Kse^PGalHtQ<&Z23E?CO!:;9.Ninff'n^-F!3cX+;P5p9Aq%_(3FHc-8qA+'HOp[-TBZ7%Hc+F#b$#.8b^@lK(#cPH&G
%WRD^1eI>4CI\.g$]%EY=e0*..J^+anbE\21cNnE5""3lqd%o$np[[=?q='s2C-qdF+fI%t;Pe'WAD^t1jPsk6AXI0j.U=jZG'I:m
%6.qqHBLI5`dX"IkU<[GF@m!CY6?\:4lK:jWdp$NnnNPPq7=B5ST?e<5\=i`\'tTaU#6^]7-=Qb!O*lGBENS6cleK#-^`/HFFfqcG
%iF9hH#-CeD*i1T;'SD[=NUX;b4dInPTTh_aWA:?>c@f%MMO[na0@;/h)n.U\jWSnl;B=E!)H>nNRF`jJ,LtXaJGe6"0].q#TA]@d
%\ieRtSPJTHE^D$Z*bYiD!Do#OJ=m)n!_T^%JZ@:c".C7^\KWkSIU7_n;Y@MUUlJ[FUP#L?Ej7p+H-/t#8!@7L>*tn>gS)<T)>ha%
%J*ckWd1Z3F.I-[TlI[c`lLJUBpu2GISK-QsX4`j'P"T?:*Sib_]f^W6U17u2q1-%Fqf@LEn*h?G=.1A?[3JHU.10-/hF'F`-(!j-
%7`O9KFt$g'+k*5%KOp[W7"1gsp8`C*hcR-GdDh%+qi09J%o2)$beD+@411*[UHQ#:M>O'\4eaNbCm(#8,eO)R*pQ9Pf%a)HYa*jI
%@J0qD1d6,IOV4&^]L1\cP5<6t2ahl3ldNl8`S.4kgA-bQ(.4Kcc2BEU/6`lt/riM"%D8)Clp/8j,WeTVUgg*X2&CVg00L0ar2#(M
%d)]%F.ERW^([?6MM;uVujjnDODr+6:gkq>CN'#Y6qUfop/h[RW7@;c\PL<=<>d<n7Yq3b3#62K!?SLM^WYkO:`"3r$BTUFI&\$k2
%*Ph*9.7W5+k=pm@!6euns/R"54tu/@KNC]k&.;/Y%i-#Tq_uDFPAYnc7Lc"jY_"844Zg#S'[=2[m2$ceM]g.3UYEocH[PeE;81Q8
%eY^G_:+-AbM5?,-<"]*(c3]14S$PgQ>4AJUg>uP"r#BMm([27[+U*UH&jgTQPpA^#:musOo^(1d^eD\9->>_&7[f*NY>4kN*tB50
%m"/?q`;>Kt"6(!h':P`rqcC=GaS\(pm57k84nnG)pZ07QQNtB!)sZ%,nZhXjA-eT)$JF4AN9iuD)N-#-rC$rJAd[eaPk<Uj`jlFR
%9RK'_C4,s9)dnq$<HSb9D_#il%@*gZ]h#&h;UIA_OkC>71a@d<io!gV%FLlbMo]8tX_FnC>3QHi\\^d]]gsS('MhARBZQS\@VOC4
%R#ZdV.]*g#Je2B_OnDK4\qk&lIOl@-Y7u/uPFAXAfB$U8$>IsjSWrr<2:%_lid>B`W/1sAd!Wp%",_K?8@kE/[+[;j2%:@R-H@"X
%,(nJ[]ZC,iYOIBE1U>6MXe)^sc#(V$Mn^A*g*&".lY3uZ/hed:<*:)X%=l0PU_<J<+CrnH8<ac<DWe^7Mi,1<j*8VlQ9\)O(#4p2
%2Tp"Xghg0tEuEOUI0@'o!:iklY9T3,C:U&\&o;rOD'5U0,ZffajdhMM(8VO]Q?:>iCj8i^g3Y5]Xde.XU_MN1$^<U`#qn`VObBsP
%5(h_0G[N7bnDa!2iIZX\HC<CMMU.HDo/9@]d.g(:MbWb:gr?6No,GUF(60UAe-4/!?Z@+2IO!_\%g(:r>sE$K*Bc$'UqQ&U(F<,j
%mPBW"jQ)L<IG3&nEP\uIS$m9qRMIN]EF!]?pmHXA2k=gQ]S:@lCmh\MJ=e:8i$Qc)N)8+c88,`f+Fse=q3Ict$\sb-M?Z!R@RP5"
%+>*(/r6o5hfBg$4?LT`O,"6,W1p?2$Ls,ML@0`AnfMY*<FjHt`NarM;8^MGj.E1I2I*fH4[#q8[n7`mGq/ssIrdS\SRM-K#EuOCD
%hi\uVe@W)-mf0<S2jr$$nffenUb1E=jHU@*1%E^jLS60Kn#26ug4S**j%_jaY-HkhLW8gP_*a\n9XsFlStAf,o,I82GAcKss&Ifl
%9*4@Sbh8YeUqI'!4=fB-@3A&c^LeE6"580@LP9_cpJMt`],1B=JE5NJP9BXgLs,ML@0]]iKj[</fg4WIq8RW8-aM`C0:\W^L+gZ#
%.>Oa>DY9G9=.KH.k[&9rSd:F]cQlc(rXLG$@&Y'Te'sjmG&eh']P36.YE:l=Xbfq_,'qZ)2)DDHQSb.D!d*<`OWaFeLs,ML;41pL
%8e*N9DAGa-I;#?N3slq(:3<j^NNO$L2q2pCFsF@Yhso7MhTfoHD<H%bN#aCYMOs[YTqW9'o@uB<G=%oIOF?"_JatD2dq-/Cm'u?;
%DQ&j$]0TU5m"T83\8;34]k$J/$!G(&hI8EC[)!!:D4=405o)F@Dd+^<84W\spRSEmmNu"`Rk<1aDDt/A^YMj@"]qh@c%rW-Tp:qu
%^8Z_+^:R7E<]6sGF5UdMqkn7F#nmlhX?3n:abHjfc),7Q2VY%ph/'+"s/WTc=WCq<RaSW]WnZO#4-Z#;[@ciEj4*Miije:1DQ8K2
%ECkc<<0)stMN##fP-IkYOkVeED0a?2b0&Jme#[Lp[!TKM>]jtoe\_a),f+B"q[0k\j"5G5SSH=([]s"%?+Z>d]X=Y?0th8pRN5Jc
%gPp>_.G#itNHJSYf4;P>%ScnKn8BPs(Z\Y\h&4tsMbJ@oCJI`'(DEFM473+.L32_<H+?H`BQ=Aqjm:`s2%5H8S$-]WUpl,i`aVbB
%#X.?a>+:?8eUU9IChesf4B/l;e)53+VNYpX[]1][2!]%KO:+/h'XsMoZ*+6Y^-m_F"rVk`PY<:2A>Y.4*%%ghT,q%J'7(EO'U#Qt
%nY%=o'!GrF\I%ZpYg>u"B[.%H1u@D6c6YK!V'W2"[4'/&]ht/-;;<WrZIdq[:qRP!-rPgo<bi<,`EQI,/^'16-?ie*$J\EAIn&L0
%e%&KBIerjr@eU)aC^RD#43:r\]R*.$N,IhM`M/aoKR57\Vg!CQPYiaY2kDGi/GJi]Caen]f"*^tTRHVh[)tPqC5uHHHeeCi&H?nb
%BKf[RS'@MD4+/ZrRr#7s:YF^IXla!)p8X6,B05;9irl,Sf$;I!@\Hc\%S^\5S847INq!#<\30DR3E-Sc:S*[Hc.gPa+^FDI[UgTK
%P^baAg:hfBbVQ@E/=*>JXBl-bh_+3VLMI=)\as2f[\iHNqnQ69#FE*WnW.[JIX=/knDi7`#-r11fk-Ar[`Vs)[f4)$H"qMo6@co%
%GNheGH&#82`ffgp!K1_&HU=3LRL]W>=*"SoIQ%;(c&4ImpkGm4aM@2a!,;9McmGFO__mD+gj-P%5lJ0LVe+G>J!=5>5X3OJ/"n%t
%R?c-[1MrK*Oq/3%Y%"JWH'[_sZoEqJ)&WtrD03uN3$D?Ti.Qb:&&j%W#MFg(MF.-U!U:':JIp,K3LV^Zp4sec0]N29qhN]9l?:YI
%=WJtW5?hYI[O<6bS-QRg_YCRD?*\*q5K9@gI_M4=o[DQ^o[D-qZ=t,Xg-7&l&Zu-#EDmGj=83qOJIOe;N`3'+?7E-Z1/l<E$O(2(
%A<:H,,iUSoG7BWDiAGLI/S+LpDVP=Fn=5Bp@5V'EQfc@a>WiSXRBtEo@09cQO/C34r5`2kaWV%AO@Ph<rAH:EFmhd`EE_/P3-Ek^
%_ad/>=!U9+H-,d'"sWq-*:udKdlu"?JkLfA&+\>i25"I^Bfas![>O.&aR:,Bjqb<>RK4)BNlD=Q>)HEjflfG"r-$IH5?stNc(.?$
%JUR-I;]GXC?6NYFAo@S>o4Rhe^V67Ka,?he;5p<"]1V<pA2QmHm`PfHglTD;/!Z5^SEth#^jZR>!928Rh$1`:aE=nsr`_IJYWp)<
%bCUSGfaRdiK'd@S&i$:0%F@qR/Y*.@m6Z!<Qjs$#COZ-U2WiBTDIX2SH7OV3/Q2[_CIsLf&Y<:\Y-f[8?de`n34rsG\CFEO!>e(&
%^,#R,S[3;?0rTk?@WKRIB-HZ/Ill&0B97jHdqfLeO/s)NmsoYXScl2,k:fAH(ZYI;3P/nSNdm:!0Z7mB(k-lpb<Ymj9RBS/^:9Ke
%=2spm,<OJ>6A6h/7)FbO3<%qq.4r5Q*<amP(5ph<LepJB@)2Y0iaOUCdn'^QLo".)Yco8>KM/]]eG"ub\S>;(d--dLFJ6c:n%k[M
%>UiY)F`fbWmWOc&^0<soXdqrY0c<-\C;W9Y/H#9dG!SN7Af/+nSRk:tF[la,*Qc0l13CI:E;5F6ZRm6h]s2p&RK%UcR9qFQKmk-5
%5`:?mZ@NuKJ<Mi1:cT[$_G^eE#Ugd%(;SMR(O"[WT+&V^[B^A2bapUW8(;jYc_R*s4%AciXhH.!;QLR,cqphRSHnm$3P8bD#(M:`
%0YD:3N]CEnN'39V)]<bePO6BmllGaCN]e?bS-#f?>T^Xq+K_RX.hR>!Zae-gl&1H[4VYUGX9QL`8;A:U2dkdJ)VHrY&FC&oS02Q(
%@sV0S\4AsSQdt+]E0E$`S"EF77oSS*I_-.tnn3S>`hB#R^6qL`dp'@N"Q.A"G;\<LmZKS3!'_FN;;EO,ZiM+Tq`8JN8I.G]46]^N
%:f8ceram;!>jAY@G(5mO"bc3oV@91^ieIo#a<Hii<`=W$X%1(*7G%SLn_2K<N8H7DQi,OpO)]uVT\[U4qWY+eigO8an`b"&>V>%?
%1_/^':+inuU1=Eo3.k7?UP7,OLLOdVX,97oCt=b0b<eJ..JD7EaE0/",';8<%-#F8W0LUFFCKAlOHW2=n3oYNm<>N/2UXLB(/_Lj
%42:N\o9WM=b=1N<4AXic?C/<4[;k=5h]nch6!mu=7'CTk4L&0EY4-#mM(aNgETX0k06ool?ZG7DN$md/g6XI-?/>8&XEgOX4P+Xs
%bSQ2SJ#u`#LSu8r2:9dR_!+2RPe;S"IOedf[NOHrYaj8BCi)MF>7Lq.BL>l[m_#n]S/ZN;.J;BYK^d/Vh>2)MCc$;VlT#gpStW;h
%@e#L8"a8YFCdFTAXc1*HjNXdZQ/$!HM'QEl1j`<mF2P[7qLKSr(OlGeCL[&5JH?H[o>X:B^E]8Wk>?]-+L8*Q/VYuG>4?c#o_]]H
%bI1h(kQ80;_.Ei3XSrq?q2_U$&F.p[^BTTbEcWH0(>$(q9B("4o?-;@V'&7Ml\%5k%3SjG9F-Npie<nqdQ'RcESu-\^Fb!=e<'Wr
%jFKN(nfaUQ482CV\F5lA3BFhnVfALR(bK*Pj(./jl-6KE"D,Nn,&MNM)3`sh/6Ncd$RY1pZl;JH9-W&V3Lf!&",QSN''aMc7852$
%+KLHsU-("M)F]eY2?]eL#9TIJHRrJjJl..iZT:Ro'*]ef7!Ws,><%gEOk=8b[#Hhdn15F&/et9)9QqSX,6Q`:!#7,!$VK&'<.@O&
%CD;pn!XJg\,*Rr#n62''j"'ss8`h4Q5u<nqA,9qRR^9R@rbW\?+2FnX5'toqWb/o(0oC(Rs&2?lA&LbKPR7XliN(\LQsCO)ba,C*
%p-iH`)fKeVA;Qmq]X$#].IB9D]MG@Vb<XLoK?5P6.>,\kbh_S:-"]Lg-F!ubPF5*Q5i+A\Q-A^b4H3'`BkT.nEoDb?H&f<YaGFed
%XPhc^^Z(T.jo?$ClYg"fSZsB<'JK@%pX(P89kt<Z_Vn'W:)M.5Yp>((aN<B%D5G>Ej',$0'P^AmPBCI#nrnJ<lO#F@-]M(bg7K-H
%om#pJ-k!]tG:6JA"XsFCb!DOFd4bEk=16RRO=:1s]22J+,UXBmTI%UZHDMjD*@i*u8jm_(%mD/qM!k\i?K]fB&HP#FpqVMV6g%I`
%^06>m`^ePpRhC-1J?!BH/;A1AaLgG\e5Z*pA?R2S4<rlWkI^nV1Q^$AdJ4ma(ao:B5;'6Wc=a-;8S9p&/q`o!b)ss_jT5`n>;UW,
%dg^<TGYdAm:f',^P00+(RaN*D*(liMAN#Xa*iAnJMR`H?\LO^UB^9i8K=oUa)T$d$_US%:f+f#)U2,M+QQ8L-#8eV_=,tmK-7X_@
%%WnR&_Mf\S@J^V8$(B)RB[/m?U^.<G:FBn)1cJueT9M*[3sf.6c=*g:cJuSpm4R(tiu_ik4Q##<)L9*2Pr\DaHRjH'LQ1Ot/$_^$
%h^l<t>=dE&=W.D0EtH/2Mjehr[t'FM[DjSN0AFVk,X#GUm=qbU?&\[9cVRf;:5$H#Z`sTCi#[ZF)CTp]m)L6m:CPd$6,%P?S[gmW
%0SYa(&T.",ZBlpZ_<mHV+nhO>o][%4pTEk,E/Q]\?VnXh&D$Z%5M;)fDqBnY5E>"dKJWK9]fZ`-r@ae6"L)Ei`^\(D/th8HJ6.HR
%&J-FI&gE[DU<7(PiD`g1'^Q3dBOF"t[\O!j'qs?(Ud`0cO`)i6E.On;9FCqSh=^uIq.RlY.!7oOU]-M,UQ$E\?&eaGIPO4O9C[:(
%+gj3'8=)87LD<;Z6B<g\q<5ksAW.>6I2J,0,8-1o=P@;B/#]4XFg?jRbg^0A]/UK!G_ah..1Y'-a@hV@*"+U#6"HOS)nMVK,b>1M
%_R^^pW[&$@oElW\a,mjO4]$n=o>/<3r#)?[;)Kp6[+LB=oOs)4[)hc<8KK(?L7Sp$M9n0?]8BDq=_HNL895X,;MSqY3[QmL.T^_#
%"?@#;.6rDZ!tk^E2A/P[1B$ms_?J4]2,G;oDopb+"-OWeg;TJoHV%&_4!lutk:&`t:gh1SWa/Xf;8Z9o_%0R0AR*95(bIlT&fqQ6
%T@7gD*H]40%X!r@!CcC7DF?Ep98l_W9(`aj-j^-#KMRrp^99.e/O=K'eaGu$-or,A<8okH[F%_eeI(AN\?m*40[>AT2KU>leNDmT
%U7Z6<B*.NH8OH?SA/&iIP(ll6,hSQZ@O[q,2)$X^"E;2VA>p?>o+CES+8=l(cs0nhQYRD9+1IWm_U(as@S1s8qJ";ce<n\^\>q_4
%hp^\cmjL\!<G6P=Q(t$R'HINPohS$0L@ASn<9:El%p#)195pa!\19a3LItJC1Oa5KeEGsej#oeE)NPolqa),Y`D*Y;%[:o)jK8i(
%(U?B,8CA:/Nn-1sDNNUJ8ZWKDji84aNn-$2pUCAqZeT&mY&L5hr'o%io)#">B%s0X@J,A<iWApFa%%F?(H'3HZBS(GoY]TY.4uQ=
%0@4JVnUp]0"uj-)pT]qQI"t:3aQodA"pCC[Ukd_^YgfQl#*H`]ae4.)`OD_OlU7oAEl"g.E<K9NqqQ_@B:dR%p8JgZ,_\=QhJXto
%l3`mIQsCI#W@AiQ*C3/\E]mF0*fCote)f6NW^TgF`rK3IH/&IELZnK*j6`f<_?A3;lmA2cVpn[H=7A`U)M<uMd4qrlqY"tS.(HsS
%'92b5+rmP`"D-A\^C3c9.mYV<V<fD`ds&G338GkC-ljCN;;%W+<me4EFEiT,WWC;a;T3uR9P61SHJ-]_5UYa)-V.alh3,Y_5'fT*
%DG%VQ,'f,CQQs8G3&/QmP9h-%3;$U16,u;`9nVTm=)u`04cQ_$-u4Ue[gH('eQA\kZHDJn'h_`%*TkZKQ-l=JEi/@ji^B\K-I[UH
%6Tl_jbXtuNE=t8G/(YqiOKD1(UnK:6G5jWI^"n`I1W+Z$PkSi#)cS_d5*!<MEWcYn:KKC1;%=B?*bs7:Ie;-J6$_g7ck$m?AS+?r
%ESe1cm$^5\qh-'/P$__>MeVM:7*C#P,NkMm^^O4XIEA&n'Qn:bA_-B.BJ8&3P*0+5dp7,PIP`@,%S]mGLZYKPEc]T;PLr.S:SR[`
%=COnakX`-09+>fL/hE_=a,ZL<);ip)W:.A4-)I\h2ao%sYOgUu'ir:7"JeP9,)ma]qDj>"emgX=HWJP1^,.*,Iu]N5qlLOuJ?9c*
%*\V6?a/(;#0XM[:iE!rVe5@=OoKo1Z)k*iHknJPERlbZd/S&2[?$<*JmnfO0]2"%tPNF(^6Po7sdFoHIqC\Ws%((oV4M'OSC#m8J
%Jn,BJKKmcLcA_;X4RDqdN,$a+oqL+`AKUFH*=JYj*E::0=6%_j)Klm\rG/c2[dZC9psEL!*)O<(jKSTM2l0uq3)fTsR@F)[=#\Ok
%V+==oXD?mqpBP"48*uWH[#(m]h);EIG-m;<S0"OV]IkA;\#2k;SmG!G0)cGo>k`>)Qb`e<gaRqV2f=KLKME=+kA-2KB=C*<W'oC^
%#0$,l]7FtW!mfF!,/l5'PY\bCo;6dPMu7s86QESS)e\TDHf;,F>j0WkDI*dQ0oe:"]h[<@N2tkp;N#QQb5$-sdJ;5+bs#EVp8/O?
%2s?$tZ$!/Yco$77#\lGU5-AAn]]7X_B+Gdsk0=a@Af_sWkMfmKQp+:;h</COjuff^>Bk&gE'rO"8=Glu_4T,>CKetH?1mme9Um`0
%&%>3oHCB&?+ZR39Q/QdbaH_u3/eme1jK0mOG"/XkrZ"`Q&gs6?BtVc6F>^T1/th7p>\LQ6&E(TH(QrN[&fD^d04AUBh.'\/#=Cnk
%[Q)KmAWdQk#%!V]Y0p&)d%\/.2S`5%mD!UoZtQEqa$jJ_n-Y&p%/oFR+`@\3^*V(BTA;Vb\QVI(E%2#&7LEjjdM`qagZ-R&CXfc&
%dc\s88_:Z?i^hmRNdX)bA('+IWQgg&F/ro"l:#5E%dQ=<1%oQq$r^,GS-PGL-OWS\6I"ajFTFH^ChW3kH+VIE3^>e;qe4^;IU,Jb
%7fBnhSBbt)is`SknV27j$EAk[]^R/dEDjsE_KmoP+30)cB!+oF[:4WFKKuAO?(<=UP>_/8c(W2NggM;Md^#$6f2nQJ?D2G.hVABX
%qB:a[%'t=fg2g%cQi4\,k8s'c?]NCV>CX!"+tZBLdpmL[=Y8*jEI/[4%nIM_8jg3]-.r$7ZP/Bpc8=DB8SVKfq=Peook>fGAp2V^
%cfcmGFh5YjeYdIYDsk15V:I];fF+pWkO\JWiXdBiYTN-/>hU9ffDEb1X3B5?oI>(_S@@HTD'rs7n"`DD\=BI&ES[I]DV(<!VO)KQ
%%*QGIlV*PC3o8j+;Zh&?otJiJi0QuqgV=7UpSmJcW&ru%M7;4R/NGq#ER=+,;P\0bSWgQWs4VURbThVK@`M[cF1>5"3OZNeg9JO2
%*E$lW+!G_BV?(tU/3@+ecElq^AND_Th-oKmYn*28F`O5H4q]ZCm5p8i[dI@Xju?(FV=H6#Se$tlEP!mh\0P)?@"1e;<a*in2WPpM
%[g&uUd.<IHSDr82Y-8q-f+fS;gNI:co#J:j"Z+<!bH\f.+,<A!Qa%oV%t8#poM(rIUN>]J5K;1N\/!cTL$#Mip-(:SN8(P@^Sea;
%E$Fe!'CmaTrg.uO\KT%SX1\`T'C^k:ZIW3hrqFg6hT,+"5laO8R//"f/W@Oc!,;N8oIY<qU^N'W!,X80HADhd0d,,_<>^5VD*l<=
%eb#Eg46c-+g!a?\.qJg4+0k*FbP_'STC8Va\n$lQ/Nkfo0$dTM!e/*6i)a_-fBG)d,[0W[W_5CFB&;JCn7i."egZd6D<h]B'uIC-
%btf-X:"_]-*rcIZ37u3?rr&Ym%MAf_hq3GE2fHgbOnPDr[QPe2HM+-7V*4%/qgZjD?_)udG?6W[mqg*4P*3b'&!!]`_Dk;toN;?<
%.:?<A=dTC/O]k!U;NT8qJqs>l%8Ec^aT>((m2(f0]u7po)+6X$(g]]Q/mW^_Ld$3c-l..r9B@_Y>72f^^Wprei'[-)%AuIN>/g'O
%JdF;1?$lY#&=1<\EB)n'l0\r"NWDFKABk:-@+2ppG2@Y1ju<iRf[+<pO3#5SpC;]b:^!SO.sQYIQ/jLtlB,4=^8h\b(=^CtVN9s4
%(TDj<&H6B3dYGPbL\p_>"%1S55pGlb`$R]S.$@mq&<(iR-6s@[b!dYq-$VXM81?1(B2/#47o=Y1HibjV>>6J]nE`6"@RSFAj3^jZ
%9KF?b-R8Ysh`aG92nSZOe5N2=5^&=5('Llf-u4&djkk)p/5qb^:&t]C#md$.!(c>]V]0R2'@JTCCZ]8.WmKl4^h5@k?-ugK^1qqH
%5O?$KUn-;7=VUCq=TtnBl:si+Bhd'5Z:qL%5iO0qFtJBga>.<s5R:j.6($u-$F-d3-AKf[_*H=5%!Q;JXN4!]XVK>F^)5\t[OsSh
%Hpe$l15$fMam%(#1V4UTS7O>V>&Y`pe7%&2&Ieh/p]M]mC&%u:Oon9PF*[X:_F\)XQ@.Zn*OG@!CbLX,%;KuiTG8hc&2$8i=-e_\
%pjM8Ai"9g/:crnH73cQjCC:U4Tt72Oko7Kpg8$I!K8^$0qSmjVO@u>VHbCe@3-0J>QUooi>:]V7CL@;q3?qC`TEWr>oG?!o<DrY3
%%^eQ+*FDfKR@l)$I='Mt`2Z4HZqD+VHNOus<ff$R'Y^YTqXlgAY_4r[*Ch_&Ss"Yl+"/0Om<8RS]hs8_nX^*/2jlGr5pfHKTab"]
%hpr"GBi$q1R@1f5Kkue>9*#]$Bd=K[>%)tULcA)m@8Soo*\%T9B$hu7??\9Z?UGdPUnSZ0BH'@/A<bT)(/8'"S!d@R`Iueje:[7n
%)h8.oD9%@:``FRQ.pjTe19D<H4U0_9(Aah?Q/*$TGY;JBKZ4b=f`(Nr&u(3):(TbSB>b?m?:8U)h&oIs<5q]=3qd*k`\-bnUVjqK
%f6O]0OGZdB/K==Rju14eIr31uH4N1t#(k-EOssd/EJ"dtpZtlqZ\VP>.W_jdTa^poGH1EW:GtM1UT4E@<ji4,`=nJ]##0o=(+G8K
%Tm5f-n3)W0)eD@;ik"SJF$q8Xn%;VU[E'#s''<aWl?kg&Bb7oBKr-rNT_)dt/(2=[-<,"c+l@!SAYW0I>r>'QM>8;mbkPjU1Je[Y
%6H;(47.\Y*63;[OM;Zfjk79qkc<7'4&(_p:dPHQ3o2r3)5Y,PGE]ap\UY)L:"7LLm./5&qLgG:.cPB]cb=!(l#h$Y"nIsoUp9Ahe
%&!I[18?ma)Q49e!qF4([-e7-@?fK742CY1Z@mo2:LIIY7Oha+.D:U+7lEkE+fc!`,-IhG#]Zc/P8\$2M]g"E-]GTE;&&3olCW3i@
%'toM]a=Y=#P7MrrQHasB$Xk_),/,BqWj&6H`5>-I.UfD-ca3C_A0)/>:$q/9V2Ca20sJaspWi#hb(0X3:A1h/LcL#Ai_rP46Tfm<
%_)lVV-i^CYOmfk%Rr/sh\g6h3Q)s!AYH##V.p:*(<8f\n%Y6#u%Z$a)f+`:D:*0tOOANG7mN7T0+,=B`Fh&V#R1H#1%>q00E\g&&
%0O3A1f26%1R22r&Y.Q$<O!p!!S25Gc5+o?<WpucQ1pJ.T:>'C@)XX&jA-]#t9b827]')70CY\O"]T?djg6E`HB,-aW])"Jr2>3B:
%858XTIkfu=j)t'jj:bG+7EOr(UI`<;ZQ&01>;#>_!(F/O#/mll>275oJ4fLj['h.5X8Z)GJ33W\5Ln<d(l;h/\fD?2]BEH@c9]\:
%cD-YIcMdNG/j`l&d)lC^eC%/s(T9>jS6A'0T:]]ia;3_q-A<udBNg!dF?*[a/.dS;ES%F&_Q,U4dDTi7FT[g?H.m"EM&Hp]&Qsqd
%rZRH4M%W-cY7nu%gm,JlVu6d&!m-U%F7fmqp]jI"T=Bd6f0`'tVQ=HP8X1dYq4t6Vi(:B%\Nt3(<jm@pZ`kgbrA\D$5q`=8o5Zg#
%Ps1UF%U!Au2pF-ZBm>8,6KO/+l8WpR,?AN"*umePdR7Wj&^*H%Lh4qQ`'RYrkgVMUUJjH^qj\,6^Wh"6$&9&QVJ70W8s0RErJ4Hm
%>8,&FNK70FG%91M=;s(-=UUdu/;!*8Y9npmP8803QrOK&!pk\<_LsK+HMtLogKt+^N`cQALE;).@i"2oD[H(:"odV&3+jC1&tbi[
%=(HI>=6#f^+PS:7:\ADJ-Uf7ac1@Ss&=Z;S"D(+Y-`s]B/*DZs/rAi/*462cN`lW-7kHQaJjOK[,0l6JV)`9*\8/Zb:`W-rqcV)N
%H(;8XAC"Eub%E:m$9P)EZPEZlNXLJbegaN$DU)EVO;WXRH?.RlO?%(oFI]`Gr$H441e!-@7m*`7_I7ZK8qtYq"cGmp^2__UQo/$2
%k,`^V,keHrr)t],F5b<&NWTpA>1?Lka!a<U3H#WXEb]1_&<7AHDp9lTS@8nfc<Jeg*3&*MC1GXRDF%LV>db0p.)pPu4PZcWDgZ['
%_psZ"P([BqW;sOJC&)'nZp;Aa)3&FugYIrF/N5j@E=C`VT&hH2\EuYrp\Db!Mk`97NIL-$#5.d"k6YM?+VVDA.DGYLO=ia@E.,6N
%0q17cpNbh>Z#<?#a5ArLTJqPi+Y"WlIYr4=-bM2*<N*RY&`%OM^p!5\@B<lIMU*_]nNJ(Hf`U>+;KeohaJ"2h"V]Qk1I*2k6`S8Y
%(,E2-<l2ioKiB#`/>XN1LWE"6:\_9,"ds6;3lkOMbqWH3p<fttoiHnOF@i[UiUamZ`<4'u)Ae/+4mnpMlH:$c;RK>EC#M^_fc8H>
%AS:+86>Z?<I3&2QcOXfCF>Vb-Jo&10SHQ+XjtP*@ICqOjY-5(#FK)Re=5SB92,ShJ@ODsM!Vt\g+I9GB#+SJ/10SPB,&38/VIue/
%H58SA4iuiA[$mFOZ-;>GA@l.2,]>P!a)E*d[=AAu"FLROjp80H6@ts0e0*umksU5W<!KTq/Mq66XD*Y]FPA]L"4ErGE3\+-aeWh6
%'f;CaOR77cK>,mi*5m-090A6/JLXl(:SMBM91I;0U6Ao/JeR!uI+oc2f0XK'eG(e<["`EXk@j)uOPW_,R^N`H9B+TFE431tgT<aH
%IB0n9MUQ7rp'DWd[p!o/5U.MdcV']uf@d!P2YP-C'sr$kO2jIIS>YmO__'Y4?@U<Fc;(l-BL*:.B*:\Ek!rZ%,OqZQB=5a@:@sb*
%0_i`'XUmCof.H/tht,gCB:43h2]&(OTb2`635VkR#P`%aQd*;*H1TDqXqI.?,U.UnEP="ab/Y=?lK^DJ5j#GjbE.Dh)*,;s"N<ta
%n7"!-@4hkDCqtF8#qr4?`A:`hr$JQ,dZCk%dHL0Mh;VEcc8:=Wgkdui,/,df@`;L+_;qCMBE\MjZSI+ZWru/V@[[alM`$SVbVtDE
%YfknHR5;+mENtS')&>UcEe$()B6&sk^+`1Qqp=FBSo=#k<!?.a\7*0KF%e'BN_JV]',GhBjV!r"E600SV3=0<_K\)irV2tZ>eo0Q
%7iM>Ej0S92\n2W7Q]*-dMH-sR:<Wce41f%jhTE&]S`N&XYE_7-7U<Bn2lh.&LGP]hn6<pc8Kt=I#AWV$mGLYN1JX)uUDdlh"QL^9
%DQ29*S<e>535nm&%JqW_QH!KPjm-dgE?RiAgK-gj'JLZ+(8jpja<u]rqg]$#%PuW-eu+,PV!S=*V^oe%k]_m@4=\C5C'T%>IohZ+
%;8%SuWNVY)q"f`"q26HtZ-?\U?i8I3rV*K+J,]3Bo7+?df#_H?iP!k@m;MW8;cUBus,:dlPC>n6r6p-;4e$r5LVNUKs7%2Gb"(=f
%#Q<careH!;pqr^s8@\JFX2!+:h.o_+s02L_^k\u\^XL'3'`PXmmt5Ol+f@Zh)_E1K@_!IBpigAbhnj/66d\@p9<eWOX$>%k?XmgF
%2I<l.(POrOOd)NiHh#f54ZR62hHfZ>G3ST'`57U&7+T5HCHm<1,OugBUa4$`fC-Um`*T-P+PE\N]3LA<`7J+[?i,I?n_3G@*?+>V
%CUtUkHh#AnO%<p\T(9j2+FLGf?Ek$GT6Q>tg"M8`PuJsP8,?Q)IX<@%23tuQLP&iAdj7A-@lAr0OJ`%:UI5ZG"!6&Zs#8AZ>r2B8
%4oG-I:uq9;s6&jBs7mc:ks%E4e,T1BrnSY;('!V"6Ul%%`Jm'P8lVo<]L$T59*@An`Sp+o;n:)+E-g#@pq!_PnaYpfo*k6)pXfF,
%rpRass5EK455qH)Tm3AQHsUXU&&Um-Y`48pfZuOQGD6`,$S`#_(/5gFiUq`)5TCRWH,,cSNCu7Frl4o#B58)<Q3#:i@_naM$KmfZ
%+*(,O;;drT#'c<s9LOKM#\43<M1E8)b/MkF*3BitIF(dcKo$uH:'\^U;@N)B+"N.Db4tXBk2?:9:Ig?%gQ/dmq&Sfkp[IY9?iPb_
%s7P=+_gcq+YQ)j1r9^-(+9+qsh9O=`U\LG/naDBHlp8=\^eXU=$M"S09utFhK@p3oCC=cAIVn$S`L(R_]9"e@>pQ"[>.Lj?UCjEp
%a=T;4.rYn@Tq4M=$AU+B.!aG_$@MhBNT6rr2e]F:r1i9Q"TD5.!)Q+-+$cFR^DJHs.YmV4j<up^4,4?_f*b&qd)na)DlBjAR8%#H
%s%SlK)^?sQn/L"(fZs,2P)MS+=&1pS4mgH1kZ$mgP0b2ng!AB?=FUTth"P;hN=5QrL1]^]^,R3$5+7=CBMu=rdEY+Cs/R',.?fd*
%F<GHkAq/CY7)fc@_Od-S/b%&O-5%:[jAC<Dd\L"VREdJE:Y*r^>rp[JG@i)s=T&[L=2iT5X.fC6LTU#TBrXd2HLtbc4VII@XgV#`
%;GmiZ\`RmVX89E4FRene/'WQ>;tH9Z<:rW_baoG>1E,Eb#nFqin,URq)j>`>OhuWAIjHf]MKiAjNti%@1hK/@Bf&Gdpe<IQqmDJ5
%T-1u*9cu)j?sQY?XYsD57NG)6!oge,!o^ghZ3uXES.k(r:X?j!\#FXto(lrW%s_/=3Hla0'ZG%3+aYdTOX.U;2$jR,-snGoWHhF(
%CpS$k;VYi38/s$*6pjZ)Cb7Q`Y6Ju1QYn1HO+C#'B?Ul`I4^LH+5GR<[U'D(aIB<66(CG\hj>3WaEQ,Z@632iSYj_2P]+f^ebjb3
%O+n%rH*L1,aMHtY22BUd0#VM()A"\,R;VTh@7DXs48I.`$tQn'cpcl/D@PVgh?t\6,hY^ZREnH6Of&cj?r%Zk<23"AnK/##U021i
%q_CY\>gJj)+X0e#jrAb_?.pFEd=H>lT>iU+UH)(3Lbu>ZA.#=9rC@ni5K*09W9PPN9k`kETS(&5g`"1X]W]BmJe]Ou$!p(]IJcDT
%,K5X!fZs'rpjdO*//5L$K05DlEs\a]*;p:CJrDX8:-Q!JK-L^n-d9"-A6CY67GVcsNT!"PK+#Toom\RTZq2LSJVK=e$0N?X^Fo,4
%JC7XN%Y#^W/AhZAH1TM&C2N+<Z(rng_a`4rR^NacGZo`:D'1p\(-9O+XfXmZ8,LR6jkQ,s'RY.Mj`UT1k0E(YlpZ#88$Ppec#'-Y
%8Yh8rTg1BuQd\V>&:!5%d[kQcER@O:\2ip%S;>(fa(8Wh(J`+-cmM+n]>XE'Va_pU$_2JX&bdHT#oEs-=3rK0.6`d80IU"/Mgi#M
%1E.ZsgH^$$&6,mU&k'/J8o7h[-sR3$h8#@b)t?d`!UmrOUF?jPm3Z?\$ui7c#XJe;lI%6NKS1I2=d4_0C#gZ'>Xb/#d"VTZbSEt$
%`.LJ/TF2Btp4AdP"6B^^$/g*C;-jf``Xdp4<I"L`nfuUB]FpT'K1I>;TfO<6d<"TY3GeKeYrD(0c&oZTEQd*kC:c.>H!p89:ut1/
%`-1gin4]!P(<^_n7GZFDjdbp;4>4p3&Xja3G>9Xq(;l^'K#U+SC,@-::`&+-C5K,t1]<+fjSn-Ska+WN;rL,j$XXu.qABFgA[T$\
%`Hu_bf)[?F,;Zu8/R5J>m9LGd_k";m0E\:oA(N1HH&`DY7H6)\+"g)(Zs/9d[:Yi9f%NI(e0@k5E6:gV--K(;a\jbf)%-XD%C%"B
%=.H'hh3j&Hkp>)(EW3DTNI<F=_5)Lq%#4&!8P81(HpJ3(4$.*Oc7==*4]gDQgT`/nBJ38*%I=4Xp%"p&&VVnTel!H.q/,t>OEdMg
%8]eE2>q4!WEiCHu``1WL@8!jY<MV^lJ`"%Ckks[]NEsNIkh(7-"?oT'?-B-W[X,7&Cn\F@'eMJh\YtVqY&$c2glL/Zs.\X"o7]QH
%_"nhcF2aki$?m8W<]qs&`5M.UA_Q2?d>'$#T4e;cIb:?L8OO$aJATbaWE(-GaDXm?Q$GR!)`2QAJb0OAjIOOe#q2n'-@*9/K\rLE
%E7fPo%>FE0Xl^C0q_dR[&>"Y_pcF4]3K/D//X/>`-<aZr*/Te/mgQ!cL0tTjSVp[%B*Ig9!Kl9<6Lal&#<h8N"S&e,&BQc"mTU?V
%Z%;JY<g<7?T(`p8!^F.SjJ9n`;$2-1`DekTk5#W`b?C:XeI:'CI-;C88qkgXTW]Qf4XW=IZUd5oT"mSWg;1ZTXp<?EBmQ]2c[2O>
%+OW[6%VS,RU9tB,KA8X1>P;lN6/(eA%i$`n]kWDshQ,k?mK78pgl@5oW[J5m)%+(te0tMJ[rblnKX+?[-qbBnRKQTPEHHt6aZA)j
%%EQ&n2ogeems!uaS]8)7c+tO*)M%p$a<XtL>]6KO`/8;";\Km&>!))K3-.J@d\kQWO<Q!JD<38>/9A!.]fo\iGW*#RmIt!O.ZLIp
%.ppH#_%_?e%!K]3pY#Co@gF)jrab!9pc+&p@Q<H)NM"D$Cs\]e%@)e,RM0\nqHZ1TV/[@`F"gN0f8u??g6K[`rHPmPT&u0gmPS_p
%SbAo!'"bV(d9<$d[$T?E26ElW5MphqIHAt(H-Xb0*8,>QA1uPd1ldF=q=$"Mnkr4p:9SEP,LN8#8g4HajWUB6ILHiYJ:G\=2%=b)
%A3"T[#)M?+R#E:o'&f#?F>87?./%_I/@`-P_Wg[^.AD4GYb#NNH\i0*DfaFBETPIKdCtmFftdS.6?nWgq9[V[]QiP9giqdgH5jQI
%3P\N^d#U\beu)0\4h^%-r:)l;rDMc%G2R]G#eulqi)atjpsgns^3(L]\!JmBpuP`^^R@mDE9hm\\5tI9_`c?1,s)uo_t!TC@#9ps
%<4Jc8A=aSH"U?2oFFi&$:U6fU6uG/E-]!HIo,/]B2-i[7TD!iuVJuZZLglR=rp4?b*Z!0\AlF.-mR8N(,1X\-00hCdL*-&5Im\Tt
%kSh)7l`.28'_R(EW<OQAb!AUghpRaUY2-l7j-2ltp)ZWT?a/S(jnBcrht<eD&)Cr'e0"!50oDU##*B5$:<qGBR\&JXEL\00[ni,M
%F.O`CP!SQ<VdF*tJUOY[#?+BPKRFB]gFJV^F#^!e30?WAi%OoWJSJkp6/cIsNrKKXTq@.50$P,`["tf!&n,^p>ib;Xc./?MlR9VA
%kU_]jZmatn(uL*;ofsSc:]eBT9Bk4>B"YaB7EB!,nKY(`^9a/3c3]a+eZA-4RK:7N1IK$(oA%]2Y@^:n4O;?6Ir'l+Yj<?8ZKJp7
%l(aHL!r:P?(K:`11CnO&L!0eS'R7?\Ct.h!p]NF663g'F?R6G3nn^`?Yp(/;\YH*WeE$jcQQeC]82WgM#XGp^hB<Gc`Qre=D*jC@
%Y-0;/48WTPk!JV?^?ap//]qpZ.[%#GXq)QpP/f#5Md6?M<OKb2p`(SR5>A)FKqBQ%D697\TbaWnE+[#bgX=J*kL826j]hf"RLS1V
%o0N/r1BPOFo:/Xt\'GD[^7(B=VS'MSI;EBTib@r5XR\a^lI<Z/YVpq6N&c3-2fc&[NWUm)IkU1S39E1p>Jep"?Gr6kCIT11=)*Q0
%fk>fh+>3WEp)F^ePH"\n9ln7sJt'O*m6L/>'WdG8Y61%k<mCh1=u29)etRf2e_D.`Bsc4TD+kueXgOL6?Vg-EB4#Wu&q2pg`FJp;
%Y(NJ'q2X!J1[!ZNCd-#:)1`]ss02<b@:aJJ0N)5V8AZOa46GknM=OADccVRW/S?4DdpDJV-gJ;(Zn]gfh,0]V'PkGcHIhi,>jZ`h
%07\[lD*bU7K+@`iCNC'Md=-j^n@j<oa`PBa_05bQG/f03RotdkLRX_3>uj:orPN66X5g`.p*q\F@<Z^q#X?*5Pfl53<G9A#:#DXt
%8j]Q--]4F$Y1*^**:h50`l@X4+=MAscJ[p[oq=$Bj*3Gj+OdM_PsEgR(rjO>IuU:Dc$&$S1ELl@G1OS#\XiQkp$M,GKbhQHX=$1l
%E?8Lm>,IsRj4N[<mfp`oBu#Z%n&>5+:RD@W-iqKeH\!X)Se]ArAo!nGgWS8G],f8)jN/mA3I[]YgiBRPjp\W.[@i[q>+:.(O7no!
%T<;<,r+;hL2>4.ga6EM6`oAE(G1M-rq^Ho;gS"Kt="0_s4G]D2/TBWhSD/CbCVe%$Q];b2e.Nc0AS;9:l4)/[VD[.87^TV8*RM-_
%R6;@!=s"rn;;q-rUU>g.?5GZE>HQ.9S4EJ"YCgVVb:3<hVV@*o_ebYanVrL*++Jn8heO5XRssYO*k)H`(O.q!Ju=N[$eqn8cTknU
%2BUI"/E0cETn'd3,3T\6-otN-K4tcJn:b)9h$ut%]uZDSr")GrX*cmq>EJ+#J:kMbg)@nD[*NY:_YWaa>mA-8n)]=6k<-(:8pCT(
%]Tbq&+%Gcm&_tTo?f925+<!m>L2#M<(Q.cjE(X?Z9e1_dCTMnG#<L1[iU]F$0/%Zn"u?-0F:u*P>JiF[pK-"A0:<=JG.-G_[kh>s
%@W,hk(`0Y:s,TT/AU%p1.X%VeQ8o&N8s"GGMPe1jd"2?#3l+-RMPY[!5tP(O4KE16>ToMam;6/p0osno%i`/ao%)TJCqg@K"O?/\
%0M^ZA^O!K3r@DfT&Uq(O""Rs#O\DR^@Sse@8mODimgt]?TV_H9ML'F,_6fNtE5W9nZeGLDbA4a`S?ldULmQi@R8-4e"u3e0FHSRe
%>D"npp/ebs]js.mgR0Z)i]"/K?J07-]KW4MaSPA#]L)(2<F5/?mp$]^;`_h$iC+cIA%!elWc8AFPcI92)[gYg)qf';MJPF^*M'Su
%p`h^W3j3uIH5=QIb]VssL\&r42.n&\Y<`DEVR\^Gds-?OgM0W;,Y'$-3\J[*.+t9_)JrJ<`*o$$b<g.qY/7`',&.sgm%uf(XspcH
%d8*:n=4@b-I$dDI_:@=mCqg/p"Kpn<0M^[,'l9pDVTYh3X_c%]DeH^fjPS++r;(U!IqRO$K=)MEp\KRM*XZX5RPNVT26ReLr0N:]
%k"sX"_`\W60k_14)^:Uc)A&MGi3XK!6.nD(o#?^P$oIg/<nD1XO`_ha^N_U@Qa&)Q-V(obdZ(nT4GokK(pgc2nNQCji((sqdO<2E
%.At?@#"9?!r?jUB6q4i2K_?!PP_SU'88L-g@U_N?;B['C<YQN%/j7^.F>RVQe*fUNJZH=AN/R3igB&Hec$ERfmsAlcUGa6`85\p_
%\K\Tt`XVsP39#m=]0PBClunL*'B`Di<#su\lM"_+bmV:h`>'W3?!oDHgI5.4I&kW:-/kt8qZafapR[oOduS*YME;hg*E%ep9ja!>
%q"u]XaW*Y,*&Rn^M-ft4XI/@#<2=9tJ=\(1?V@ZV&!:n$n(h#c':Sk`CMmlQd<7qslId/?40o%<l?>SmDE8&nW#=B(mUEiT1\OYg
%gRL/Hl&[DX+a6NgP)Q)S[ZtT(5fd<XLeFRK"S$t>CN3g.+:hXaZ6;nlX5*gL`grT_"T]&AA_&=d.WCqZUuO^/ObsMbp=FnC(olX\
%8e/k*RrZ#oOd[@0/5nU)/4^/&$T/R"#ukmKhk<&C)]I*#hAcirJ(XX0kX6Yj:Q"F^:d-2VJ]bL]gZEl\DeS8Cgj'6i6nL:uMY,TA
%EI\'=Q_$)HQg_(!5h%c[.@"$?;C\uE9Q?HHZi%+#'p8/4$4<V=>?co,qC(cA"1@c$jM:%m-pTl:`,gNp3G'P1ig@0n)1kE7]jW)\
%!SSiJa^R3ArHbX*LiU#0SM54lo$u%X%LnQQ;3mcd3L6n_?\V<4:'!64;%Zl/#!SBjjN^p^PDsWlD(OQ\iC%h!*^I'3AZiM=J'\dg
%`di\oZ0+(`VE[Tp8GHQcU3V3,mY-iOIE#gF85Q@T';&l*,2Pp&j:b_(QA.[s"i>P2aH;]NG6irR)D+LLT+m6'Q%o$#p,r[?8RahM
%Xn]&0LF0Y9>#RCU&[DGAr#a=7i8TjAf/oM*G;fDoJLXN;o*cP!CmFb^8LW0"e>aMkg9mq$qZJL?1+FCL_brsd);#23H<g;;+i?#t
%fNH-8)P_SBWWS]:D:>HjI^&>Dh1r-1J=jEr;?#LR-N&E60A!!(dfZ>K,4ZMIU3V,KW+oSU>(Di:[4\!O[)S;_7')q?:sN2kW"Oes
%`=fiGII^VHN@Qr,WDo+$_,W55&JpNFhrH7>i>p5@n[SBOG)\U>l9+V\,&i5*d5:eGBQ'_L)B'T,>.0Z)Ni-V_6ZSMQf[14p^G-'f
%Y8WufR'`IO@Qj@Dlu[;t+tBJEiB3!aDirhlRkufd::p%1gd=PoA9Etu1uX35$<]Yk7]PFMShgs3WpolN2:kcMEOS=Qll)e15W_P.
%[c6$Zh$G!Q0&b96eOqr,$<6ZoT\q*QF$,6o/7itA['uGEcVh,r^.-^>G="<X\@CfWS]b[e47CP@5T:LHS-g6clmP29'cqO)g#+gF
%3:351O)Co]gl+Cp$riHIQ:i"VAC]U#$d```dfTqR8I+Q*+i3h[=.:F!cQ+[%l/Ad+-6c8dft+%1,3]<W"A</LU_Cl]G("#.jWBPp
%?k(uX%>t]:P7aEf"tIb$^='!")U>%^d!YG`Bg$SX-W]R_*dPV\4s%[2LOSBBP4`j[^e(U><b*Cg-WVCo^"S&f45^eca3=cSMp8_p
%*iH+bUimOFdIlD_hPTUD)psP>6Qs[fQJ)=)I%joI=Xeh_Y5C.LUEhHW9Bq?X6g?L4H"LAn)_NpVVG,suphQU`MH#FW4K?k!PuYL:
%WbP_6;UM2aVt_l69d--uK._maQS-rG`sF8.Vh#eIY[K?>YAST$!3LB-Xe_d%N*W,\j7-f8XRh^b=#O#p)c9kO'o<7('\p'ZQ5Z7t
%e^Tr_Tkc(o"'SuP)Y_]TomCU2hp4NM&ZMJnJJ6R4a)fKl,P"pO#m(:2A8T5T&UB$AU`ZComXR,hTur;Gr"*S67'Fr!(,Yl9QH(4=
%;3`eJc7s0r:0.T6?VS9;_J^6Ao><GEg"^kcc_L:(CH!KJkAl`E+F$j)Q]#RR[uoL`itVVK'F(9X<],_srg$+=a;t2[R8,k;S3q:6
%:'9Q4l^n1lKN#q/mr0'S\Qg"55XHq.%5QLQ#JL&ifgSFE$t74b..r@RZ+g0mpsDq'RJuIb"Ud'8OXlZhHtp`ka9_O0*(YlF$Y5\a
%#gQSC_.!>+:W0LIes+7rECX1Uj*_Zq?_Y^_KKLoXJ\qDp&8@.@4+&5L$'iuG`1g1n4f=YRqOE8NZm10be+br;r!6KsrMuTejg_<4
%0B9uRX9.i"O]-u>60(q#+At>-oDj1@gIR/9R:`N_cT,F,@"U)O#_tVC.2!,O(#N3FXFP7Z@.OcF6$(@=+?$j+AHtle<1a=#@Ki`-
%j?QTlqU8VWS]W+&/MPAabA[T+lm9`T+`7JqWD0SPqVGlYXMBCW,ct<Mq+6dA3EE3MkCN@9VGhNM!>63OZc'L&eu-A2S;<i`7/MbV
%,lu=/0jPPIagCfm9)NcGou1aXKoZs$H*tf903YmH^kbVf][OeP;n1oU&)Ji*E$o84>.EYD5C<R>?'.gO5FB-.o4g"IDlXKQXd2Q!
%r/!6,:5)>IXV16j*tHN7cF6m4@>g(f)uhCo5=XX<$CB+79u`IENfG-j*UCr)M:o6lkNp;aa/Pf[??t`]ICMnneil1_@%Z>ENFF=#
%NqJIEpIJ*u1/^#`MrKe>5fnl.`ehot>5cE^jabF+hAr"VrDulAoei>TqM/@^',a<E,r]GRdR&*5Iqrf[4iqTF$Lk+Ya?d11h781P
%\,E!MdcX"[O]>,V./.&0D=N54XgNs'HJ[+:r)cii6lYRTA=)JFgik:9p%CrSlh8CY)C3CWL[2TYPG"F6I_BRRYG8OQ-)DVfFM8in
%mY6$dm.)t"Z"<H_b>1igkN@IE17[@H_a$tWG37DoW_f%SJe[ZYTF-O?P9f(O8+D;3F`RDb3(<*I8!9&PC9's`7[bro#+aN9g1)49
%q'<WM,X$\/RIk5BZ),"&`c=_nk/IY4OT=4Y`=`BkOd;og"[bcHXo9H"M5@M+r_e+M%i9'DZ+X(>lVDIXns:c42$7_A99JdG^qFME
%9*%d4&jOV7V+@df=qXAt<%sXjc.!P_kG4FG!LK6gcrD]TL<B\Kh#\9O?h6cm\kIU\=!aO_![ijNi-+eZJ1E"t!$"gc$o6j(?eQ,\
%)nVmI7mSjq@N4)I\AjU7m_l$Z8[56#pY_.ojtJ*pdcbs;%0$AQ\13EmOCn/^kNg0ji]V2pn!FZQS`DtA"-/9_GV7'+$_N=Y]c9n:
%%",77g@G@LUt"=AIdmX_d%airOW\1e4q1Ka$^^B`d!+_$i7=udeCUe5ae;*MUcq>4>R-N+,k6$=J@)Ck/M#fM6pi&1M_0fQI6^[O
%Q&T(sDK:r(_[8QM:THHJfafBNfs\=#mSt]@W26`1d5-jG8WlKJZ^DhWJb!WC3@LsW&%.%JO)iQ?2HrC"*"NL0?P!`]9?g3U+[,^;
%Vg<tt-M6D/Tc$q.>AIb/bK]_FQ(\kFN%-Dp1c:2\V&;1.4#FnF+O'AM1L&d;5+*7L1+BR4_\k%G0RTNa1mZ<&X]hZR9T(;iF/(@A
%Lr=gC,Z<ba-i9SEQt^C\h!6T"#7=JHa(T^;b`sl;^"1BfNEoW0_mooj_OUP\QE*I+\s>qC<kllN=\V$82/5d!NA)T?c@(AZn0/f@
%P\91[dsrN#Lc:q"?k9_&Y-(YJO/[.d-tH;KQFARr]G7%u!ON>^XF>\g.a_b:<iHekU[/s$(!a.a.'cYPb#)Dip=[a5KnD.t+>q.!
%`R(7Fb$[T2k9A68jd4#N<U\<);1/A`L`q`g4't)k=rr_e>\`-dHUHuOGi+j<lQi3D?^.i$;'&MpE!`ZdL+s``pf]eaQI0Y^/]JXN
%>j@*,Ig=P^Th;1ELNgL(7fH:sacKDRd0D(uNE"HL/=aIuLb7j+@;\ST_gE.p3','C0GEa3OBNAH4?g*X!NhCsWn9DDbBFsIl,K0&
%Vs_p0rQ&/I^@c_]D+0#Oamd3h^B88^<"'.EWF9IngtCQXaIhbZ,ub,._d\s4.^*n7-=P5q>_X%*Qq]ar].LUk#0,+W`uO)`Kq6rA
%1b?^VZRB=&Y_dY12Ck%5iUou:=XMmFD$p0]^B86R<t=_)6?EKMQ]*rVUT5g+biK/,(bKu:9,g2JRG2qD@u]mp7335P#>ZW$H,pqY
%]RY+JCG`FLs0q+U\Xj2d7?>EW`!dOU,"#1A`s%,WBKi'aYSQ\aU3k3Ag`:f*$lPuh0-6UZ)PJkrNr[j5/(/>,"$Z1e4f[la]%O%m
%[b&6o/W7j@JDJu);EK*Mf54U.<CG#Rn#Zj:)H0Z/,X<3uRG"^ce%kFsfmr8aIcP<1@HD=t3>:Ebl<^UP-ReWgan>^P9aP<H\o[S<
%GmCorl0eGukZW<>jUY<.:"@R$anjX4E*7f"aDmY5;%GBQarMIhHQ)e[Q.$SAAZfTu?!1IM1<1kDQ3TG@YN9M%c:bac#KmjgoH31m
%;OD2@o808iO4b/`>4k>261e!gAn\!9F\+%f6uO.-All6Q'MBJ$&T?l.d/B6Y&illcUoeHB01RT`QJe;"L2TIcpW#:-T?_fJ5kf\N
%/2uC[T8rj#c$ZYMYpjS6S8Eo!j0Dd'`"Is*IIT/fHSa9P9"*G\"<8mkN-eU;DE@hlouuRh8XO\EHD%kbXrG<`fMuMH:9mRj[GQoF
%^pYuf8`B3<b81DchVZ[sf_8tC>Bb<6D<nqRQe>`j[hdRl;B1JjXLf`(>q",NHG#pS%_k<b.'3YXn5o<^m8X4H'meHqEh"J&ITTE/
%X$k^tKP&!a5,TfLVK$@Vfc6o%A4OVlmt<[&`#s#nAoONUMt%_Cg65Si!ail3&:oRG,?cM\P2InqM*ZIR)Cr]a0o!gOJP*lXk8s#G
%\?p.$SsdhTB_;0Q_EC`VlXj5Wfj$tYD;Mgu&9DIs3'T6P)pOqo/)1Ge1DSe8GlGTed<*4HC!7-+'+o;;qbKsRc>f8',:On)ItW0T
%ga447'+Zi+rVC/sglUYFDEml)36j-k7<u3n#gl;U1O3?(VW]&gaPiR@a2:UU-JCV",ZXF'3f/4P*;^^6),Q,ZNu]N'q]YB*\N94p
%DF'a#//7("pi&*GqcE-1<X'79),LCtLLtM#\at&G"u);T!%XI;eYCfl+U1M<lm5">6&D6%R%TrXUgd0D&;0dek)+>Z3=BiAqV-Q*
%7&L@#7rsJl.<4ZTTkC'E&3)mZ_jJ]>`d>j)n-T-a9f*Jf^br'aKk=1''k`R17'k>QOO"PQC/Is0Y@?\=V'`.,;Fb\%NV[K'3sQ"!
%#qpm'3qP<r;9I<Xe<q?bJ4^kfg`K"n#3aD^*oR>\b<tJY\\M[qg8G\2k65!c[qOl6d\]#5$ak@V^Btup<:jmt?!C!+WdB_pR)5,h
%%!UorFG^`KY&(1ahtHTUEhGGi_=E.$'q.P<ltD8;O#l#1W?68ka3%Cq#V9&52BO-B>MiU?#l"2jBE+G%/V,kp[;H0NPbpUbS];^-
%_T/*YS&$%3:i^jY_*dhrYXq;$_f!P2XqrK&ia,R9@9<&fk<s78PR)mOd93R\q(fW5FJ.!:V\tF#\=u%L\IoZrk'C0(*"-QBpU18R
%W6=i>lE["fC`!+;9:05oTSa436-71/^l+j?NAsSf%8cq)C^uLf?WD;jq+FNk,oh_2AXmk<1X\HcAd-tg@=K9<TMt0LD&'/ZaT>=k
%/kI`9)&WUu3M_Ck]1k,aM%gfOk6]$)n#t)dgg]DU/W3u[B_b(j/uQ_*+G$>V#gJZ3hG6a&,<G$f48OY77R<V)Sj&!.'/_[j1*7C5
%7qAI?&4/o[2?S7>-(Q;tA5fK+9C)B^mK6OF1p4DRGcdCG"31FgrO`BRl8025PADQOO:<Za&mg7[l*.hD8E7;3q&gnArKXg%,V%Q\
%<XWfd#/WmCmY$FY)D]Po";ofa=H<7195$'G')&]pdubZ,rOkT0iuSU8Hpf_a1IH,b:nf+aVQIqWe"h%g*-4@M$*e!4kf+s4&:$bd
%*+]geJR.)6T+MF+MN70"!9po;(t#,V2TWSr2YnO>U1\QiqVVY]<QF9r%E!(G75d)H,O!`-q^"2>PcV7(Ui-:gke5ID`LrMH6oap]
%JaOdH9d=b;+1F@KclNT-.Xj8JS_,7LF%?a1"E->I'_)KM;6gckqn<3b:j56YS4s3]U36k)O??e^Wh6QU3@]"4n0HJ#FWU6^I4@)M
%d;H3^QQAuR]*5CI,*PYc2n2Kr8J&%>*,;;pG&HRAg;SF,BO'&1h!E%r:CP@dcP\&s<6#Q=dTjIqT!1.oL@V1HZ:(JB2,6Jo)r8P?
%+5!hOh-n^-B8@dT'f7$/-umn6;-KbD*--rijT_mHK_fp13Z3*2Id":;r(r8WG/5tV)Bg^1^3O*!Xq65Q,X^WQfp'q<Q#3a9*Y/r"
%3&<a(OYb(K$X=Us;p*GhkU323X">YUCCL[%O8Et,"'hkb)RY5>#VpLZFriH6ob(5`YF/V+ISB3.N%,$m]+VM./VSO:<B7*..QXs3
%PhF$Q.G8K8cmA1+*4qi_`'USZSVD$-;T8dWWdW9GM=Ip<pGA#0&m,p'.Z;?lp990VB$(-SP=G51U;QU@MJX5%;u8.>C8f7pj5>])
%foKN6$(XQbA.ojYqA6=A;8Xi`bKi^o@*f0SouJuta?nu^Qs`CH,-Y(mYlf<<bVW><D4mDR:@cbjjpYd`$Q'SG]Q0.!A'u?[HZiX)
%Y'qbj/EILt_"HY)`b=dL]^t.Uo'Vd$o[]gVS0$eD?8`L;dl@2tZ;,@1rNA<<23I\dGOGtD6BRb?p1@.CCt*9B"rdFqEu4-'Ohrs<
%fI=PeIL#Kr25ZVRq4S\]B^S">ae69$3:0Cr??/>Oju"c%5>fXPE_^,nP@HdNBOf1OrKigKH8*US/<=X0;]&u@+M3drJr^F0U'3)$
%D50)nXaU^?#W0ec@9ecCS=M63&5h&5)n_ecK-F_J459>l@miKu$Q5r[$D2>T:pb1"(Qa!#X#84P#K5DJ3Ph$to>?)K7WuG6bq3Vh
%`^0o]X1:6Lo6;@T7f;(5Ao"@r8Fe9)JTk*J+@NtV:A04,1jGfRd)M9'VGYES[YF^=kfiZ[TP(5S:B,.bLE0HJ>B:!(r@W1)\=+A3
%3">Rb5,^!0WKT?=+hs'H&;bKB(Q2]4C?.gkOCcC!3PGJ[4'SHt%]O?P1n\L'[SHiA[LYB67'`pHB]I#t#CWY`3K!EAQZS`C")m70
%$"?CIK.7e(o6pJ<MEXHSF'd55OG-`r3@YQ:3VH,r]5/nf/G3#4f`(2(`.b_427F^OOblg7=*&F"kOC`rRL*%ucE3e5.A9u5Gf)k6
%'/Dief?b\!#Y7Ks/jMW+A0@(cF<i;$]m!Qd>.4RTdDIM[Nk.qIj!^B0<?V6^7n;:-[dp]'@kXfp\A(5p,2I70WVL,q"sl;;\]j,:
%#X.V)ONm(PJe+2UNa7JClHsC]c4aJZmh_=`;7Foeor5UY,30PFcs#9R52c#_:*>Vm'edqZ'fUYMnH8/cE9)mKL>T*.n1g6QlEG4e
%36L.g<pcdog-(WaMSM'/ki71",`d?+cj#bq2u62gE8;A$]6us(ab[_brb=\P2?I@Q6F@n%bB*'bg"Jh`YP@2^1]/gF=ZEH6lCOao
%9rA*1:D\0F__m2%gj--9D0qh[lW@J]:!eX)(*&NQOs9u4's^43H0LI`D5^YErulh&f!>oQf=<(UEX>;]]lTre]#8tQ&rg!_-Z$HD
%EN4F<$kSs@hZuR,k+=Kl>U![n2_O&_6s%VnLPX*q,uY/@1c-""$:,t_-ACFk.l5QY:N].sC+ne-KY%`a?bV:NO-+nCFB5/#h&JF#
%[tulS=SD9)"p+K`r#U;1TbU!:(`rp`=JZW]gJh2\$9)poX@)Q,oH&TP]5^k'UtoUhU@8q2^ljCL;&,:rgC).Ghp_<#SmK.o>P.k?
%UBnVF(%<_cTq*]W!Pb16dd!qcHZM:D.*'n^:mW&?qcOM9lqM_li<f+M(c%C4)B3On?WB(\k9Ys_9UuZO$&L*`QPCN$UFFHRD_9)J
%%8h!Q@Np^e0_`)/FRddg_1b]_'Fl.6<.j4_+'DNnPVAbnnn9_(5CSLZ8qmt]f)U*/RkVd)aUH!E>(>;;fDu45P9(a^gDKJRD->c%
%Z9A-)J,I?:ri<e\rl9NbgV<Vi9g(nW8L-lo8_T8)Y.EUGPI(e$FcfP\@nGDBPc3W+8_OZ5\7EB::&Hb,BQ>T5?jB-rbO:^%.?jDe
%lDT?n=s]%'eg,+iQ8acsc!$1P`Y.id9L2$-F%jjOKEJ\Zk7:)mGZ)Dc:%h!@rZ_;=,b7[;&i[k5J%$+KSs44=2+%0CFnEq(_t#bJ
%qdF(]TQamh_FqYU>P^X@4;uMQ(<P?"A_)dm-l&.e1\*aD7unb-=e0^D1A2qdkBd'a(WuLDC3m*cs)=-;G*(B'4!G0Jr-$Qq,0==g
%3B5aC8]"hsljmY(+W2VZ"abR!cEW-T/Y9m%Xs=T"Iq^m476[Rp;QF'IQVVSQikYeF@P]KZl/@t;;ROTX?r$9[noaFc<N[N8dd7Y#
%piW'i2%a2&BqOp>Ep1;@Bsjp'9uj[bp<,-okfe_fagfLP&e-V+f*=Yi#nh/2Sn^%!3R1NQ`&S9`l2g!EP)Plr;dqhC1Ttb#q*l-N
%g4:ZWR^jseYl\L=-7@HR943u>JTB["5E$_dJ_B8#+!:0ag8)Dp[$fUQ6Jtelp(DBg#h8OJ<+94Lrkp(`/2A;1/Qpj,_MV=bA4NZ]
%I\S3G?XMKLMVi#?b)^JK-frrmMt2HO?f*sSS.bf"YT\MKO?[R&+#`0j)tJanq72HHJ,-cO8b_`Cl/2Mnd/Wdsh8=_epoj_B4oF]>
%i=CG:=$LNG+1C<[Cs?+J2tV':ID,IEF2+Z'7?U*"0h!,^4F@I+Z\1cePeMCUR*ND04_"Cg3%>([f7W5mo/o/=V3o*jp*Fa`/)EuE
%HkQ5eas."'(;gtdXBu^D77"Gb1X_`GcQ9O!HmJE,UodX+5oIpP[iQr<M_QK3/ujFE!Zk/hdOScs,nc&'+Coo&a^pG!`.tOg]dHN]
%$5+:`gUKc[;X2"+)g>f1,m/SuS!3#&;(6$JOB'm&d?_;?NJj%C[!p-@bJsbQT=/`:8#PDMZP*YS]42V&Z>j;.(.VS&#o=]1H4&NV
%!9(ocNe[HbCZ>Wk&5r5lR%jG`2D00\GW\bE(Iu#?&pc9PI3:nj\*1_l;ek=?p<dr3PL#*;Ijuctk=fY=As7Q:%;?D/EO2jr'@Xk`
%<:q3@-<6&<eF:YcJnV^cIZDA#D&?kq'7!@B$&1B`8q5[ZA51"o=5*\GVX&#M;,S:pm+P&ODT(0;05*/!d1Wa4=>R$H6kASe=\dF:
%bX'\l_<<1LE3]`"`Pb?Q5;7a04OFDQFb)#,^]SU7Qr^QaY`WK@?[<M&JjV/+RN2"@`1f$RekaQ+SaK%P9Ltl9BLKuIFfQAdAmH7:
%$K#GflAoj?-HDQ8RZj(C@Jh@:Ud#:/*sUd:"7h3Jq87a\@6jgShN@dk1k-@2GJ535$rqT)2>uoH:c8d[F>7]&DF'EM%tV:NN:+VK
%RARA[Y:f+hEBS<c3;`(^+89ig:N-&OX3YVY<p%=[o$*"!Z0"6/q+DLl"LtT^orLYO1Afh4=0\QNKqg=nO+0uMoIsRTCZ'cMl[#"5
%iXd>SF0CIm8@[ssfaG<SNo^?`(?'oHNRcu@O')sT;[oM/&1K9YCRb%_/!kAm8V18Q*n2iq1ZH,e3O=c^\GF[co.<-W5A3K,i"O%N
%R"j&oQY7#@lM;X;'Mc?A6]d7MU'\f<H['9-i_3)+c]+TZ1Z@eKXQr3b.739^:[f+6iY:l4?AU7Zk*Fpann[S4[rLb/L\6]`ChT]#
%9cT,(;F4SU&[<d>160:5910AchTKBgK/,Y]TLcQdFe"VO0cV*q#F)I;E-5$fqWKA2Ef;/JVM-qSaFPEO3Js\hGsit];Z^`:rUUmE
%Vd04Y?fq-B//>b+7A'-1+Xd)&bB4k]Bi/mVWbW8?&q:$iP!h3I5,R0"lQn'qI\]k$iXs6_^TJ8'4&N^U)\;mg@=\;RSrIq`>Vb4r
%@+?;=M#)<X)h1?_,-8p&0$_Im[JAcHFPjEEaBtt=ro.me?E\tW3<u9t.[Re0&1)g@iD8NRN1D5jitYd]8t!F32=d5Y6D#`Pl!:]_
%3+H#-LYPa?1if%LU*m%p`u0(p_;b@D=.9/LBA?S/&uF<[SoMXb$d+V:\`H>N3)lXOBkr0fEnO')c1uY-<BDhKG;rYebeh2AZ7"gl
%UI5/N8WTjL+3/n:`q'd$gGZGiS8hin:UtSKSoKB>='?Lui6"%>IVoA@)>Bn=S6(cUr`]o;Vn/c[eO*8.4_p2]J0^EM@?5nk<?J9U
%M_n\Y!:iR=ORQFlklHQ3R`52t?L'5(JD6[<E'*MkXZJ2XM$2'dYk?_Ugcf\36SW8D7&7-3HE<l1:@,(mlX#$E6W*sU-s4ELDq^_b
%Gu>:r]<U)ja:g'fBPO7O6VXbORd^[-f=pO"Ei/!=Le@sM#53j;O_5L6H^E3N=2B#fs4*]LXu>?*KkHdo\P)eECu!8ZK]i6F_o/V/
%f\U%3G5\%hWJP*J\@_WJn5Z+L0^4i9lS!*iWX<'YG?rGcXqhWj+,Ah7OkL%%/A%FMM<biq]q*KoIns#7os$3M8!ih',b/<I+>#)u
%"ZArUOou"Bk65Hi6<4i0mI699LRSLQ,&lW]EB-gQ6VO_1P:*di4P,9%QZFOoL)1Md5AGVSl+"fd\=>MR[Gr7Iic8Adf.J1)ZFHE[
%q<LgN_JdTN4Ci@+GS[3<UjLfN5/k\;Dt#6<\4-u#Vhe\qnG5FJCeh<(C[/<,2RLDYgHflIo5Y/#l]qH6a19-o>Q5OirVM#E5Q,Df
%TmbcS,lcs_&_C^?r.=t7+)DRSCr^=tB=:9A!JZ52Qd15E>fDjVC1jLI6n=<+"N?%I5$3-:"tqU*OVUXOh.;6ZB_eb#V+-]DROF=O
%l;F<?Ep3o=2:R,B'IF4LCob&tVI*jdKG$BUG:mAorC264*"`-.N.]qOT6?H"I$_M7AEf:<O0"JITS)g5b>E^oR1_)'&>:(t#8ns*
%]0RYs5=Qg78[:/T3V][5#uE<(1.TgP&Nk$'T8BQ+9%,1N.)d;j$O1obJJ.Qr8bgnY8k^KuXG(!k*8XHO/Efr+K\oHCEhM\JTuY!9
%&)S3uK(_QK41o4/!?t0L9=5h\N(QL'O*KtXKF.0'c#l/*!Q+bR1p]\($`=<V(2E![j6<b\#1?n:P9RX64c+DHUH(F'IZ+gc6PWab
%D&>gg_MO/?Rums.6`gQ=(?U;"[dOhJ^^B$`jNQuRD+7>B[`:KU*3WBr4,UW1`%kj(e-SGf5ZDA^)E@$,)i2V9`*.WT=s)l[fSHB7
%lt@PHa@d^brp<*.5ot#NBWgm1Hju;9D<8hK,-Z$\h"BVE"uXGD))'#,Cf[.Jb>LufWg=aF$=UBk?HAtE+:AeGi%-f$@]EgCQ0gra
%0:KR47n8gR>#Z@Rnq,ZSJ/kHkB,-2Bn!4n"kq(?@p(-=?*6QF_NU/dakDKL:-@f%"6@SN.a6ek\FubWnjMb'k'bmVO_\#>o<nt"M
%dk)MC=:TQajK$!U(,nV,qB.5eC4>@A/rgOl;M&k!-QsE4#f`^"TGrH"0_#n-P3i[qL$[0ag^\W3;Kj5)%M^uG\+'V9+%aEa*m37o
%%,hT%,i\C!*#7!,XnE'k0))<Dd-=Se]L8?E:-Wm!6NL#BL\C)?/MGE=BJkmcYYn^!48.r1UUBI-$4Xi9&G`&<jNF$M>dPY%Ik09R
%-AbQkTWQsBh=>.3qJaQYmO8sHI*dX?j%"<AB[EF`'E(:=<(o09!q!9AKWs^Y"N,1[S<6IGAZH=NAG"hIV`mLi>]4\C'E.'4i!8I]
%@PZ3sjs[)f4:g&D_q:r8%R[Yhd%E`H-J3f1ku5bCAf,ZXic%Xs+!t/Q/m<C2+JTD_3n5CBX3iE-`=&FL6!d.>I^]M9Q/R"q=3<3%
%:/iYe-n._+<j)+oj6t6Nc[Lt8G><L.a"<O4lZ/h="f]m5mZi"<pU!3uIWLsLDkaIUZDO^VUR:J&f;MjPVM/e"QdeJ&MY+^*BPQh'
%APgiBp-U#6B_JhR.9eB/U):/%7)KcdETip@V@TfFQ+;<O:?r)%J2BsOM\rN+rJ2(6LbmZb;QiR>Z,Wi_j41O*Q7\L=UMU6/2T`L@
%6[OQO9P1T\apu(2A>kZ+&1/0XUh.."GB>Ml_S+WkKt(@dX[R4Sr*Z!mDOPGXd;B27o/f#>D='/`=Xr3dfI(/nHJ-Y>(uVC?o;ehG
%dE_,#pg;+fXkg"9QQ7)m]0op%D!!0QOLuG(AmOO'YG#f=juNtP6Z"KpB^H+$V4F;uj0gs>Z6cQDnP`7C(R';-a"XppH*C=b'B,tY
%XO];nd+UmQ3m190Cfk,QFpV(hcOZf(&OgISaCssp:9@g!;t!]+L)WU#K0T`HRNJ\@9YGiqn,L_j]<5hu,j1k&i-VCe%E"R:Pii.c
%5J2=sCf?XQN/WEENEmHR9t)APNQo37*D])aBs%&/=(T.s?]WtEqXjJ[.o2:iOcbcg&Qa!7HWoYd:-8KB"eE1U4(LiBT(F@OdKTp`
%D%J/C!1@X=/MC<2W&SIC#oS:pD)^!gK'q?#64Q),<+?.oG7i\Iihq![c3l3InS's85L_2IfX!b4h(ks_=Wbk"B$q+%.7[Al6[9&t
%nhs2E[@\'2q`HZErbe.p5(*2Orps@nn$UOKpqGDeV=tEh.",Yf>4F=9^otsP$U,Gi0#p*@Z7H7QS!,!%pqA0`V72FUbO?m#dRog6
%:q@X`)!5c:B(1>u+^Z+R"?r<A"Q)'jU%H'U$)Oha9Y`=*9J\d_=/k:tC=:fH`[9s?VR]9S[:aHiR'1;Cdu(ojoRnjb)kTrQhu&/!
%mi.o0lh8a8[Gl*^7%o,-VC3><Xt`Q2A_.pp_IC8:9J-%NKJ&6_.mA.M"b3S(9"f;T9N6%tG;`@@-/I6J[GpKP[S9bhnU4m^8me!e
%`$at`YaXNNMHq.&[.]^:9)?29\.Wh!R]^2HG)]S?C:iW//*V@o``hoA)R<1chirg<DB#qC@Ge4JlQBFcNERk3<jS+1=4fBHl'opL
%e!<\MY&Wb2d<]BdqXE`R$si)^^8Xc_I%H:&ncJ,nmTT-LG$LKK<dYatUt97cf8;6S>aiA059%AgH>_Z)!Goa4C''T*ll*^Cf]$'R
%^G^ifnM_?(:jCkCp>OIZ(r`<8?*fo]kLqc$i!4G9164$^\q==XaKF[fdT![7D`*iSq-A%Zb&/0Bd-Z7FfjSO'1n:]C>>8bohnJVS
%7^m.s6dPK9BJ8]]Q_q+n?TI`+S@7F8f",ct"2X\jC++LA<Wde^=Bk9;O^8sX[/Q879mXK]?kZ`2Rb3oDrgV$a/#Q<$6bGlu+43]M
%55U/ap/'D@bKum6lRg#ZNW$O9p+&boQR'B;&?Oen3hK?;I;5sF)f"?6.Hd\Q#poZfENJenNmA=Y@a?=dE.7fUZ_3'1lZCY,8fKj`
%!;/fn8:*]]:+1?Wha5R9_Y)mpaCrL;U'/>YNSZLJ05u9a)u<]6*F^Zc#gjTZ+RRGF,oo4bmJR<gUTKmO7kEnu"u_t:0O?\dPi(U$
%#WuW".8hI)RnGrY4MCPajQ9[%e*G]RbS&R,&`Bf&3pHF.6VJb*r99n0C7p3Sofd"U47;>^_,jp_n)S'[2.GHj-?A^[_tqNOZF=rP
%*lLgq+h'>rdl3(WdYbDJ4PBWuM&kINIcM6^-F$I1Yk`],]3[X7pljY&S'OLn2i*Uj+nk4^qopcj2WAsI0u,j`;t.R3MEnHQ7"cWo
%G%PoE7q<TdnY<e/d+sM2!@c('Km%I$%X<.`T,&-mE1s71UP^#[;TCj^*Z9t%%f5:Go<ektrd^NOUL2/11\<f3j-^=J)]<[I-)fjV
%?J<U3R!oE!#fuq37stgmk&Lu2"%q"@.uHGbbb#.<=l;J5L$)%U7TP=lo6c1VT._Oo5<)f;OaOd4qCV/2mM[)1T`'Rs]'SW^YWXno
%X:hCZBC?H4Pu'LFB(a^nkZgJF8_6D4P!cY2K;\Fcj@CQ&dQo5MeGBE@>$pc5"EH%SO(#lVHEP8-eJj8+#;4\%fCcfJN>XBghC9<(
%DQHYIg8R*%1c3)g)u3T;nCD=_n7'T`O#,9,U@ckCS=2.=nSob;$1a.qM"7_Igr$TA,BCfFYG2,nj2S"h6Q@=Y/P@oV-50aKo\MVu
%*8?qUIl`)rZf[?a"LqqQ*np='a>DS$`o<!bcbBCooK+L+?Q7*]R_J@:#&=I(oF%q!5@p>\[GUo^&B);.Aok0<lk?X>QM;g,\'b%f
%;WK/r?["]JQ6M(!i9hG.q<K,e65l38.=)ZRTpL8Y;afB!L+N,*E:CZ8<kP^/dot!*Gcg(U:(j>,[Y]GnFome'iO>0d[W:Wa`IL1e
%38dh)K;W;iBs>s'Ar-8f>FnVRI=n-jNQK,Ip%)eA^6=lN8g2(1ie=a3;SbcKS^E6`cf)^*9);Rt-p?"W,+Y\Ai]Gg">&DUqI9KJB
%*'/rI44V^)cY1!Ne^19_eg#@g$3_?HiBueIGWpU]hD&+0,EXcf.uKqYH\NV/;07jO&N>$ab@<j5R/>U,?%Icp4]pfH!o-4AoJ%(b
%C+M!(PL5@,^='8/P*#>nd:Z,#T9AX5OpR@I)Cqe,`>7o3l9?0:j_Oh)WM-uU[!sD[adkbGpjX<`^Eu:]eZaNP67a>>\N;-*.>Dqu
%i(H[s2TZ==@S3A3YuhZU-=u^C6q]Y>Ms*7O&.P]-\Y2e,g3EMZ:rb/8WT@E-`jmh[:;.]f"?FD#GR9GI+M)dcQSR)Ri9.S5U"@]]
%c[toR)Eq*D58I>f!\#ceh\au21s@mlLaUBB<F3;glrO%d\fJk9V;3`uUu)3fddYVAI3%csCg?;lPC`\^l@*Jj5IJ)))LcFDIqkeY
%WR\\c<nB*YI>`.?;jmO7WQ^ncB`E=eUV2j7n)\q%0%)$,e9jlpKWKgD/KQSVoEg)XnBA\#H>qP[ip_d0*-a&$TS!K[PBX=&g'1CD
%r;895E[)%OW)$4uiOR^jcOsa0L,+8%M/>@]WrjP?5\#S,G6Zj#996=lAJV7paZ0)KiL(-@7LdK7b1.Vra8=lZ90,1`Rs!(>,##Om
%N>sq_lAqT-^3;:&Pn$mUrrMgt_\r5A+jM<m,0p&X09LGuInd_rJbim*)@nl,,c.+=m<kl$'O;Zh%4u*O`g3.4fsBTUrI,pbW:pP2
%c6PB3BC^MlUQ>lN5WN;'3bA:V%=C8^Bl$.2js$o;(qXD6dqEs2k,9;K-Xtt4,]EOX*`<^2!FpRk>*i?*n"RK=<+#$X6[Ptip0_*V
%6/JPU`m0=G:m^\8kJsq>G)>!C_j<f:FSJH&gu9n#n!E]%gE(88&,BXk3T?sjhbU"pqac[*XBO[T=uIrh\])MG!M.JhPaUkuFGN&'
%m"<d[51AJ9@a4^IWKksPLJ31r'aRWtNIDe)^;BWa(2:D=78n]>TD@00jb/Zl<64"F:QY!CkH&>d*9"iu7-]d!nI8e\#Oc/.][eJq
%I(IlX7?3tH8qHa/8g4.9ZP9-OlB]<U]@u?m<I"/>[nH_M-\(EF5P<.a)Lgt85P<-jqW&Ufaa;YdJ#\Vqe]:hF2-6P"%5PgO1*UBM
%N1(=54C9N\%3#gGf^8IoND>WHY+G_,#qTdt*7s_=GSUK$Im]i/'Mh;Z(Ne/GNK+qV@Jthr1U1n8:shX_O;,`mYHUlMD9UR$A2?;(
%f$LfZMca=5+0*&+NZ&B:Eo-CdK8L]g7,4>ZWqmVS2&pZ9*4,6U>a%7Fki$pULgfh3`(uI4l_$`N%6-KrKJfEPB3ICdMb"iH'43#J
%-&M(7BZD<C-!Ee)H9f.dEC2)W`(T)Y7uT27QV!&o?MtOnF[6XqZ\E'U=jR[?b<-pE-LE!k+=J(`,q;-XC7g2R6B9O.\#KWf[Fi=P
%Ys<=6Bj=0k,H&@NlPST.*KW(XP6-$VE:b$dl:@]78$kgM,r%pl0[LTq!_uP4BT#(une0&[YT^a&O%=pP>n-R'Uo+,6CYo6jJ96[%
%"Gu8$Lslp,%NH8sGbfhTBjMI)*qlTh_I=_]j4kgb6-!sJHcL*<6QEYnpCl;/A<u=21*E*Pcu0("/7k@pQ<<7Q3XS%WBJN)L<03u-
%aNF%lBKq%6>nDH4#AO`&cnoBt9/GeJiD][\`q(m,K)bdhkq#1t=8c2$&<Wh!!TK1MNYH@K(\:@5/hs&m_h^kd#9M0ojqoe<f7a4[
%CngTYZb0aCJls#`<"K(E&/g5OcOjY@K(NtH1*Z.+?%E+Z_F&U_%SK\;!lTV+(6J8`.A!&GBFN%VE\R;T5-gH9+q/Z8pi@fRQ*bWJ
%'$*"`F>,*1FObV['e5p,a)P2Rh]HE8"b,pm^aB/r0ki9)nat5TPtq\[6#0D\C9Z9sg,`o$[<hcm9AMd*h,*1-N/5*HOO?gWe-ktI
%pW=k:qsa-5@`hj\q%GbZ-HR/O)Z6mkT(C6Ib:2J^1WSl,c;469C@MI\MOB?DI+1/;E,PX=D,Il%b1>Zd1;e%a:/GnN6_U6d>7),$
%h,L?:m^@^J2`DMZ]",5AkiV#Zak>HU0KFJ!N2k_QX6akr!IV0"#e[RqT]j@,F+@W0h(7B")pZu9`_#32gC\[?j$CNQeg'D(k(Ag5
%gCN5#%7n'Yg4C#fq^+.^kd1pBi)ahcZ5-6*Ohb2UOVBrq8-eoA>EXs4YUKmgZRoH[E+6V`c"VaLp&t/"K3I3<a3=%[8M,)2h7;=>
%DT01[%XG*.;Rp]"I.0Fl:>^U^0c1%J$fL[Z\dXO1Or=Za1?*Q"cV+Um(:a)mM_p)h3Ik?8QT"duRgFYFUfZ(YD%Pe5k)lqm5)bqD
%is:2OltEUH.+nFI59&Ws<?4U)r3B6t[gKi57IXBqNEjkU7c-aJ._82a._/2doQQAI03jUPRFG_P^rs@o[CMQsq7u6j$6_\qksQ7U
%ZRWWE;26,5Km(%8Ol0OZLdWMr&+mbR4ALUGHj4$KD4OL!28^n(eMa)W/:>tpPS=R2gr$)9Q@cV8G&"KR]NV[lj1B#=Xg[h7n'Caj
%0mn]H053W1Dl,Q1rW]r`q"-/&8&r)QruUJKQgiR;i"F7JCo"5dM2GD7-PRI!@O/i(>nN.*3)Kc\[I;JK(kfQ`?s*@p;UW8?OJ4Ta
%s3eos=@W`V6ut(_<(Mr>WebDJ%=2(P!r&dG2gX=14-/l4@/Xk%YP@E4/LR>'>,1"6[8j'[UA+PhHT\P0*Ao!(>]Tri9,+E4p[D`_
%.rCNH`aQNUnFGP,NX\h[=MYaLGCt!_'M`?u4q,MZ,k6@gFVCS<EnQK4N,@mu<#b5C\5/WaD:#VjAaNk)E/^OAFrp$pf8Hd\^>a(-
%\L`tNWh]2Eh.:GA;Z<5oUc33&fH,seXcFj7&V@YA(a,D^,5aCeFeQS`'a!C$jTf/V8B\nc#fgpP>W<]5qe)=\)U)1j6sJ`(%<OS-
%)oSId<B65U39?2:)o@J4lWF1gGJ7.$)WQ$SrC\n!nCn5.J2`sn7aXq>UViS^IM[J-k3`(a@.1+)b0!!o]M9T4`'m'2/W[kjAsnM^
%SX!]FMD_[_*$3-b\npF))*AAZW]Hk+Ekr7>a-m?%Upd9SHj5lP)o;b_`u6p[?E6,Jnb_qT'q#m5D1oppYYA#jkU*Q3FHbKE$GZ0=
%h=:K1_B\;[Z!2Sic&]4rAie(]*+CVMKV:l*m`hN1ns)OXoV"($S;I)t[.Je+$j+,R$.="-lp*.5'V,=rF\!#Uf6/+O[\)Emn_k<S
%X6r+,?cW.eUA9\]Q0L%)mF*)PpF2/pn'h7tXb==?8DRd_S9?>E-?1W,0]Z:-CqR*rMr<SS[Xim\b$/KFO_mDFio9N31Ujc\"sD01
%Z&T"_eCTJT,6*H2cL!'T(/jO#qeYo;<HT;=YHU@='OK-Fd9+u>#*i&)PKmVZh4aI&XTroN%mCqh2"%(eC&.ku&(S2=s1^ZC7uO\a
%NLiO3/b/mh!`^5uB$oN<3cc';*4X-9Y"RNaomE:)=[%`40Qg;W"4?8@?jC,^aPgQ,PsFW%H[G/;cf/3IIHo^KDRXpeU\k%gi[Y'`
%n/FnLa5JToUZ`J]j]Zqbd-l&^<hke[K5^HB`;7ed9EZF"I8Q[b'[_m'=<AZ#MUuf>`W`nWa^TR3OK(Sn`4C?[Og)qZeI>((jg"ur
%E:?R4;g$S=A/L]gD%N'$*?6/]@J&h[j*cA")#Ke8$5":@T+APFo?3*0UlV;W*5',+glfgtbL@7dKZdF(Z1jk;WL?#pm&_2hl8l<)
%ZmQRPKHEZp`%B@*k>jZtP.c4kLLY!qfm0ZCV<-Cfeu7d*<tE0hqGlK26Y@R#Rgm[,&0GD81CtR^Lbb-<!V(8?'.,7HX4\=&*P(+M
%JQVqY4=.Yd&u:k(o4Fbc+*p:F!asr\ng#q78dYLl/^h[,!mT7>+`qa[p)Su'GNe716r,$p`)l@#Qh:(Bl&$Z,5$cUt_l$/-!5>2N
%guM-HGl_l]NP)k_;+I3$*9e]i:lZ7$)Wd0?iF-e'pD'=d#)Jej*&%.)3)j&SbODaG(-L%sp5r\t?oHtb"t'd^AL0?nAqD#6"]$HP
%WDcQ(*F"bZO%jcha!ucFl!9[JK&'$dTjSWuUh$09&5H'EgpAZ\qCEn7Bf1+sNnhZ))(i3fCQL]KKE2gm!Zji&o[;au`?<0lWV3a#
%qiCJ7fALM%kB+i!J>jiO$gG8KlnJW<0;$rrnc`im_kYPlX]Wp6[YZI?@Bt"r(AN@W6A!L_B,8ph=3m]5O1BQ['qR`kXGoORJCb<O
%EeNP--GC1b&tAAi([]"p:RlE$)I1:8NjaMZnN;5"H#n'gW9&JOXt,ZapiK),=a`fGb&T]Y<Yk1]Zl_J;&f:&*]Ke+UN+Yp&,aLJd
%7(sRLP8SS=nke.o5C;dXB-d)DUso;YOO]\=oHO&DS+=9EBFL'H`tuClZ?k%sB>sEai]Pm#HBq&RSlO@%_Sn>-;Q&e,W3uLRcVXfk
%/_iion4%7?LLT<iS#t4qi'*q1Y(:'gXf@;QMGh8Sbu;"RY.+8#WB;(<#0*gM&CJ8N_*"\G'=&+DUWDX-s0Z1"-!'UkNm@8q8;BOD
%J=FnniP<KO(9P"OR[P71le\SB%H0FrkLg%:./coApGJA6Q;#3J/@OJTAhoa@pXr4[e[HBTf(Cr%l/FYXqI&+b.Ik$D+<?hGbir>J
%W4q#5N$q'LAOXi3-8WA$Vr,d+T,hi"r9s'OIX-0[aQ4ROWdbllS=L)ugBUuQ_Zg>BJ?=qUQWBXR3q=j!EXe^9T,G.+cS[RF)agS/
%@?W2a<3O:cpg4M0CCNS?hPpLBG.Uh_%da#`rfF#U2"lL6EV-PN^4#pho@fr>Q/&%K+ci/*3#^X,-_T']-_uq#WnLu+?%isH$\lJe
%MgG]-1N9]<8>*Oc;eXCO+J.7/8[q2e3]ogGl+eDV2r:tuh*QOs3-]p@62F<54&#c_L`8J7VV)7Qa9+%g6)l]E^;=#2>;*T%8N*1`
%-=b%u%Y8=F6pkQ3<9Inicmhs9LD_Xj!GH2%/,+VGIRI0G3Y5VJ7qc\#9u^#5MLjY!*[Ne(=5bE1$Q_Bk#YMUN6-L44*p>)u'78$b
%J4HLAr@I8en8+Nc,+U/B-r-7jL-3YIV;sIa*`QTA7OWKgj(;hjNXkbclW(?L4jO&g!k_nQ.$T'P,&;.U9i,qq;,D@u<A]BG%^UsL
%^;V^6&_LP0aIGtjJRmSGRRL[#EsP$M2Ie>i"C0ig*@AQT`QA*;5[;N4+d93+J31DV;Yl>.=$rS@4NV3#kqf6/PG>.<BT'I-'guR@
%O+P%p+q!=(9J%ab/0R\KS*O_#o=_0a(hKP[10+*(gH>01[LW3(=EBu;7?^RCc.+q"R^5tOT0K[#>9V9lF^uEf!*b4K<GbR-`G+\6
%A,Wajq-MTkN&l.;<5c?X]jn1V1_M&9T8&#sH50(f*]XWj=GP@<L^M!p!..]dR79BUf%j2')q&D>)YrT!s/bn,f5qkf=h5["aS4QH
%O`Xa/)2tE<P?@)W:'qX=7CXVOJK't=@[SC*S(>$c?pc`''7GY/C6fG[<&Ee?EjOr7K-AV56SG+@>)gKe!WoJ:<O-uhLq_D\D'I19
%i.D07lsm8<nEX#9I?,YjiTc`uKLTlLN%+H#-*,KV:_K?0?I9UCAXb.ll`c3[g<6l&BT&J@+l#'@*F(-<r^"&O0bOWLU*1shd(K"1
%H5u^^V2))aCOGmck6YKYSEQ,8`n*?%gb]:,Aq[ngEW.Xo8:@>47m+M:9QN#*2MY4:IAY=!nN>%]?Zgk2i[12=G54_TFF,!]ZMQ`f
%s2f\l6Kqdi6GKui$^7g>>Bkh-b?[(lDtDS,S4Vi%ETE\9aiIoN$RV@!'!$7.%a`WQXs3@uK<&gN3;%gk4?d>i%I2<HKXaS'Vtn41
%\#?Z5f:gd^Zc#WOO>tVGNV04Y!B7tb^,=UU^<CDal_!h^oVtXg^!b[haYC\O-\smshB[rjqqiS)*q+$1jlU:RgOirq&gE@Ln$p%^
%B%d:FEAlYeA1sqBM*?`kOD>frKKRF&&@jA0hiS+M,3MmAPmp.9A3OiQ8Wj(?mnjm3U1NYc2VA)m[FV\`<UY@>kqkpgdJiZ.[s(eK
%EB1*Gko_TG4iAYLm-3TLqZ\B!/Mp>c=l[Up>,qSXGk]^'ld.t_#*Kt',><A"Q"@J7kD:Sr:i?F">5tVs^XmQGk%)0oPu_A!-A<'6
%d6_"p&B7P)*4N\E9Wr[L2LoKQ",sVC_=)[!7#-YW!#WC4"eIS"QKP*k^T%R\kNA9p1,mk%eu`7Wn+gC>cPfJ(X8*IgnN`p(df0;[
%^(.a8Yg[i'[ZP';&<N<g2TS1+qBe@;(]8p8K0/utLN"3$SD[$s7C;dqLOK7UU4^hG`\9cT.Lu:U,dnK-66IBeCqW/0EU!7<HnW'^
%UdnM!Kd5%s?#"?V2fc=NOUAio8>p!bp/$1;B6e29</!s!ZUN0*Ll9&"dqYW^.'%+;-4nlF+rDH,-Pn!n+k$u^Hj9#oD6<3JbMiC)
%hleD6+N+F'-aI.P'&4_iMB;CXS4mXX3?muVBAc0t0h@*g-9H#mVt%Gk4jkd-/^D&$H3FmCXR&6m=l5gl(<>mZnE_!A`t5Q[^*Ld1
%=\r(fM^%Yb$D)p"Z^PKF!UEPrNc6CM8U8g4%d,)BG"B2m-Q&SN)M7UkC#t."[YSup@+HWEA\?NdH6O'TB72)L6!KEu3u39GRLi5l
%8B2p5b88'DOc5"cil(\.11gZZXK?qU,U*ph[&X%A*J&#XX9!BdiK4DB3#*<3:km+YbXaL4?%'BC1O5WCcpB8L]Z!hYH=`MLh>)oW
%R1st]46,Q2R0?NoEmDJ5<@O>=D9QjG\OhjD2-%3&kP0!Nc55_YEE>P@nbd\<3J5.)G./Y(i>dqe;;t#q5Ui*;N]7:IO+Cm[#baWW
%qC8KYJuS6aZ)p>2AM-t'@1qGA&7)8?>h:csj#rTmIB#&A;ICinJ@WqUYO[<,b25J(5j<fRKkNFiLEIX6j*R2C(+s^^LY'uCV&3V3
%%GO$N6Xd7=f\dp?jGmr)8='VnNF3.4SRkMH<J(AbS.&CV@g$rW3,ilIY6L.VqIgEY[oYGKefl%Q)OM()5N3,YWsVa`cA5DW%H3M#
%lWF1gGJ7("*okdriK=g0r'jlJ\@P6@*0W>GJ[=Vg7;a1^=puM>\6ercFuQpG'iLOSTo8ojf!sFY/63#S_-f>i)!&#SN]ZO-G]dXL
%SofcVOZA[-[[V*tODa9gaQ#RRi(sO_`=:lQN(3lA+uSk(#2s=X-'Bl)AX(>iG>S4u0OJ>_l=Au&-r^^A+jAaG<tKM)3:[`O=IBMI
%K6VKkAuA+HinM8+R)c^Lm8^uQ@@`lkCrg\`.\bDacU\g5;b'P&B^L3^Eu8C4q?%_BT-OW!]E.!i^hOi#LE.n?ncU5s$s;0H97u;6
%Q7TYt,B,H!TSU\Lq:#O?&'`JY8K=SNq@j8*5TA4jH$95^eY9\8!K"7j`<@se>k#Q<:RhE0P8CI72n;55M-Ko)3rETM&/3WW-R:as
%%Tg`qI@W#:o$]*K@hCoH[4'n0.tXr/M^_J8`SCb[R^I/=&!*Ssp(?]FHc3Lj?7&O0iCh8.pDDo1"V(;V\kI.i:$C&Xi`]"qT360l
%a[,"UJpUTbg9Q@''C-XJgPfQmSgFB>`Goqt0TZJip/aY@X:#*E$(m]Ufhd^ciu[@:85BqrD`"LkdrfEHo7o:-M@S=?RilR7.FV-(
%g9"4U3UVdP@,MV/-h5KT=T'kl&1,k=OTusbJJnS-Eu-g4,sm"<:)r/R_PLl4$si&bn6poIW"_-)MVWR3s7[I;kHDEc;KV?t%8'uI
%c@QS`&KBU[pIKPT:&[H;I1C!4hr>kVj,/bFn+)UdkA*$`T>$>P%SmN(qq:Mk]-t2WR>_Ad2BfAgfG#\ij%N/D'lOr[joXf23Q2&:
%$/T\nJ-PPO@)aWVc6"A9fomCU>29=hG#<FUCs\"&@B'f'odmaP7_9+=AYs[UU!k]!FVj)OeCH:pZJ]XJ$uWNI8OK>hJN2<8pW<#L
%e_T-i,A@/.^ce;H"kq=o^;+ENH>X$^k[Y7+4Jp*Z>R4(,&Kr=f(HJU#\\nl'\]5M0,QYS$S>B?-aZ#FcW=FoH/>c)h7q?VepY%*(
%lWJM9-EV#cNd6`iogSfRq$O?HBHs0@*Ut!qmdGB4#P]n0n3pM^-nM4q+WRXto.\p!i+`ECOCnk@'J82uEptBL2Y8edB*L1+\-0oN
%<49XU3$dL&59gkcW;mhjr[1!I@UU00rka'l`o&nap)5onT9Y]K8WFNm2F.Cq\NcCgP]C48%O+DINrK@EV0%JN/]6NQM))Fm!CH'b
%YuWWKq6gY@;FG+W'Z%.foNN+X^C6@c(m5Oh6<"OQ6am5N%3g*fC12jWGbAS^41[i2nu0lj+3P6'---fl>m9_SI@:i;OfNC(]d1Wk
%&<Nk5g-SVtF@te'`d:MR"X.Um5mU9r4RFiYB'8u[@"gJ%a.9>1&=4O[Qonf<kH[OJYRuOM!aiLL^cF&J)dM'f[FsW\&l\qXT/uJp
%B5+6n8[M&ic7Q/04k%V\":M\>F<m9&A`LZb??irk,Z,Y;/8SG<L^eugE;)8R]k*orgXD>2YYGPBM!*h?VKjD_^qnSb9e`0-\tB_l
%(]g',r":Ap+fP/[>cDO.P0h&k^9SkXT1`Z[AQM2=:)ol0<PCpXTb,,Z`;R1]Ku;AA-1G\g[NSdJ<RC+&)-._MZ\%q/^-9WdP^n;h
%-L6%]`^#1;EgJ(*gBJI\AE6*9ONM&-V8SH<\14htj`F?%f8\2eAmH_q)Nj>uP$A1)L*8`S+q?8LRu?SDLXZU/C0_gZkess7m<mJ-
%@j5CjHa7)<>nW?9jK^;BaDMRDk.5AA'[C!s!T`%9@h0,e'RV^^m><>-W0b!8Eut^2hUH7%T>g'9M%\MINe_-2FuRKpCF`8RB0,%]
%aU>rL#;*hI:CBq_]"RG-EESf.drDP\Ou%DKn\o-\!fK\,`^%Ip;4A=RK6L&LB`>l.[B!RZ]"te.[0,l;0."9%4@;jbM=;^&;<]j-
%Ge8+7!4@3Omu-M<G^]+A?XJI-:\]fedo&U7[3V!(Q8DE"/UX1Q%b99)4Q$n3UF&C9S7C-Aj:,0k-HX2S_d_aWDA%oh!.=Ub,j,.2
%nUg&c&=Adh"sPqd1O8%2Z5$scFL1K6(DakbIH[V0^*K3PpA1o57eDG7;VhPPLTP:I.brIiZ):8_Bq*F*i3l's]')Vlcu7Y.#,U):
%W!(TfBtJ&J1u2`@R@SN]M$;VA4ntgim1V]A*FS!B8RIk[P][@39g9$N[;dT<lrVck*ib*+$IJVtX%"nI,11f!M,MheMg?Xa1:To8
%>1`5EEac)ng1omjYMUrH\fNdu8([HhN1&55+cO#33(-g!15B[]lKB]&B@Z[N>^q4])X3c^\)P=k]QBR3Q`(pE>58c9o>5jj46rXj
%(&RYYJ*5'%]Jn</Y),"Jq@6$^-*q2oc/rnh23!B@L*njI<0)E#pPL5oUp1J(dfQi3q.&huUn!/!(2_,l9o\\1>kC*(kIm9"p6>qo
%CIQsB,H6g'0_uk=4"oAH91Ul[2&=m`h>7c\COH)?$"K[E#3b%sYqt7hhj:[O$`"&qOuZ7QRBrsa.43j,]5gRN/"@VoO73^)k8M&J
%BBNJU^%ho>&t?>G,@Ap9a8Bn(9sVYS3_SNFNp1u,'47)qm!DZo*uLK3&DZ_+e;!PSqK@$(`ch!(,dIOBk=HkUaNi=IjK9f^I*(#C
%(8`396N*/dgYP](rjn'R\GM2g@irg0ICL6,mj5>8cB4@#>15R0<<!kXgY5?@9mM3GDVSa36NVVEE0C"/YLkJ4>(`SG]#qTZgg*MG
%VB[G?qc[f;7n90cME@XAs'FJ$D\Da*?OklY,r>3dmRZXCO!_CN(0mrZioO7i8F13<j0hckWD,FqJ[0YuLJE1tk,'l[);690Ye=T8
%8jc<5d1J*<Mf(Q\,@at(/au4Fqfc]@HBY9ds)MLbGV$#O*h-;GCV(Orn&4%(OsZ<UTIM!IpeKW3DBC-2GETW$DKq/h6/o'&D338b
%O]%>%[:5:1d$E`\3GWn)$?s+OB?&\UH%kJ%4_qac7es5WFM"$rLO8E.nk(Qd[hdC;h,Q*OOd/j#fuI<O&n9^$I!4I`_A9iG=#-#M
%S&`P'IsHb!?.]PQ8)s#E?gDkoeIV[3B1aAW7nf10Ejr$qR-9?]SW/ukN=[J/6s._-`;W!BRF9tT3SsbY=3W&40PKo&9)dA.9DhNG
%_nYn5#t(@G9(#BcF?`VHC.Y/5^^&TZr3bUgYsae5V>jdNh7pZId,-rEhYt\KN80[-U%nrRmU+kmm;H_]rcL`Rlg#LM$?>5BV6b8I
%V#ShU/t(JGN*)>t\SrgklJ.Zg;#&'m;>[E<IIl6=q_*`N&5Bn65;D:aRK1(R%F.]0,J<_f&gN7j6Z`Q+P*^u*c^0\:\e3:7`>!1c
%;=AJ@c#_q4^DoX:6L9X.;_`P4GMc@a_X!5H+?-33H#KP6q?lCSS$T@Y9\hE+>:N4ME',lS-q\]nH#UFpQNMGIY1K:9b1CV,:%]aF
%mRRY&TkJlM%L/,D?K<*&s**JjGk9j<q_'ID,M#U^7pG]uD@Lt@=n4H4N]5LLppr7-h!6rIgr\'*7osoJK+B[@>B@q7_(3`("Kg(8
%C7XBBF&/\$UW)>A1&&qVj6aT$QlF>9LGR3dIuj1OC#/<Vp(:YWUqC5U^88KKkEMaZ8P#`*On%.5P"@=COjTA?r_]*\k/m/e?X=nd
%IpTru13^=/I&'gb.5057GO[>sk<7+oUm@gG#KPSKH%j]FdsL?aGMi+>IFF>L489#+WjN[)(]#'\-H.<m;3p3:(Hoe`jZAV%X5&-p
%i->,PY:u@AFF:d<h)ElFr5p7\QilB"h"Q$W2DlWf4)t)8-)>k$&ii=e/tYQ'O(&UC2\1qXs7-M,pQ,,TJPPq_4(:?[DlDKArpZE?
%p,n+Zs-MV-s3!Y*iBKR,iICifhuE,>id^joGQ\<MLe+0EV[pBn6;3bM/].BG3f[3&pij1+aV)Gl'Z2#>M$8Ers6X-iH?h('8oP^?
%]NpR-8j39r;r(uS^5/]L43gpH6`LELJ4-R("13S\RN6%MM6Y)N*]\b*4JeeoG?fQP]#(F#@OUg%W`0PqduS7rTl-C7No/lZ,TYK3
%eZ1"UfULmjP0ohHhop,]d?aWB9-8#G9f#Wg.9Z2T^SaI?P]%?r:PY@TlX=.)^=C7&a7#.gc1=<6[JmTP*;TaPW#C*e\FdM97YfCN
%D':X'4&VuK'38Rg:*uBhUi/cc_b?&nQ\h9uT(udZb/-&8f,$?7L:XVN7%/gh-W2Qj5EUCt,SuArEIRWU\,R6DIJD(U55rOA^KMF1
%B=]M(>"S`)c:RA_(:(hLr"p[`ZA;lC<j9:L*7"Y."X?*j4H;h0'.!(GLlWc(-/>7O8O<oqXodn9bP64/)DGL5#?tAK(:@.uRAp_V
%iV)k9U'#Y%([h&>EpBt^"MD4P8k"A>n:`8KL]3sRE'SplJpnGNSO<BhVg._Y8U._-]Y%'8RH#^T%DG\*P`\0%q$"$WA8!:Rf;4qc
%HAWEPmI>"i4^J1^B_10Jl56POkr[[XOAOY3V16V!?;:`j3/h)-QE1ge/QlP)+Sg:3,<N`L`2%h#nWS@Yfi7@=j]&8&q>nDCJjl9+
%Wpc/m-5D+cA:ChQ*8XKgelk=P8h4hP3R%[L%Vj4cd"m5..*]ZieX/0SapZYO2nC8kbkelX<Vma&Lbr*C]Q>@J=5V+ENX.qn\d41o
%@=_:E6QB<U>&K90r$`(RT;=Wm</l.PXW)j\!3YLO2i@EX>&LM9F]@`?rOG&7*=-o>]_"'O"Sg082'!G8<f*!M;?r8u>@-n_.[_DD
%c'bNr*nBG(ZfHEoW2e=#p]O,*0MO#pL:Fb;ImH3fd!OJL"^r;\:2")b]UY!6ObW@3i>CeP`2fg7;0a++XF8<pYC.-"n-bOY?Rc?;
%'f7nGP,2^-p1c;hGl^Mc%;ZcQ50,LeR]Ee`(E[0VB+=^%r@!*-29/IX+tq\82d)o-Kso&@>)j.ss3UTgTM1\OQ2&[ai(mXW+iZ2;
%&Po.)>)>g)8P*GZn_Th4l9R#c;Ae<SW2r&@258lQT,o>IN^t=LkVT7QJnS)2Rh/\rP@VrV0@b'$/*o@#["_NJkRDrnnAN^7qnTS6
%#Y,uS63G.SWICQU!gHN"_NCc:6oTfZd2t%0D<.@1D3hE2-dHhi-hR4G>mMTtWghX0qT<7,R+RD)&4\uId.iZs%0V7QS=pIE#or,l
%@BOc>UE'V1M5^%ZSNjJMdPB&%<5T(&+o&LuYR%Y;3!@lJ\K^qQ[9f_!bu#CD0(\oEDIQ5%W.:U3NVZ5>YVtX4VT6!?QbLrL92h`g
%Y^PpX@-$Ft6m2-4OB[)G(6j>SWpqK93Pn4J+=@`8:/`'V#sa)^-L&25)uuVm\XR'E?#$#'k8(=45I\X9c.H0V7bH)]Z2Yrtg$%_,
%<DB6']@o+8[eEKqdTuE7doH#,;p_u2:/mdd[TcOKg@k/QqNpT!ifp;h%!HCN`5Hmpo/JMj8a09qB$DZh`i-=gJor2ql6GU_'IBYM
%MQ*oF<7C,Boa@`LH&\[V.;?GbUN)J]G?k+PI6Y,>fsF38C6pJGZ(0lN;a2X,[:lS(<,5+n,l=%q4,M(V,p1+k6*!2Ks.:si)ZSd"
%f')]DaDs@Si%^YRJ#$HOMm36Q@*QT=HMF]Dbrkq&^S*mk[=#R(@f>["Vg4'Up9`N9>'o2"_KcD6'X<]Y$SaP?bOPCa^QACbp)1aK
%DAo=UAt2HaG9f\9P;mE][K3dJ2%#J?a;6&5f4k[.#tiY$C4eLo=79H_Va7]D/k5_#ddg'ho=;2@,Y%uE%=(9[]Va_cXtWaI(2+R^
%7l+UdHWg)H*F`n4cAFO/OWb_W#Cd^A^Yb-?@]d3JRbF=ZhSE&p+3&T=64N!VpgZtT,]R%<-gV?BAWB7V,=DS`/isAWn(D#:q>s\E
%9PGR5VElo<9FNA41(ea^l+&2eU?ra_%Hib%YiWs^:I=at@I\;Ra!$5B^9SfR*9uLQHA7:0+:XRr,]$]b0LO`Z3/A.0/hIVV@l0"m
%N7*d*)aA>.DA!hD3]ZVkmMeRY-qS;2&5or7gQ%F&?B_Jq2fu;W#\'H\*h5r%:/BlD1(&s0b\P"7:F*bpLU>5gf_*.@fQ;G@bFFhV
%V\VW:40>C:_hV*(9ZVG1ibB3=qI#PR'kG9W([=ENkZG4=,]$J5Si-G8P,<Y`3,liPFW?T[L8a+Y--$!;1<7X\SmfcuU5(T`+PIUG
%$n=ONFN3+S<\5h,5T0eR8=lJ&N:SUJi#:mCMF^]&lQmMhm2JJa>DnOUUg5><V>8#cS\6;M]&<Ijd'1Zs&u-7T00#kM9!B28M#&U<
%08C;I1C&qf86t^[U!iN]i,HeB,;BABV0e@bKdF0hF4TPul[!M1A;oVE\S@@#A<oqAr<OG1Pbh!R'#uMKM*'B-%k9l-U(`:t55<gm
%6NfVhL'NY'\J(3h2-XRk9k[!?*m6$j[r(dma.Os)k6]Ng-SJ+edAI^*SI`m0!=c&$,(a;3.Y/SbCf"MeN<=HlR#FEB4+B_'P,hb&
%a[O73nbN]Oo%Jg61EVg:/NcGdPJg:UE`+3LWl7L;[AZr14-sqfSoS@3%PhGT%jr\JhFf"C:mArqnWF,A:OD+i+)'c8"Z^HC#olA)
%I$0S.`Ocf;3MW8bBpEdpd-).81^A]8X2_TPEXf.66Agu&E^E.UH8$]"2%jE45oNcVB=E>G_a%MGgM(ou!]?\o"MTPPE^k8V"UrJB
%`Wgt78hG)%`?9_sD71+PO\NO-Oe'6sHbDZS<$I,.Ai_L*QY/l7A6`?IeOPU8)Wf1)X`(Qdj0JA.LU*O2%#pMjdXndQbXnVW8>miZ
%:dWr%9qsgI3h-mpKR-fm6YJ6d\X]VnGp,%PlpR`q5N8L<73]gMaGO@mT3AVTUpP,XPMrb?FV9e?&g^K*"DQq$:0f`,LjP+p-[?)0
%<)iN_3nn-8eu2e%a#e[3JCDVtY(o`PMB+m71(-Wp-3PEO[*K#4=Vof@+Y%#6U'Nb96V,PXo1:en8<*kVc/i)5TNTGe7V6Xk/dE,e
%rBlXYmS0-MRhmIrhkb*VBW1@/%&L$ugh2VMI@/5Mi<F_9DYT##.7]GMdB3La4&6TM0i@)_Gu:s`;O,qI14R@bP'&`E(-rid,mhQd
%I-_38:DY#kXElDkfJsJ1SQ4ll5-U0d:1]nm5_g7<U^WJ4llq3-B@PqI%]=j;S89G8Y!UHt]IujleG^UL@$*(T\cK3^T-]DoU64`D
%R^#Vg$V3jI%'cS`#,1DI?pgi#[-B9`H^3sUROejGB#5[L_*2QEF(1b$<;IQTo0Q(0D`tu]8OtZNR$t?]C'$q$&?C"5;$5#d9aD%G
%<J;HOIto:dV&bCaERc^<[6D9g0(9[pii5c"R(e_9E67a&YiX4mIH#7Dl:>6]eHSC[9sS25(e!:(4SE:B-$(`6KR9K7Q;h0/3t!eZ
%4nPcl70Bi7APpL,Qfu8gZ::RR,&l$Hn`l[e,dL%*'N`jk<D-"D9#=`dA=0@uQ$4+?*L+jV5hJYpZHk:RkB%g9#5Pb6P-G[G/Ql$R
%Ua)=o*)3Z"'-E6pF9k$I?]D>s^)YSLaFJS4:8<6O0*D3u]pW"t159mbhCAs(Wk\di:9IH]R2D:jQn!->_b`?u+#)\NP>]RA?-"-=
%1f5t5O?P2d)bjW]MmUC1QZ[.oeX-_:'+l<uLuU`*/XuDS419g:BI$R5p+pM$dM6+*B_6R&Mc<0c[76%tE.`I<:?0%V%/3b3gGM??
%^<mWj70Ia(%u'!9.t36Y(I2g+ALa]*NMYk+Ic,%\'9nW;^hHr6+E[>*eEs";3k7>Hj4o]i\_DITVfL/1ZWl]"Pl/sf_`3/$eM<UJ
%cfsYM-D`Ut^k(rs``u7gP)4[0PJ5:DAgP!m6V:fd=t'3^OsE?#Z_%S]6R0&d5YYdQ)A7.M\;IfBB-T"r5+G0JWkmX/dMWAJVSe0Y
%ms+?&Ld4XKo>UI$927-1kK)mjMX[2PNtETP3ZbKeNq%r$cC#mHTaT*XTjA_OI"Tm8>t2[W5]f3;HQY?M7'=mUp0VpP>"sENq2.UH
%R-;%3X0P1MLRVSl#9kjtMnIOC"\hp6,i\Y8o>-7uR0YN]f"?lf#V=Ib&%P:0TasoCH).g3LC7/Xa@n1'M;gi;?nHpC-rR$0`b)`7
%3gR&9+I^$]=NRqV<5?G&b/LeNM2;'W1B^bd;Em>p;t`qN'IP'1k&tM^rdU8/MjD_+qYU"f8-R&h`nE(t\P)A3JPq82qGNkZjnB2u
%8OI;+'FW3b^J,<RR-(7&Qo!4/fNRD'>iB'5nk*dioE%.,\5.\lAp_7N/M/b"VoF?,h/cU`cM:uukZL@gX^"g!&#$F5D1cpu^H`Yq
%ZbkZ7MHiKDd5j0Y3PA(\_dlm'7;@sTg-CNMl3\8O:#g7Q"\h1Fi28@u(1'1&FF^mM_4j=Q)/%KK?u_AcOWGIPdtKZQa<XtX.32?5
%"4\<]AC.Jd(Do;2EQSeH?5RLnnG)KAP;P?B42#BC<bck_COJTs[BB_1+jT.`OL>_:+<d^HG(OfeehjFpIb8_/^artn>p.F9UN@>$
%gp]8*-&D!='uIk7J9J8(_^!J59Iao53K6'q*V(:4p&`Ncl02WWQm#4R,XhqD971b9of0]V&-<j&h=H@M6EZ?P2a[5r_=00BFKUm_
%I0B4R6<Y`k)\S=4;9qMt_D)`rCTQ;L5X&7mfHUuD>4,>1[K'2OV"eb]*@NV3IN)oKPmQrOJf"D>&Op+@=Y<UY&NY8:9aDp_qeU7X
%#ITpIJ.Y@B8B0Ubjr*^/$=_u-gC]t]cRs,61N4mSF9#bB#=r7[#l$R#7qJ*8ec:STB%^#lc5n\VBea%ZH$cCUYrmddO;4i$f3$qj
%&<G>b\1r<@0a[lQ)@c/_I"XiG*G\X5KG+K7Sl?AjO@\]Sk6EGL"c8Z`9ltH4+?7]c.%7k]D3,?K-g8ZBrM:XJL/^:1INZbXIHUjB
%X'0Im7e[0n?==@P&5G>QfNA]-]c7ccQnFaT0de&co%>*"D.YHaO)0nu%_"JZ-t8l?i&ZP4fa8MGSbNDN:Ds`"J=[A6U,`lj(*K76
%$b-mE?=Z:=TK$p&@3t$jV\(e;.i`rRJ9V?LE"8G_1.qo,RNjUjG1ee!FNFj@=f=SNP/fD1o5-Ll1a>WI!*AdRZ]+c_<7R9GS,r.u
%YK^M:I++#?0Q?;dP!NSHcY]\6/;*p]$_q4Kku0M!^H"BkSFR+V<8fFYn(8D!-(M-r-aB24"V`M=(Es2.?O/*r(Lg"pPFrQ`c(YQa
%2MDm#^+$3]FAlS@_e5)X'cr([c,ocOr5\F\k,G]o2`fJj!_qT)OX=&a&o'2Y/[6Wk:P)=!*RUb.Z6S.h!ZU.dL"X$MHTLAci)<\/
%&UhOZ>Ja/so60XOXL9>R?_A/;UHRS"2YNJ=.N.<GT;89<L#:pd"6pYAeN8CZ1IrF#KhqK-p_[T'GZ6@,OQ@I>=5SG0fV9k3;V!V.
%dG,nSkR'?jh_W^gBk#_Q"&[`?0QHqU,_`S/!TG\1aWj`Sa=dpF$S;Y`s!?Y9l6VL&!..5s/T9J]GfN*PJ?OmWi_KaW^a2Q[QVn&I
%!3+#gfUS,W_[BR<m*2*k&l#mW'M_bt`24d>PI1LS;b>0"26S*BA[4#A&"d`5_]91qidefchRpK0dV+O@_>p\h'oX`KX"qmu_2In$
%&#00jp-eKd'P*7RUoVJJ2V/)k16SL=T-[@/J@Opc"jX%riioO;kX%3.5.(SB9R%0elnQ.m_@FM?Fn/\r4IcNkA/U(7!T"HrH!rD3
%gUPeXN7ddM<EraJ>/d-<$X3NXNae8:KhsI]B:r\"$,fUn-9RftHsbVTlE:M)D@>]%F'qZ:^hH?/$Z,t]4aG(VF@dS]K+i/ZcVA]s
%ZH]oI:!!)*=?-C5_7<uo0TJWY8g"93Jgjmn,Z0UJjB)QI,Q$N:JMkM(c,dj1`:JsL<jV2m>rJ`)_c\/1:KkVtj[+)Zke)rPit#o[
%rhCfp?e&9IiCVOj]p9dZ]fh,1N>`F&e1@52E7ZA>Gb^MU>Q:FPcg<>(XbE*Aip.'sAFie;J7!HYZC]C_46'5YSal+'ksQT#HV`]/
%Gl"WCJ-NV?;obiR-ls\'3;?ap7%LM$(Tpt4o^Ie46(4hq>ZPnk%IN%eM`,5!iO^0<##OF@q"%47HBE>V6_#[H\a7*>%/"b_+mS,]
%9@WXge-1'6@trlC,grF#pr@WXdFcPk*dnm>c`D@HC@IZ;Gg"^2+kl1?Ki>9:%+C&oOca!H6EDR1A,jsUG4IAUX+6en53/X)Wp-sL
%VQ\%Fk622LqU$'<;ki)RI>u(Eo12a'l$2/><*;-_C,4O<)bSPH">`,M&JV>^W/.,f&/((gBXX3:6AB@,St5a\hd]Wg>eC`b1PRBK
%-9Y6je*at;?>Qr(B\DL!^E^_R$"PjZ=JR@&]m)eI(,m00-u"(M08PtK3\iQR@0']JN;2]8#R%-nA'Q;6D;JH*[)C7XStA7;Nbn6k
%f(4bBe3hI`PRH69!RUsV#[riBkZQ&KfB3Za0[_jW,#JdpM,1(j]n'as`>U-T/?Tm`SZ-kqlcW6GcB"!^=).i?5%8<$o`T2;,Mu&a
%c_)"m<dR0cD.Q&d<m<\c!lBSL58-g"a9J"k@!lCtA</6PcY>9V:5eUC`a/KU6dZ)!_j%,uG[LZg^B=U"6KP,3@7$QrTIERhkqaQF
%CBH(Gje:[a_it@W8/Th_p1c6AblPqdW#I^=ecn/t.P.+8=ui*J_@'i#J+R3dX<VR!DHp'O]:3C4L-7..J7A$%jpQnB'jbSEh/9E0
%7Tsjh<fr:][n9[=S"HMZaNE'D64lS>$UCk3>/`'0U%,E`IXt]o_4+3'4Ha\4itUE89F1K&>O(q]R;G]q1tNcYW=)UVW1t#.W+jZ\
%VlE"32`E/#1\\3i^>WcJGrd.jdV/:^A85ud1N)`6#\S^*TsWgjZ%rt4np(-Y:JR'W@No4ma#&%%Qc9K232Ub^(E\<0pp#m:<oBC6
%c&,TjoTcb1,7+LPd=E",2&.*6YZ-!sW#FU1XXi3Pk"?H96-JHgFhTa],iXsIK&e3'i[3%2c#U[60oE3U"X/kQ>%NT4.a*Z3Zhe<Z
%(Wr)J]rHWW/^@aU\H.M26)(EaRDL8`o%TDEfpaQ(]Z<HER9_N9'8&h%/ms96WZm;4XKs*h"ssq[a>;#ZBWG?%CXSA@<@".X<iK82
%!+K(m9415]"O20M4;T+1>hbVLs6'j!&f:K:Tk3+YrQp9s(MH@p(%kEf1KHS3A<b6"plo945YP89^^s[8(-en.Z@13tc3X)VdgK;:
%>gI#%L0-s5p0`TGV/2=H]CUe\St!sS<S&A>/eh,9S?p?=F;A;V#&9@mX1-#_N&^?\[4k])O9E8Y=\C6%GLoYX*1ZKn!CCbbZ9>6V
%$9a;><92<Pp^i00(RF=j1q,PCR&KSn>[(:6:7Bi,)pW][MO`V:WZ70E?R^&Rn#:A3GZ1;'ktRF<MXDp9.!qfA+Y3<$@OJ!2<BCo/
%;XQ_rg/d[@kcTM-75n4/.X>(c(u/']\EKNYpYjStW^lQUZH"88e3,:kWUNd,4dD'8?7C:2DlJ.aE`_ekU-#@spNB4*UQW7S+&CHZ
%!G$:F"_9OH;Z_gOYLGglpConG\u,o+9&*>LWT^KGa?o6p&2Lnr'!ap]<!jeFYLGnTG83KuNcnDi.D;W!U?l#G'QdDBPgXn.+r$Ot
%,uO.p2,VP7.Z0s@mAc$l]r`h,/Fc_^6T'XJo)lk[>0In[/3XS/d%&'oLkhZD0;tRpN+8bR:[9m7Ee%%GV.o)pbm5c7OM"BYGSQKS
%*f0b/Wd=<C\3=A]1*FT"%IMNZ>I0tTMfr1?&09]:.@O`>U43HCf"]/K(@u/YQp^.j(;l6_D]Csh6XU4;'+M5^!3CUhF@EUMVAuF&
%CK"=X)OW6UN.3W%&6]WAXK9isA5?8A;6J&'`+>X!EU8\T@>;\6?`KThdI'8`gs%QQRhG%eQLuQi0ET,71(b'#dHQf>Z(H^W\El"g
%TgBGLAD/68fHL?a+M+".g`&6&L@mne)QHDZa,'>lDd\;?@,UFihG##<@PI#>8BSe4/(pnJp=oprm05emMp#`;hTTgQKj2iU^n3l/
%O#+knaOl,<L5D[,!"`%*q*J8AFFJa:P3)*NE?8rIj&;o,.[X[F&:m1+D]II[$(KiQ+:KMThMc`iA&(0p+/lf/`C5YSJ1>4["N:F,
%A6;&Pnu/_C1aB]I!Q#A%UsGtH3c(XX1KnUN'\&HUdq@4>6XPRlJ)NnN]qDi,5qCn8!`#;PM$<>g.uFE@JAftp5DU.RB->#l,9:A.
%^'6D_'19Qn5c1gVN?Z]mDD'+@VL@TqhgM\C7XBsp6th\#N#Hq0'0pUlS1@GX#iPq19]&*I-Eg+HiI1k*.!h+(V*Gd+P\<K\Ws)\@
%.(Jlc;Y3Q-[K%<hK#EFiR3L-a$-RWqkZMGI6i`[jCE%.ZOLuHEb@k:._-dn*<+=9M1a@,_TU\nt92^aQ#-,/_,B.YI3/8`YD^`O]
%,cM+K]Rs/K/6iof_/(E"nbf)8^]T6diIJSZC?9V-9ukgn,R-8g5?[NJZ51T3;6&]u>*.e-Fc9;<Lm\gq:5SqZJ-c8l/\%`a_2k2M
%N@sqV;677K'9)H)f3t$"An\P4:bRl6=MZLb4'XIV$q9%r,H"7Pj3]i_HmlFmp/K-X1r<r8:mQ_6TFsWrBW?hSC7t/YX</X*9fn]q
%bgd/9<]t%oFd,bZUraTUT',f0lK^C2S@I#tVt,Jb0+?uPo)ohhpS,6*L-t3W3$J6POiAeVM$?\1+\$),3B=F-N-;U7&fB:t@.(>+
%OE!1C===/hB3p"5D@RVQjhi:SpNAg)#bnt<+!2e=oSgp)#_8`!C+_!*&9U[mn[-YpRd7pq'4?DE"iOS-h.Hle>*(5[V?Req4=36a
%`i<=Bi%2k+lPca[RLsP4PN\^hB6;iu;b\:"R[^RPq&!5`0SD\K1`.@4+T]tb=Sau[`[\hc$2]>^:aEVLIR8!JL.X$,Wdu<4`<<6'
%.R[-/4nFFt[66MGQGcToEWi.[)f4,lA+b+6<EmaD#1n_W*4LuM)h\@3cQq]!+RjQWC&*jCZ0GN_jo@[YZoa9c%H).i-AXD/6hX/K
%ZL7*&V9.!4+SQo6=`LktA`p>?6LLm`;%afN4RZh>!+/_aZ37fQk>To]+:Mfl?I;<A>lLtsb;Z@-LnXq'i,+l*4jrEFMX#u0g<*=J
%%#nj()N^.V%^<&r(;jj#=!;G492plG6[juo:_qID;X&O"nNt`Y+M:iW3TZ5'F]T^/-g*4$:]^+-G_Hb?.-pdl`+Lq_RE@,l2@sY:
%^1raI0ND4qI)lg>i_nS@NHRDKfe=Wi>E4RDBK=;pg$)V6D]Tl#<G'_Q61eqtM-mmrMYQnlOI4/1g@BW;D@0?ILPkBnD[R?C3@>3C
%/ShcZc0J`1B9=Sk-b"JZ),@c+BWpq2W%Y[bXjtLJhR=59P?&KiC`lir8K9MXW?I0YjK;F2&ng;5"ST/?+U+9."@7"^+bgp[o$j$F
%k0FSe_DDDi/MPUaT3@/LW*]fZ:!Fefj>d[#0"7;h3,R]q5V.YoKYsIe+M!C$l2j$9%rMW"<jnZ"8sqV'7795@o%^U%7TrNcENX%G
%HAaS8UtVno>Ff7kP^)DQ<#DU"pCTe?YKc,KXPCg80L4;[&?7qa5q'g\H6?6"<B_<FrXQoT.?Vqq)s5lRL)9.XR?WaM',@@qeCBqM
%[aQlcD`QPrk,"&Y)V_H@[XZ8CnP\CVGY@4oP+,XAg<bn,QWW?.1bUJkV0fH^r1n`q\tsmJaW1gaN9V?CR+uWJBOS-U?g2"7pGFZS
%]rR'JmJEuE$,3C"aVF]U7Y]@g3gm@'f#hCQ53ld3mV6?3H;ca9/,ubq-<C+OrCkr%e^.iYN]NW%Rp+N$kASr#KNWLV2-g91\sfkX
%=^.(^GP*grdq=Y7n6MSZjNk![-DbqZ2O9eEbt[+Jh2R?\BlAARI+I0lhU:>ljIQiO7<c.!0"Rn"YnD*.j;?b&jk+ui9:Ot)HhuM*
%Y7ocqcAdT%aG7J!puAi5]\d!B+p7E5?=tH5[Eom*@$ckb%HF5t&24*OE<_$E>#qHZ"QH+)$<k\Q6o;mmDgF\8BR[YP&LrU8:-8n)
%I%!@g`R@7o5EAXOLgnD".&_f4_+HD:j,8?fW>7m7LWOjm#\ScM8&p%PFZk7hGRZG7?fq7gU?1l='U&\Dr\-At"4)&')YeF)g!Ahp
%g2I2SPVhTi`GO.l"iLdc&sAc#dchU2s7N)#GQ\Z0?*&#;49f4<%W%!b'G@)FBH.TfcOupaF4lf9mq$HH:o#$JG:0<u?5_Js%!-j:
%1,a4H4`aFi5fE<9WpocjZ+H24!j=0\!52]ZgC0%;&!]b_)4)`b<"T*:.4A:fG=6bFi<qEVVZY!XI23Cgg:.JTiXA#m!-(QhKVVM6
%h^gVf>q>E3Zh%g4+797$L$D07-B<!J,\_9a,]Su)KrZ):,E3MNHqOPq6,c._<[o>[J^XU*M;f-85\-OX&$KJq:!a30M%]pq:[G&&
%Y?5UE;%oWcZAERK[L%UCLR!>[Hf]PR&bN-J?XiU%C5V3XpTcV#?BT(QO!k:9Qq5-:3i]JF-To8X?Tq;0jI*UlE8*<:9Hs?JTW1oK
%&U55Do>Sj>.Z_$Z&gZ*G#!F?H@jqRY!5CIA.G_NPre@88Q010\JXo*PFV*Bad=K)AZe\b7L,k2*:S9D4dS19E^g4Q#DoF@qg_,O_
%Jg:k'JKKaP,+66G33n!hKNg_%9K[E2'Ya\qX(48AD2s^g^oC6#)-?[Q!2`=E7\8^!$65#%c]BZXkS-&2lQ8)tT!3mF<r@2"]rUe-
%m9DRXh?d/t>JUNX:4fsl28lCmn.OqiR-!6>f@KepJeo#Cfd"$8?:9'\_68HW;_sn"8R?(WhTkfSrgSPebZr5/F4)Uc$_gQXqQ]CX
%O<K!!:o,hc"IXomX?4t^<VBI:CR`/<"5%/Q!1W>/H5t0\Bb>0;01T[.Mp$TNBZFc<cY?Z>OM/`g_&)dNm&d?:`Du[WdW,\3&OH1m
%<b,jJ$5FIsYD_m=15kF0)*N5@8`,AOL@dY#fd(tn;@VkPJO@f$P_SfG.gX7'k:[G$`Q0[3dW\$4oUS74^@;)O440-jnBL1_X@Zcd
%l<IXZ$gOJ@=8$o9(XeX5.4WX]*!HnWqMST&=Dr;l2(]Dq5TB(sKuhN&U8U6e#(^k3&C-nJ<5#h)*d\iM6kQUOql*puQbAr%O^oFO
%G#eLaRP>7_49pp6)64hBW';P1=YkB(iBgVQ(6S7"a*=LZK=!G]GoXn'?`Lf!)@7+`U)6%?T+U-FGB7G$2TXCV&fK-P;No?$@1_"R
%[9h@6,?BBJf=8S.<cmRN]QZu\M,(Yq^Mi)h_+->&\h(4#]QhP<[l@JD\n-tOL`bo$MT3B10hS':>ZX/2;2l%.LLW)]rEmdpb5'U3
%H*56gZ0BK2mQ,kB!X"L##>e.FXnrUTba+fFirR;O:OV9./nqi^^@M>>>#X1#X@(G#jJJIQ*kXAl\HR08jWNCNhBT2HX]>>HappRX
%T,AR%c]%/g_`fq3SrLDe?-.EH(jch6iOtf.#u='um6VK?[NQ&>Etm?B_6DC/BAg31Z!34LF6<7ZP;G3%#[7m&>FSgJ]njqCWU2HX
%1QlrsVJ05dNR15eU!/JX@$"ZS#<M.c8RA8)4!/U*S60QC8Jc2&9='Iq@oJiDYlUP:-&W[+UG+%8q-.G@?i78cc-Y+2AlQ5dnPi,#
%g2t[onoUt&';j2'^OD"1\=FA\Mt(*?:YrsbX%L26V<uH`,.Te<1&.#?e1He?<4;P+4`&\[q=.dJq=%h2?-'CsE<R-4WS9ir:U8B7
%UGfGP%$D'f^NJqRDfV-^IB'WJ-uZ\WB68<m[5fl^EZXa+bD6I&.WF($_WA>,>K*6EV__DRH`#i7Zgm@lg'?RnAqpVLMV=;WB+L6c
%\F\M9,$`048O@aUK@Q5!L>jK@V]se.\0$+[;[)8VJaBG(jHtbtBb5FjZ.pCIca/k$!6E?DjPe['O#rNf=$jqJag8=!@hPOHRsZ*A
%mGV8u3LJ7*L'*hRF:?7[i7,?SLTrLa)V\dh/WqT;ST8Mp]gIHX%T/d<Gop\na$;/p2LXBGN?rpmRO0]\6\dbI4R3LkKNh,uM(hcL
%$,C4T"(J_u1L,[D1>8k\k[n5'"IDTMMj'\AO6?"s,TqbQ(7F1@Qp2b`&(S_\",n5O$WVK8k5C4/6_g8t3?>.NAQ__a"J9gNB>cpn
%#;<>rQRielW4#ecPQhSNa1f^,SU+kJLX3&<(gme@p#F?mlm@O(7#m,2IYdc;9t2@WgOsg=p3e0VJr\<1nb`WiW[V;+nNEc%YHS,0
%X#KoB>GER)&@"X]X^"7ZpBg041>)b`<<]jmG^iVXUD7-n(7PiHgDK8O&<!dG.VQ)aLC9D4kZ\>N-C0T5::+@<?q"$Y+AIWFb_=q3
%#Dc#mK$Z(p#W?i)0&S'S^2(,.:j;,/:^9-mWm+0po!qcX'9pi!lQ8l3d)qA9'iL\s5%P/UojpF%)&)P]Z@n_2/H*le*ompm)hpHo
%Z+/a:%j"bs'T64\:@\Z.RmTDWYaC9;(h+7X9H?59Y\s7jW,q`q7h[_akWlaBU?^HX[]qcCHKKDEmd^Xoa%TQT=<9nUTsSAW!bm65
%M):nUOs3d]0jVAdM(gcOfpJPP20lGsE[m@,:'Mo+O>G`PQ)VqP,U#b(:tB1jioA"b*'Xu?[\#`cd\&DoNc,M$1eB-<PF[(l'3Mr;
%A^U]U6>8bd.Y.t44*lfaMTApOp4c-g7F#=PB;lRWdap/,aFKR*+)$j1#`P8EI,nd<98i^NLH@]\j*[Dod[BWt^RCtV_^>rd/`FFI
%md!&ag:abdP.Pp]e<R(=],;YjQA^3A#0P=F21kYcr>c\:hr%AHp[7OLi8-'BgqW(pn#G,PA.il\-;K2;?f($!nCqjR3"Eb"?B8mW
%]@isRRs03Igo]<o.^s]<a*g,.n/^G1_OodGhXXM[GOP?p.]8b"6?hnpGSjYoI95cZ>)/HRILA85o/)?*Rm.tLhVFgnd+7S+G@p=C
%mtLF\FVDjchH_9$eo':JElmp$+FCMdDZgl$-u;O&2rJ[/aRK";E.O?JY&4I^52Ql'Q!D5U*T7(7m?US#Q>G@j?;:I-FMGIC>i<*I
%),ek_>=5Q5n(pl'a0ojqWT`d++iac?\NQ1=.]<0]"$@k+p)P@S[dDlp10r3"L]m2',k<qgmLl^Jn0HaAmh?R_(?1\TMEJJ`Rmj4+
%hVFng"PC:k]IhmAmhs+;omG4:DQ2g27c5)lNIW\M)^QcSq8Q8UUn-ro213^6f($'?Vtn'@I?_&#qaYAdHinXsc\kupokicAY@G5X
%O^.Er-b8/R^6MYflHOZIM62!9R07t]2n@kiY'>@ZWV)m$-oLM@jrL9pD"j7d@\0cA.p)YNpQ\YQHt+W#et"+Emb_3VO@srpQL\Wt
%pZ<*bYO4$(pt,V^jo/.!H0jBqb"0j&QpSRD>>,p^mQK\YMk9%jjaH9KcWf<"SS!3mZZiIL>dep].3-'KZh]1U^V&T3n[I@qU@eFJ
%-V@b%F@r[IGF^L`h:k\h^:Nc<kVV+??IJLm-b[7k'R]NG'8<XX5Cr:\J4f(t*N736q%cqUEP;\.Tq-'fJR@5e&q5*FH:b[e1qpU=
%(&WG8$@Mkk'W(PB7o=U4IT1X-G=*k0fXiAn0lPp3b)jsDUk8'lPbRg<?)`p*n$Z2A]mF+Ddebu#bF%17B6pt'Y3o$qnCqhV;0`!;
%'][r^6'Z?Vh4Z`<ipn.5_,pGSH'c,#WuSgc:VE9bX*[k)=#[13n(t1@o`"5-9(1Z@9$_^"=G9M>GH<Rdh-3pE^:IqlEbsU>U@A.f
%X3bnY[T31;Hf$=&fY)91LAg6rf4FW&mJUUW1n4+7%WbA]0/7u;JLb_<P,,`E(e)0Ri@N#'RsN>FgOMscK=l)uW,%O57F6-q9$[:[
%s,@i=LtpV)==abgj=LdHht&XE3f6pJZDFaWKS%6IJff]1#a;4(R"$V^PW9pQk-rp'K6U/g=knTS4>_U<iS9146"3/M`2_oNUnH*>
%-.eYiLc_no\VMZ"fV_9&M"n_9ME+tDa?0p<7g5W/&="LM(5ON@Z"frRJ1'TR"dT%J<?'_8np9gXA7Xe$%=i84+Ut/8Hj+7E:c3h6
%+;OrYkCQ1uo.C:nP30tAJ['8t%3nD)YQTDc.ua1a:0/FUi0T?!c5bjE]3*togE_[A_jNf^?c_[1B/B&HB7KGIs74dVJ,Z?1r;H*a
%?ChdNe,X;)J+hL/s6lR%Ie+*Mr6OMDopIP4Sh@BU9Rlq$rS)6oU.<]32n`DoK763/qSRf$*LVAGLHkZcrop%=b=BU&r4i:,0A<i0
%&&1EudH,kQ]i3%B<ShWg5_lE1J#.n'p@($7CEIqF%=`i(qg6]DhBM4/5:lh*3;nupq+9kTpVYg]kfl>>Q.-B&X@N2hTs_QEXo0i7
%hYb8WKKujS#?o$r7f11W>/.1pGG)?hXE;+OD'Og,8lkZS6Yk=d9+7UUGgaE5W/#!%/WutIABXTUm-rYQ(LfnQ-)%ZqSJW;kPqrl#
%1l:9c1u\?5.GD.OPI:hqFuXnXOkn`<"Dmh._cH[##a'LmVDnOZ;P)BJMk!j!Ys$>s\JqgRA>I;u34msVi1$1VJ[L[eOC"k[)D\5[
%\f5Din*)Ank?oBh.7_DU%4g-X+0%3Ldm:lWZF0jJVj*,4^QQgL[rmhb.3l@K9Sb%1O;hgrK\-(:`3p16Aif7UE'nIAq87-BS+]Rk
%s3'l's5fmPn=Q?Qn3?rnmsk(/n\>$H1*!u8=1u(Y@!]"pOf>*p&pl\$MZXsr4uK"4(;1h4L.Nj/Mt9T];;9-H%Nr6KF&TWPLGY>Z
%/*V/;W5U#WI7ESBJ^\!AiJV=$@E5hQZ#'^)U5Dl2>M5S`\M]&*i5nlh37_Mg4f_pr1fbIb00!j5@7^;".FqnWF3*YNo6lAT.S?5>
%Q&NU;n@/E5s*a[emlp`ia1kg?i/dnQAq5opKfsh9Q3XbRB:/cFFT2MBc"?&0M,o$T`>n)]XES\)B.-pKLJ^RC</`n%?@*.u#W!+A
%O,Fa4cdDA8L004*kAp-'D#m0PV_iFrX#,LFRDu2S0RP/Lr8N*E(`b$GOHh(M,`c6S]EOhMQ>B\PnE32^Hi_E&Kkbk"35PKX+iF%>
%JFC?tCl4Zds*q?-:H!P)2RA%RL7J,OIs&+2]d6#8&sJ]h[]sDjJ=Vim]eHri#L+gDMm5kg@1F4.OGmkK*-\`SUg>E:/]DN<P9R2E
%s*(.g+k"GXWQ[rSfYlP1:)o2?5E,:td^hFRZPHK!"je_@Lc0`(h+P2h2cEWs".]KVYE+;-b%Ko?-hHqb:O<:ZOqKi'BRYiEB7uQi
%b-MshDHuoEd3<cm:!n8d4W1$V_W,Hm(4=^V/XK)A-Ku&5Y)UjO54+f8?O1lOB1LmX-+Y*fITiIq>,$L/;ZF*l^Ok$$/^Zd7d6B51
%[n$#<')`h2qkkb:Hck]IQKX%X5:t8IPU2dE@6Z?k5>?ggeO7J`pX9cRPKgfDRgn7YInttZp8:j.QW@h)n?-&c:)c9\Bh>P<@@P7J
%p8l^rA[&]QD.0e8c"0[MF%R?VJi_<>Gr4]oqSMdXTbmlj8:SnqnM;gXbMUq3i.?\k/pNrtd/eD$9G>_7r<n41n1.`/23J3$RtBht
%+#sisYUL!><YuQ*(6Y>!]r)`VTthTVTG_]T?@n]&oCQ5T?=jG*D_^<G)_/TEa.g7*U>AlHhI]0hP;`B!7b!\5QfJ)h<9[ADY`K>[
%Q;0=er^e#*Z'$ZCs5Da"im+HoVS,'\;'E]9OD?"_7cMZ*IO)pna]W6X*SFpGD;fnV*>!6FGQ_9-[#i`+.!j?GHIM#c$5#Zg2![S(
%cA:Cu8*^EI;mc6KBiChcpiQMN3nd"n4r@P6VCTR@CY8Ima)P"Y!^]m(UccUHD>N3@l"U_GNlR&0Ul"-mQ-0^(8c?Pu4QPrB\e6)U
%j39k-$Fp)s"HB-5iY<El'R"IOA4Td(S1U`aE<ldp[DWhe8Dc"F#K_n!YDA64B,^Vgh*m(5ij)"qa(*5FZrbV2?gIio5!*MG<!pa'
%#HQDd9+K6E=pN3j!SljZfT([rW^Vs-3<"m`ciUekNf%-@mVX)4]%f#)om`cEs,4,]6\Ka[:CmKu^R9kls#9Sj^V4_&H2..6N'rCL
%H4UY('P])<<Z#P7jloAD&IZD*(<Z">#Prs"-iqXcfa/fp8:C\:WH^DW^o%?(fHqsV\46!]E"p(Sk4.S%OG,PcRaG#q'p]s-<dp;S
%#PKu_8?V>+B3$O/!DOm/fNFa9P@G=D\Y\9Ln3p7+<.8H8dAI^J85(\QKVo`kd8@e%4)UG',heDEoNm,A*SR+4WLnFYC99Rlp5tsp
%,6f!A<30D$E6cL7]H'MlS5\/a25LM'f&od,)HJc[i6q`S4<9I*[,1jRnN50`6hXs6&>_'qgi,*h6El#:$Wn"+8]K.N?X]`!4Za'J
%*1ZZTns7a:j_V0MOrr=YnY>Fc2Tib\>oHZ3[\QtX2YN;cI+Iu(/@DbF#<"11;>:bDV=3,H\.P!?:3h-4=ZGJbU*jnhP>V5j*6%C!
%k9_#WY8RrEB3n&0J/"(Cl!Qr]/D%\]/m5SiqmIDc%L+u\nD6eX]!ViMs2H1!@$"[("AS]F-'LY1']G&p>E!]2%A=Zj6s)ZQ7T!f#
%76"[#=G91i,M-UEqIu*a1r*#bI\R2aXHu6l7Q<r-$(M.K."2J_ices"=DmN3`!<Wng\Ln_Xe:rn_VSjd2u`./@4ZPj&X%7hnUYrq
%#>m'%Jq4"F#,Db/KqiC/7:;d*li,p"fNB%2g0Ed3<%f3BPs!QUYn@:"QH1J$KtYYZ7OE<3l7B!Q:.;d-H[N`&->ZiiU[TQhQ+gml
%)aWU-Nu`R^FP=a4me,S+i;<-a$eaHIA(a,@NuU'oJPGHD'YX_-B+%-JlWE=]KmP*J?fJop*L^&".sZi^e*`(iA@HHJ#Ubt_@IkJs
%]J$\@=4k,9\jNKT[jSAG6_?(sEeaGU;oMlmOTnN!(a%"<149'Oo`#!<ImJPA["jPl%YYbj@s3P47R(`TeE_o52C'\6!r4(V'ca2m
%T(]N/nKMZI*JG).1r@GJ@CEt_>=UOj64O7oeeUaeJ_buOiQ_il'c\E>6@D;81P?]ie9Jot*=tl4ArL8?a#p(rOXrg9<;'ks@)GU5
%P(`i1"i9r[/bG->jRt_W-[a&ILaj<_\`_r#6%A-Lj+,$&Y)\WTTW_17OM_1"XpE;0WR1\qjcSaM9iqZ,c8\f[JC.E<>)*/"J_9G*
%FVt5X38F![/fleM#IVBp`6/D32Y(rtU*4"3'j*a?TfL=5jEd;Q'5p!/Ri=SYkTfhDGfteNINjNC`BgY8M!Gli#E-;KLsJ6b6kbhi
%[=Lb7H_N.eC,cqr*E6nV9(BI=9coL,$+IfL9a@Q(3n?@AX(bj'N_;hoX)1Nh;&96V^J*I%fFnoBHgnd?<3FHCgemTp+o4$i&^OSF
%i`tBGh5=="]NIR`?7g=e\!HoH:O<Hjp[1+9T%_q&oMf^Dfi,G`L&^,\hU8<IfNS4&hU_8\p,3&(?@V]rlT0CpG]iY6<*-AVcn4KI
%jgO4PQ.qH5<,P>uga8%Yi`leNBlqhPAm1`.a@t1h]auC:.+W\t"Ng&&s7Xtth5[*t'=C>_)%99KZ/Uq"(_pg.5=iU_U7a=no^R^(
%`/-C9;&i/E@**r'_4rc!r*T\](MjrQ_+EW"4'4oL"Cr^`\2n_ja:X<jM3;Vh.YpaNRVMl"65`88`c]'0>^!Cp[<,ekC1,bf?;9bU
%EE'7$gnajd/;X^tlPiU?lc$a"4f%-G3fm?^*5.oII)5AsdW4c`%H;EfYd]hj,r_F);R`cY7(WEMgi\YTD"4aY?lNrm,17\mWqRLN
%;F->QaMH^Fp,`$f(c33T,X&F6N1*'I,KFK%+]-'lTY1fFF2hhs]3Q7R%:j3n!i98!VUkG3#k-*qk0^rfhj7lN4arUA.(MoaoOX6=
%.(Vq:pY^3mn_VRXm*(:o*+TnE8W7c@@rGIZC+/'HHgr=6*kG*Q+AQ,&L#Y7P,WgBF1odUE+Jrah[mAs.Jh1Q-h>"4iR?^32YAQU(
%]/-H-S>pAB\/=[]n:(-NmpAptf#02sYlOJH:MkR`m882%qX:^(Wd3o.?mQ5.,Xu/QX8`Q3%0@n0l6)=5!T7BX.UiXERga#l`,$R\
%No32Epm_m08<3rMD0ft<_:h3/2bC*DTYj\PabM9%F^T*)J?;b`VV^e5n9tP\^SES+cuu?=-`.>6dotG#1`o'YB`1,2DVrV!GXgWD
%pE%W17AdlNk,?Wl*++TA]*OQCF[@R@bltNL-qG^)+#@cF]ddCN-.-D2+Y9cf!QE0kK9kCRKW1u&9J'#4G&1..3e&42YJBIjKI1r1
%e8hA?+u\NR-FrZNA<Ys?_XMM'"FZ!YOj;2IbeAO_f'*8a/VJu$Yb,'1'0Mha"5L&,YXl_9KoKBtc441Y`Wl,O4A72CY5c@:\U%m9
%OQ]%^S):X3Pje1%O?CWSbhE6$a=G@*0WcfJCR0Ac%4WLKS2SJG0VYOhdOVG46:Q#0fQu(`l9.?@nAXl\Dk3ai^.RQ^gcb.HILJ(f
%O\&ee+F/Jq@6Aq>=Z+u_8!%Ho*e5+#!"iiJGoh93>m'OI:)Z*jlhQ^SItlQ@M*GcU%:j4YK;2qYWmUY&(r*Z`iKDE82[PJ<S"u?_
%V-Cm(=(,=oIM[Wg2rV"$hU.PlF#eS-?oUn:>2fi,BE)\5"$-.u+ju>"3WYY+MqrG^S7/`foP-.m-X)G8eUV9JJ"@=&ooD5`)r%?\
%%SU_^XECIAe%9uIf6:R1=-VeSP7?7:*kjpG<XC\Jb82KE'RhG/2tu-Y/]P`cHd3`XRh'?tW9c@o;4EY:L%FCCACa2f[0_HVJsst3
%'TY'?mW5B\iKEP9DH7<$koWi_C&SP:G'mT\)UR:'5^VrhD1)hj_;9>7[2IF88.GiI0GJ:tNlYk$#&#g&$a0.GMWaG]A?_G_@t5<L
%8EAu775ukA)ddNg+^C+b_(QGAB6Y0.=,O\kNm'(uY]m0K2*-4,j0,,m<)S8l&rs<lN't<c`:RW`%"aI:iQ]rkonled"<kgV2ek2h
%BVklGF:Y-)IO+kG[4-W0M4I*@e;o[sN&C-+cO>d;-a`P_WiYmn@[u=_O1D'oR(G8UNP\ol(=V(\`Pklj9CqmXB!r\M0$Oj6&.rR]
%&+%2(q@H;m!Ch7XQ/$)D`g+iD7$M0VFTJ%mAdJ-X/[8Rd4jlL9V8(S=&8`&7M2!=:A6Bt"734aP&-\c:f8sXe]jt_kFM1[r*b"ZW
%q45$fC8CrDB]`;-C9Hh*3b(#DL,UL`VF8G.%a60](in\+^-n0"fYe-K^6rL=nJFCUJ%j2M(;tLVaIZSgKT%5_fK(qUC4/=-n9O_R
%3D.Gp8?ZB+nnYhn.umfk\+8%(:V0m)iR9,\8J'Dmc8t_$,]DN.n'EaW(Hfa)[i8RB,M_BBM&*D;H'loPhKsf=YP+1tKhe50ln39*
%?+7]4KgYK!%h.:E\:M`gCQ^luEC/T!&D*.!l0G)19<6O(\lk/<g9?\G.8u)R.cLg\L'1K(C*f`35*LdU$*Q*0>9i%s0F&qX0Wkr=
%T5mY()/Wc7^g/on^b_%FQ<<:QODC7+L*bU[dB<k-HZ\CqT0Oqh9>/Z-`uG7+^9aS#=MK`hG-(1pd\'XKi$4$4c9W$-M/+F`iO"hl
%cj`C;jqJjji_hcPNi/2R3MgcWLb>d':E]>Z=7lgMM7^^5Y]sWT_A?Wo_PIZE7+2_DhEAqKSX#3]NGMLT\Pu`Y]c5JKg4I9#$-5e9
%[;f"]2+P[Q,K<RTJSkQd)1IGZ>l+lk'<>PgLsaY0+GR<69'Z[n8[MgoMO0U+a:c[k$dJu1j:=P@E_NXK`.\LF:i/&3,XSq'B#G_T
%!)/qdX@33nCX9pC%QAXYF'_A_[lc=Y\fYX^Z*rcl-3(_u?g=S*hW6qK\m5.@4B=MZ<ruc\LBo#I<sVXM.l"gsmK`k8c^lPXU79#M
%Hb1R6GkbJE@@i@]r9*=WJI\qMn?-/,>+J*7e@6_CW8t++@-[1e#at5m&O?TpKZ$o/gr+b;c]46>q+VA_6pA-4KGGtrjA9ZN;4an4
%-kg1Z6\`]Fo9FBKX+kto'k>2J\KT;sOsG(nq@7gL4u;%FBgq(>dag3=B2FDE]ND;2Q=,P*BXFP>L>_FLqp`F/CTZh\Z>Ns84Q\:d
%5D*km5<IK3SHA0,]gW%O_mcS[>4&i^T.V-TA6?o@0URK.)K.EmL@5iu&3!CoV5ju!Uk[ebOZbJIoD?2I?;,P3Ba0\Wh.64Nm\R+k
%WUN,c:MF5]r#YuH(rXM5<f,phj^M/.*;Y8c*jF,i[TGj*.!8i@fXIS[nr2FHY4Z8U%Lb&LTpp:+O5cMagAdEA03eGFl*B[oSf4%J
%\H+@Kr8V7a;>J*W.,4qj[M2..1!"WIGeOdB0F$Zi'LY<.6qW-WYn=`'pjkE]#/6h'"pSSJ2hsC6@"Qp5H9[9oK"">J7YB1G`%2of
%3AM(/`LmZ>Sl0bdJjUQ!M0POV@HXe<-gg`nl.G6o+jUeZ_`N=7UEHNLU!>N<TX?/&&A_Vf.g%j-pNget#mZ%/>XQkCmoBChpUjRM
%)W6lO]d1K(^QB'?.s6IYXFP.""49+fa`1On[YR*(+CQiZD(8Ku?V'hrr1F1D6qIiFlo7dfJ7ZTPKEoj6+jCT+!E[kblc'*QYuQ)0
%m\.@Tb+>b>GkhO0Rk=2ehh@/UQoC&GM?$T+.n(qi/H0-ooPc%Z'RYQB_Gk!q9usWSn4nm3L8uAKOMsRA5-G)%IK=noI7sYhXR+^"
%3S[aBT<;A-n*">@9r(G)E/BQFpZ8#13)^=7YRl[9BeSNU6;Q)<mYC@I2"lJ]lN";2)FoH3dT*PeE7Q.o`Cu7ia"PLKAP*>P:mh_3
%g8_M>#AXE;?b)PL1F8=eaVVjWj@hW;Op[7;\nYh>KY#KsVCaZ$.[?^6$jVnNFK"+_F"[8b4^W%;b<$UC(4=+k'84gpJk"\KC8urG
%7T^Hf=[W15m(s_`.9>5s3^c5+@QL?<:`d]aKJuJMak8m7[QU=X[?K[%6f#!ESudJ>53c'kSD?aJKH0oGlnS2!IJMkr"GmDp6O)m$
%H\@I`1Ik>Jo^<grWD*6^c&+.`dc$>hY=_>I//mQ"D'f*4&snAq_PM0#^ITLdKaFEs:1$80N&5iNjWAe+!<s(/'Y!2b;5qBQduP+S
%X?(gJW`;2fFQu"ll\Ya[hq4S&)dkS&+H^21FL^Pi47^pKWW$!iYg!"X$>lq;"#S]OKF!`c1%(Um?q`2X4@`Ll"KnVUL5-^R7&q:O
%XRJ]M@Lk?&<.EeBqATnXp00n+XBWA*r"N3XW(P2V":$>#/U.JS?n`5kMDSSPcROb+/^\q[;C@i0>&jW=0Tk(VftuFClVM@t]oWB@
%n4:GIS6f>Jf]LW3BLCDmUiihk@g&p6o0BL>(74*LiO9JRQJk#!i-W%,'R4G1P3(g<j*8=Pof;a#'p-><K,Q]885_$K[)m@6[.^fq
%"+1aU35.D_!J\W3]O*r7G%S[]4XsaahYr+-7'>`N-r9'^fDqgeSOW:JEBen"-04?CrYW<#/g`:124Qa-EsZUOVlMkT5s4iafim"9
%"uoUUj9Z#dX09@=X](eE<e:F8okRe'<;%47341W$?\15j_??\LjhNcUd3iUFljWUY:RAJ(F.Ee6F#1pabqj@ci6pDk<c,"ck0i&%
%WkFR`7qSXbgiN`2bt4K4?IbGsYWs]aZZY72"o!:q"6nam!oeMN8r0NFr":!gs$</,$O:N<-<qP-f!Z8tgHqiuU<C(`^B@&HD(BT'
%MKrHgVDbOsS%s:T^%`mu(fr%-#X>hqXb76:p<ZhFkA#A69CU;/,[h0-rCk+f1r_GV1`YFIY$V#=4O=XRHT5Qu4K_HKH!DA[LX:rd
%Jqn=h!094e(ELgap;<`/%aNVuig8SsXan4<7iM6E&AjQa*Lt7%MdM&d%8.t[4&(r:0>k_*-0F%oE#S'kIL2%opP^kepX%Ts>t4]K
%+(fbJF73;s/*rffXS^%1AE&e`&'J^<F74GF9CRB+SEj[l1E1D-iN.#53s2!S5qdZn^([%LSVpGEb^CglPRX?[T0##rZkpI[hl"f-
%+6G8\[4cQV#UUS&\V!iT7e'.@SbgS#6P$g1,q0g[XO,b1?M"kXVuFPH@1VZ7@6ORg`uU\^f8F!fn$N'L%e:5g3[]@"6W2]n1pEkm
%1G4Bi486UY?n6ZO!2TtVaq+?8*`o/g47mc*]lS8R9CP)jN$g?J]km4paQLu.4qm4?50YMQ&R"#`$E;qrSBKg#gTJBsBH]4'h0fb<
%8l+C'K;nVlpb&B9E!FXD5.a<F#L-Nqf]_*ip_%t@*cirh_ZCOks1lr:34_$`^BEG*$)7Ed<^Bg>TRYTf"uu'o^%`oK:4`tD/rRXR
%:W:L7ml4W%\=P\le\(UnJJQ!'8+F4bRCsi_g1Lu>BT2'0k5ilalbtNnpZZaMZ`9'R<dbQ[4ZT+h8Utr&&V.Rm2*+`VcX(*u7Bq1_
%`2I\]*T.UoJ5l#P"d.EeoqeY,0>UumY1s'>1>;n$#=LF2Ec_P!7d.fE_0=lK`+&?.^sRt1$^]J!UH:GXD\Tqhhl4rOQ:hJ);35V2
%f0c/l3-VPB^BEFcE_qUYl(G5sN8%W5&3Hp)%:%Ig07Stqj!nk7YYOG9R(_b"d0#np3f79rmmLkf_ic[.<ToQG,TKin#Nl9BMdM))
%`6jla1(/plU'3WVa`%GSGAq0Ns1c7VmBIs-c3(flT`7hq$5dG>V;uET0_U.T@fnX3QD!%g`\<@gCe_Ci`k=/p9=!K*^O.5mA<;ak
%Dq1hN[p.V-A+csM.N+2(j@_3%OO8rdi(8(rT4aS,&KH"YR1Dt0ZkZWXF#;0aUTj7>l>huh0,sgH#r[!'(0A>Ipl/p)9'S4rN8,Kp
%[uuXr!B0U]E>:T'kMe2d:b'^pS4G`l3Ioq[]sNNbU9MW18";DZ:B@')W3H?7G+uJRT$f=8FI_aJQuSsuR28O0lto!%=2@gW2E6gC
%,1P-X%?^?E7+f)',3n!BX'dT0CR6,U&u<Z3h&86@pbYeOlAs@3G)jEFbOSD_1c!LADq!Q.#GjRfE>:T-B3apf>8`>rNjK+`4"/Wp
%`DuD%3gZbHV[J%45+<)qD:BH6s7/A<gd%Q>0<TmSl&79ZVm\kr'BdW9%SHCtE>:T+kJ!uBgG@r@R!N-FAM\#=<U_7qKCjkUKEjT&
%;_d%;J^U?r\-eg<BC(>k.8Gs`Yij&<IL!oL^enE.hmPjs^XbrS\><&<EeWKeSo*Dahbd]M:XV:V[%/RCK*l&BAEj7:e2rPgi-?gL
%@Gt(?+M3J/aJ+;r&^ZH:?nZuPYUC-idI@I@1E8240:"XIeSE-(n0FRJ'O[H'FJb>gZmb=7<3I$<_/j]NmQju-R3$5B/DM3_Ja6F!
%hhf3"fLhdAB-fE):(KrZ+B92M:p1[:_/j^AAZB]`dM`$\R\HDU'^GAN.X6irBSA1oWAPnmn"ppk#A(ei`DuE'f'IAEJ=B"hm#9.s
%Tao3N9e3Au-g;VB;YG+Y)9i"@LP6WpeSE-(n0FRL;[V7n&hPF^fGN$&i&F:Mj`U3kO=7hgVQj*8NI*[oC$olsW8CHY8'fU%!>I>,
%G[jb:<fcH0LNf`Z2=..+m`QIJL\k\<$uIJN)shd&`XQ7d6KB3Gc<6F:Ugd!U'<VtZq)ZN\dOk!o>)h+8]d^c^YYfjrP[*G."5N.c
%K>7k6k<3UdHhAl=H[pkY1qND]&+s\%n"X3Kp-!hO+\AGX%mhna?`7%hUaK%!K5*74\JZE`BN;XB>,?jI7MU&ZP]-q)<NELrUM?&4
%4u[g39V[A=X\j_9Wql4RQCLgIMV#JkB<q:4G?Vm,j8pld<8/q1nY(QKGTYkXHln#HJ>J?.mm82$-[]M=q#HI/V@^j,fs4q<:(CAL
%PRm7cJO1j<ABT96C,s0>\U8otK.7"F9t%-)TpZF`Apds>C-Dp6!%[N=:sQVm6964HYl]W(Y/qaBGG1W2<X@mk4;q0BTkgsqFJ2OY
%q0LJCN'>%0))O[k-G.lV)pbPHrL.Ea(r-hpq>cS&Y2j[nneoS#'Qo-HP550>H7D=*:%eniCNO\uXUs%gGjId)BjHpNLA_kP3adZS
%5/<qe'`tuoqZQjT)ET&<>_q_K4=I4lfeqGqkc[h:\S=&B:8,'+!\V89lE8Lg!@n<I!?MtU8FDr51]"7@Fm$;E-G,?&Yr+\$\,^^j
%2dDknmojDn4D;sWpCS-TC?0S5nd4$N'R4e"<t`0a70Gl5\H%[gDZ0tN*M+;.Kb-JbZDAtFGYRlLqCC'?Y'MG8O/Q#V+inG^cd6!l
%agYj,df),(r$:>)Hs68E.._s(dej*+1TWp5f4:L.GUi@]@3O/G\HCVs\V#tOYS;+fr=pf12;Ls'+5g!nKi"tp5/VA=B_B$r=GZV_
%Sq^71>d$^`i=.W$I1:JG,l80k4%5p+$a:1_iteH;mH[Yk-JT.$fMiR5]dEW8(8OdqH%EShmg")6<$U=:ZHpm)U#A5MW'pOa*Yh\r
%pmUPjg<W+-B6YT]96fa$.PY:oISp]Jl1k`@"T8?B9WaHL2;)Vi!JRO\6VB4<It5SBWY"k]fk9pWKso>,qa0'[i3B73jF'br)>7,[
%r9PoZ,^tT1Ala`cRcJNV%h"r#f=;9_ItEAaWfd-8g#mSk$alU^mY0F\_*V"Yi316d_u;12T@&AV5Jbdn/(n9lI"q2!je'FK$gE.m
%V4J%a?^#o`jL`e=H'V_G!)0V5--@A2:%gS7kAh8erT*&o^]4ml&DD[8:%h0%Q\hrl@@lRg^]9F".-ogl7Ih>9=,mQjh3LD0"$Bai
%3@LQB5!sh]\,c98jhSY3O,>EB"uP"?e,R*T>+T#cUB?Q1lJ[9p*Yd-7&88AqcsJe&^f<#m#mPWR<&mXFaZ`"?m778=Hcr+7!?N2;
%Ej.fmI>7]cis!]H=m`C40c5RKJ5<PeEn'%;76PH0iAjB%*B;EATCE-.Z%KqcMb?$74aJ6I>f'9a"6BdiO-Rm3":7k]C'P=bg#o<K
%*(Sq*^Doc]i*f3P*D4[hInfqn_U$r`K^(VDLD'l:<)blNTZKAbJ*!%!=1oSQ(uS7gjfj=`qZQl*,7DBa)P`_CZ%Z&n"^&i*C%$&k
%?9>qV_LnT*+U1[7)>YjR)7\tn0Z+/,MCJiL1tcNKIcXZ6HYUa?L&i?b\T52GPC8Vmk9CJed.8E9!?U9(b!?8,p)3]W`uQ4.e,p3`
%4=[?NHI-2pTtbX?JIT:4IZX'c->3W,2!JX(_3AF@r:-,+&/(QleIFr[da*b8/4UoLqK4e4+n=gAeq4R'm+\um\gmSJY8Q>]m&fD_
%\8h5XdMIuNpYe'-5C'&PrQH+!^,?Bb+T<sSY\-;8a+.3PdKg7-]KjWg*T>3t[lU/9fui,s"tdn7KMYSO45M+!HUi6idc,oj'(j:d
%5tB%C$aLqj.=A(Ym,!lVj-C1.-08VUmFu_[!pMR#O;+aVH))TojV^<5h>3$$g;OXU*sL4E/]<Ef@+Nd$"E5ki0+\f4*lBT1#R&);
%GC/\t/)T\*%r(^A;H:NXG<niV+M]1?M3o.N,(.E9GPl?,#G2lU*f1e=al:6#"T5lNjRpAL2!@aS'>7t(CsPn6aA)mFa]jV;,W/)I
%^rlH1paMCDYm=YLi^%c^[$a;(K?:?+I9KfQ%&$u]9M9I3"*PPJFO'M9J9^q(3+`!W4)#8R6_\rR;?eECI:p@+$A?J<UNVR&ao#-t
%FId%KpP^rPBHkHkrmKL%R'OeRJP8!)&s++#Pm]KhF(D?",)N"Qg22+\CqSg3pYeAPMNb:?I=06Mj04FS8?Ym@1",eO82nYZVSpS>
%%"=kYff%,g'_*4ff<8Aa'GM/)EYAc#?j@sE<1h#]!lT"]lj.0*.::,!,9Mi"Yk)AXDHS0jpt:^[%Ep`A#9g,>GU13?2-/e'<D>PU
%+T8QuPh1O9Jb0iaBJV\1&8u=,"htgDEUrmm/_&9Z4!dnsh#6u\*e6_@U[OaG'fL%YQ09`MkJd1u88Tao-2d(i'dVN96"7rf(k36A
%V/Le&XaEd/\%ph>99C+n3QCUJ!erkFSq+S%6F]#^^a$,-CFsa\3VZ-n`#0J$aq)m3g!_GA>'k)hIBYq:g.k16M@rI`;1K-r2*r:>
%$A_YA7YiUZ!p?QYNlS!e*gs`68k8T51=,@.2[:9)82*T\"=3G%NcGk[jjA(CjAu5a2I;]`*tff@=@Mg9ghkd?>Hqh\8l$@_[Xl)J
%Dr\O\!eg2Ra2]s+Z@S'm(&!.t@r98JD6#Jt+DJ#HH#fM"-&Rjq;R"1mN?lN#-Y,j0o3Ca[39K;/DjG"Hi^N@(R':EW-JOF-=W2"#
%jC=3_FWh+)krQITNMOS1k<^--pNs'9\(hb.>l$N*-?)$p[[rTO[5d?N"Hu?>,3KCIlI%_1+>;boFXlm<N)[kIA30u<#33=g!BKEY
%TEg<-4EO03Bc9)a2<Cq!IPH/."3*Wp`<BcH.OV;5]uCLCp.VZ/`45"GXr'Y4(MA]cX5#GdB>)/*is!?[Oth?D;c]58=1DhS=a?!:
%p@tAnAdlH/3I?.ac96N%;&qKJYB&%#kZ(C3j3,tj)Ag*,;(Eq-=,kV.S2D"odTtn-=#k)un5V*qj3,tJ)k27qgDIZIET?2&Q0ZG<
%?ub$E?`nP/C<:62\D"QuET+Fk<DFNp@uD;Hn5YJgO/Z3kE]h"\c5`T\\T9m`>iX1NafAZ-ShCnXY3tgcj4;`iVe[9a`u!:6X7/!l
%>qLAVH\W$!f/\(\nd61OaDolHeT(`aA7Ee"?cK3]-rhQe_&;:V^_A2:/I1R^l*KI@TO#KT`9*#V=fR(X9kbNmU563;O%?X#YpmNF
%=FSDFJc['a.VYg.'B]FkD9IX?Z_:mT`T?>0'ent]"*$.2(F5)(Ol9@eJ^asp[:E5+=ID<s":?"G#WW*m15+h#alVdZ&H"KQ>M_`^
%o2K@]h5QG>".i(N)ISN?&kROn7u49u*YSeg!bTW/(lUEsLt$lS&Lt;#"<=$`6bJPE"O\e7?lA%kA,(Us\!1[9%)jC@2fsTQA$jEF
%=p3V4:bVG1oDtq8+b)J%Lt4sb_Wh-BQ;U4Z\XYH9NfS$=DSMn8H08/5GrIj?HXF1rd@k5j#A^ice*3W.G"3pgU/JSCJ-T/L"qGKp
%n&EDLMmWX*=A^9Sg%M1K"j7<hOGC@hSi3k#]6AMm4%p7O4L_4,/nn^5U-`ZVJ21#4_p?3L619J+Z^K:p>569+%.ZEbB884F,9VM=
%DV#NnSpV1iVqFWu[e'tNe9DJ]Q'Eb=]p2BE[94TPOp'2_m,3o/`'+H(`<2&b<`joVTgpaWTA'$E&JjH60bl+s68bGq3&s6Pm^Vm+
%G6)(^*HNG0A+>Cpqi&!/P,"S_A/WAH`_E*aMMr:d0&',iC95Qpf#u*#EA>Z[WZeZ;!QNPFkV:ED+YL^LBO276aGEH8:pd\0$;uLk
%D;PL8-mN=I(7$N_LrI+f%mus<:-e3lU3@2O]6!@mV%I2@,s#eB'2@rAZ->+IE<Dc&k`:uMQm7[&Ag=LU+eg2Q&46p.=FO*P[nn0;
%3mib;0'R0,X1345h\g6Z\,4-g]CYSQ"<*:-Z6)`$Z948%Bgq<[Qrne,=S?k\*7t;IO`[)oQW]5OSG?D;UbZf;4&p85)!i^`q^bI"
%V+@bF+nnD*[`f4D+UKi72#i0'>['6IfYg1t_!;RbgYM?qZ03<#+MBfBRMs/d7#ckg%XeV=oo*_GGj/J)5NY0517fA*)dD0%o#FAS
%AbXU2G,amq*69Xsb1P6\+Sdm!rEpSYV*MTs0n@g%3(.n%AG0.Y7D0J_L>f1\)g2drnSYAi4S^onFENRu_aUd"EHp$=GW?MQ_U%2(
%=*Zif0A$%]O"XR]3sVfrnolR2Ku_(WYOZs`=hT&C$t&,j4MG(fq/F`^HljuPGX%6BRfE!SEjZ.j7Bc64=I#r"+:\`ais0S#f6BVu
%d)?f1paU2qpq#qcLU]?NjUlL[X*c*D\p-YDR4J1Z-5.u&&U3-5Hm:7iQ$:/_Z"s7^*r6W_M;bL_,VFD&Qh:'IqFMF9_GfHW=85BX
%'^GYR&sp8R?XdYWnX(/B^X'j[Y4A#r#jN>CBac:&X0DV'7VFKj4AikV:C%u;h7+A+b,NUupgZGG9%Fkr%<V0mG*'J]kZR&s3cc$C
%j[]Q!Cs`duTStEA#`FN9%nN,%gX<BY#%;X@@bme1h3\6:$liGe5#tc'K*?,YD)DQ)RH95D%kR&edOq[uh8)dApPpfMZ8CX-$Zaja
%O1E%L9"QJ-@e*`O,)1_O^usI0?I@l#$@Qu<X.m+D]XO1_ogOXtl%"",gfRA^o[Z'\>.]d'_KLfCU4K*W4*'g&@f75<Z-q4s](oAQ
%$)CSR6&0EakJs+Sh3Zr%7P&E1iY=2$eb/-dR1?>O*J"e.Tp$MtE@W7Wpa[LL.9=1?7XM<RWU!EmZrfHQiAn1@Qi_VA_,oUPeG'Gu
%n=^&;PrH5#T[CnkhjLs;&,A3%9=/$)7`JEeJpaZ,dUX1$!F&hB.77TN(c=!uCRaQCZ[$GW+_1Aj0LZG:qc&pT*Sf&&p4LL!il8l6
%^d(mcn*@JRK6aU=;SSpa*uhO,Tu"#<D]@ofX+Ab9<.#(t1`/P;3_t)FFg5$'Vs1IWPjP1JdVEZ,;3dSV(I^]5O>U(7(>OMLdpp$D
%["D/t23t3h<Q&o*UuV9-]uAFg>1Rt7WXEMq\;RPDIC'Rm4KOPb1GD$[ZjSk]fuiGUOkP2a$!of-Gt8^F"O_(%?r?TqEMHg[1?(^>
%XbRD"'d1HM)@p>c6.ND^GUj\lL]u1#6fn&j$d=@(>pdBPYXc(1G-22'n5AY+V8ZQS]s@@\\h>MDF%'D\*!eIcnM+A'64MWfm"jjq
%'!uUO#`5r^H:RrF]et$0i6*p!(p9WLR@8K>l3rh9^l8OCE1go'"Tkm8&#L(ejaq'd%-(iKNiW::n4nO:;`CJR5H&_HDS.-bIC166
%[.?U,3R!=f44oGW1kSGsX=*Qn*Au23m*C;?@+)<)EcN(.TLLFFN?.D[ddhu1j9VP_-btP-rRfq$Q![ot7C$D16GdX#GBM1q-G]3(
%QN":nCY@.TR8"3>In\k*&TBUrn/s2YK@A5t&(2M?)bWe26ZbRS&07fh7[);+OkF/g]kL)m9Bcb3GH$I'Y!'j2IAATjj96M!Iip+T
%MZsEjn3c_Y,.hT/d#@Mt>d[*=V;fR[feN!EH'mML\NgDCL[q9+HOReQBM4+PH(R@of8WsXQRT^V])])ah69Sd!;;:2-raC-kaB.+
%V)H+%R!_@#Z1sIBMfu>G%RoBQRKahPT/E$A@<jgL6n2_Q*>Drb$telQ:l&CgEa?ZF/d4Jj213F(@IY@a?+m`T?E21X^YI37LP(9?
%q[@Tr?nMAZalL$dAU7X7\IPls@26#)?"J%^U)EU76o4$;%rFZj`nlReE2`(UkmS'IgA!Ep#L""(PUF6I@;@3!\M`l%!mB*6*DdMQ
%_4s!(*(Dsl(lTaZb!+C!J4!Vn^b7$i5nmD:?C^>e)]aZrn$QXDT&31mm1j/O'bp*O5_8HCX=N3_lCQ"N#Oi9d'N[S'QXSb$@)ILJ
%:3SN%,7(NC9,(IDd>#V%VX$;J)`E=A)bR?&9,:UFn\+W9B,fhqo&_;=9!F^V(0<e)(Da%+"%>:&K0=W#faJfHN7A<:i*aBW8$Z)%
%IG,k239`JSLTX!a'g.B2com0cXaHa_7T,FeqN_69e<@jOn-klR@Du)V7#/WqB*gKhA8r>H60Ec;ld1YV':<Dg9<<7;=]bjRd("Jl
%/PHN3Jge2d5\_jdVO]-;@4*J9De6=jnu+:Aa):<0"*eK<'N`+,RPOYjK0__#V;(Dc.h?$'[Bd:LSmc7>^A?@XFpAZGUp@e)6"OI>
%4JO@;8usibHa*=5!qK*-dfDWC+Duh;WB-/3E>@iZDg6:`e5HC#c2kZ;2X)bXTjBCTJu@g;*!8Q2MMsu$DlV!idhTV,HlbOX3jH`j
%<uf1ZYSY'VcC6sHD/Ee'M4:JY1oqWq'NW%kXIQP:lR%T'd+[l_EX.;E]snE@UGMVV_e`oZrGJW7J3pqU>QrI<JWQMk1]nq3LUZ;?
%21TPPPJpPkN02E49<r?%D,,4n;HFY>3%R'@L?Wra%?BEtfSeWbB@![Z;.o67#<V2*6(qU<Y(Gj#N*X2c`)-,pI!$6g"J5q'O'eWk
%$MNI<e/:D"EE!;h=@4Gl4d!.(!1sK-/Xs9^U::R(ij[Dt@qU:`g;[00[a4?OK=r.Yi[T1FgPGRF;M\E>>en;GS#B;:>s2%i"jbR6
%]//3CZ[8G<OFt[b'?^!b.X6ijT#d"Bm"(PDpnC";6$,p_+MG8lT%4!Jo]r`e#G3D?Aeq%Q\@oBZSn7(?[H:'D>UD*c[:TFHom1Tm
%4D/brf[<C@W3IQpi&#+(9M?J?YR6t3jnQ1l1Gh1e-H9be';2RB/$37C$lJdhfjURR(P1?%DK`*CBqhg=p<pF0B;@-4;<%qZoJS;g
%"=R;R]snE@U3#*_<GpBU:8t*^k7.i_p>RQHNm=WkGR0j[=2DN^&YMt((K\FoFJa-5C!tZZ6gnjS%LVlTE>:U64VocQb-.N'l@KB(
%\KbRaTGLSD?M;B6rjK@7gH`f\kE(#qKmLGB$D+"K:=F*(dQ*UB_p<ZZ*>If3i[T21c7pHKRAX)JSik'FAAdV==&0N3_)LWVhJ88d
%A2S@+GrMD/qlrlsG3sTi%6I#;#VM:0)?p8MFY44DG>Qqu(K\FoFD`$hZ=/t$Lm]3g!/5a4\-ehV0FV'];e%/0_T[2kTP+MB\-eg;
%B:PJP*1do`!;U>hC^RC"5t#]-I+,[fMRJYLT;*:P$Yh_H:oN!(X5H!!j7X!FgGqF-*2Wn0!/5a4\-eh&1Rr[LKqlq1UP8p5lFDOV
%mG3]$?nZuH-n*(]S5L2H:,l6.leFe"?8&I5Vs(eB%C0EjR?jb7T`j#u'?*u@'V,ij1dhX0_J>bK&#[J'"P@4%U::R(iofZ*$(Z'/
%dQ[!P6(qU<Y(Gj#S=]j'+W>IBWAcmB49[._lbuln'V06'f/A[/AKnJX*:OZ8BY(me$D,_<MbSAa8"F'd5=^>/-mCI\\-ef`eeO6r
%&o%j8`qC*)3t53l'Z4*-Y(GihH,hL^1??Q#[ba^LTE)s.6SGToVo1ke"L7j"Edfcce7qgjK0m1N>/SW_3+B3fH4.B39tVW#oOsV:
%M-a9f:YF<jW8=1Z#B<Ftrr$>@Sc&bFJ&6^7P5`W@ZTl/8i>]Q22?!+Iju7t7@sX1h.Mr$Q7:h*9^8QEu#n%[<!-_>MPWcf30Dt?/
%AVL`"XAWVbCMuf6%r@BcerhOV>f)(=4XdAKJj-<Yma\@sE=!-jW2stF%i)%enQN-=*hPWD0;:5CV2u)SQg,<ElUb"SSgp4WJ31_R
%PMPP)=lki5HNbn*I"5c3._E@EX"qnS"sf,*/G#hUWpipT?iH(@%N[r9`]4oQjd]-96'%Cd>_'Etrn8:f>ZMt6!X%51!eZRBYS;--
%]/%bAXDuW8=M1$@8(V:0<i3.M$!qoA'AP*7\`oQ!;6Ru90<iGn+(/eZQ)Ce,(3\9]lLND_G1IMrPE61AqS"J$SR--oY"u8UW5`2r
%A;bak(-AM,nCT$JQrE%NCQcXVTeY7/XDurA\Eg?hg,7QshHM;P;;(=?f(eVG//6Vom[EJUo[fJu"Ku))#o8D5I!8<YmIaO`mfY;V
%pCS-G8E7F"P#'G2@DE[Yj1nHpcr8o>/!=hS]ZPs^Yf;Hji3'!#M:Z:1d.B2-4B9(8j!Rs9EK)'DaZdQ?)G@f[$;Z+=Kpag$]I*H-
%VQV`:Bjt4*o)mdW\d'Ap?n(06=iXM84Sd/NIsunQ75YRg-N!N5X%[j1;cbUM!;?c:+QNSTL"ol3PuUWZm_Z#kW&1j'Xk+hjTY8@L
%VlEgYr;[@cC-6i;p'LS2D#:fdRJHOY4=I4LmPWZFoNmN&?XSk?5J^fhebJm-lk;iaNJ0%;;'J1d^cb"H#e9q.+h-!/A)su\(/Fi/
%%uP,7Hqj;@qJ5GF>&gYAquN,DTutd7AD^^CQ)W+"NeOMu^jYrk&97f;6>ij=`nI>Uk/uF#@+e@Um_1%F"Q*-fn.WHTp]jnNWq,pB
%fdH!eZ2"]4q"taFeC6JVRcG,cO2gPLM0%YL&+JKiC&EESp,Tg1@JL^Aj7s5Td*+AM^F&glqlbs.1A&`b+5fF^NVBWu5%4*8f`1"Z
%/Gt!S%[3-##!eB"K(YCm!9>?-B)r3]Yd/9j5`pH2^n[G-i8s?R/jQ/ZO]9X2BTc/JpT,_FBZ+6'#Rp4,QIO1dBX1F<^33\1i:Xau
%!"Xh8c4"Bl:C6iu-O8kaY@e(EGYh@$5G6+^`GJ^Q&^]+_HB)B`#=Z&,"IeZjg:qg*JGiu/4\KVDgsOC^BN!/ZYUl[[-qM"B0,WV5
%;=0<n-MmrE[?CeOhlLH"#'`sD4)^e65,%(RV[fZSXlg/u==U>B4j[_h:&jt9E]KdUT0T'Bpj*-QJ>Jjk3<VeAm?LaK,B-2$3KGl0
%K9`i#$(C2oo[chbn?QdhRkVX1U>#DG:%emQ7m!PDh4+51_>k,66p%HBaZdQ?g5,ubf/!d://M@P\HP_$.ICb2]eK7p6@\A*_]\"A
%I%L>k8I"I+lWJrC*Yd/M1MF'icsJlb5bEKgf.b!-'LFn9TZR2%rpPn+X!\n>@pI;=%.KpgG0WC;I=(qCdgk^d0BX>[==U>BH-g*Z
%?@VY/_r,a\pn`<5@1[G[Q9rmNCE2uuc9Vm.TW!#L6BchLrn<27Wd6fA0u/F9g:7J`p'L+n3upUckB]=$J;8l^SWV90T4@o_U]_W_
%3@ci"6QA`\0;6KO@JnVM9b>'Q4Z>+2_a(2lS^:o>@"7PH"W;VL6SZBo[ZGZm6BcgifP3E@6!o((:GKY;T$!H.7Igc-CF:WWd5mo%
%OQc1+gA)(Mo'Mplf.PJ>R>uZX\*;@u$7s,W`b0WRfu;D!6/T#Z(n?UbjLFTm;Yd5lG;`,6pn?k5ZL'?dIk3h_c[u,eK@q=Fe&-\4
%n(Y`%s.]G]Ds7Oeo9:^X5=OX;q(+5+D+Ju=*^Zh2A)`f3%bX)A1@J/IU4sdpB#[SC(1::03+dOZJf8Z/LN3WSN#I%Gg,)+m7enK;
%D>!X)]$?434>>+r4sV[tV<-df?<s5mHhk^KCL=i@]YXZU0D\ug%-b1nls#tV958RAj<$r5[c?-Q&nsck-%eZe3Z+#s.@IS/r33UV
%]JQKl*p6u<%4WCBgS^%;1j-k^rLK::6S=Fgn#\r#;'u,L\L/?O%%/*AKIe>5P^#]LOPPXemL0qq6k3>p*_=C.@G/[\@*$-ik65pe
%o1X9X4X%e:<-Wrg[01TaquF!Y3n+QeTYoOd3^1[dnYb[a)OI]YdbdP[a(lcYY`=5D,;uLT>!hnG1oN?uWJs(8A/[hQMJ6pW^uXg>
%ML&D7lXbR-`Tu9+QB1_u*(8@Z*3*>L?<1*JQr[64bUokZln(XYQmhialp:<lca'>=ik><`ik:a0Qmb$q;dXpNVAhm'I2G>/>d7W/
%#<@n<Dpq2h;7p>s41):32LHGmnh?M[[+W*77q&(ACDCY@RN)Ej"tbVQUHqPtCZ?GlE5@854Ue'mRUN;"Nt1(5&1PB3Jdp7<k_h'S
%e]>T'W2="`d*-&Ylp<S(V+He>95E0>Z?'.X)d8\X[.P@]ZLs\F\rRL,Q.<+8hmCKK7c*J"`@Ej'4N:u9onrFJ5E)ql;2q*!N^mZA
%D^*0AY[TsWEdDKNLfpfZ,PoJ);YHq%)ljSBgJNs##*2:9E8!^;@<0>AC2d-(KRKpkbbM;/L(3`d/ZW:rWY#nq&D8C^2DYgV0:14n
%E?^L*[V8HlCsuS*L7,Z>eZa=&lc%88LMD-2m_q%W9[^8[kEaI#%P=',LoqL(fgV)RI4X`E+,hkiBQ:H7:fcK[A/_f7oX`p=&0Kii
%i[f[UeUubRjZC3$dmdRC8uu7cD%g%,3K:`.T+[<c03B5u*TBcJIBBKjmMgm[oK/uHgp5ln0-YIVR%N,B[Q6=tb8=R(j(-Z51rUpM
%1i<=-W4:0B*M0YBQ"DVB,VSj0d6l*_'N/aJdE-,,<U<3$/s\#d@QSmZZ(=3n*EER!f9gD7_1ra_$U)h:ZJG8Fa2m\/glFPfrb[mi
%E<idd)\/MB#oc;;HiYetA.TOGgj!i&a`%SR"&XG%muE*8_n_?*M=VB*#I=7jE`-KU-03SZa-JNh;bl?X(@!;:iKcFFD<c>LaY;)o
%-]\Gl1LlFlL5HRnbr,VS!t]SPr^qT$e,FfC-6BL!!CE1S4>sH,s,J>fW1A*/.D9LO)CH"C:b[hS*)6a#p6m@P:N6@YQG9V.lG-XS
%p*`1?T8<O]MBtD6YAWgE/'TY[QWO95IQsY#hcieq.]kVgOYT,l6IV0jJr2Im<FE"2[KrasQcaY(e_F3k^c*l5Hnt-Z7@afKg$Lcr
%>6)ET%"ncJ!q=:VqF[S&AroU9@lVKsPWX(Y>bW&_FT@+Lg*2&"*\*/'4csU%#:sA%Wa]g'P`F3-6QmOc_k%18rNI%gSjD(_W",t^
%Mf,K.@*VEH!!ZL9['u.4nZ!30S)[DfPtf&#g(JpD(l6I6qGp[H`6BC=ag"s13cfiR2$ZCT(omY<:78/E5eHs^HkO4F's\lpT#F&D
%GQraKXl$qtY1Bs!9&/\?=pcbo333G-ql4d9#f"F$Adp`Y/qN`a!b2>#1?KEfB:Q?<EO<&<dh\>*cigZd,Cig]^]GE/JA$8U&])^9
%Qh]9JWQ9Yh*<d2fo%?nk:N_gfc=Kn"LDu&2fk.JWK\o-o#<,FHD`[A[1MtnnAoT^ZZO^bjd9-N7Z-F!:O\WHFa\8#bF]EseTf*;i
%jWZE*+[uI6/qH#.2?lFgOu&+C3Jn8,^K6]V(2HPk_^L"X8hA:__>2<0beB$%!-7I^3>@2D=02IP<R.Kn*\(Hs!d<VD@8\+P@\R;P
%+UL6iQ)/VhRG_1V-/'7i(o7uQ?p+T0WLZ*Nnn=hH^(Rb[?DHIH%fg_J^A"6,E;tbIq;EJX1*WM6^UKXA#kJFj#`3n5g,J;Kamn9;
%QMED]d,I03PZ4RWJpGPjaJR/h=Su8GN7u<#@:^@u"@baa@^ga2AL-4(Y]c5OEuKd-@lj<WR.jT*.`\<&lB;#Uh5g9S)`Wjj8dj<f
%;t1Q?c?ijI($"@9eO3=P-jCnAYG'+;@Vb_[#*Th/2pcqX&Li:+ND#3k!^nE[WCL#=5i1>DSNQ#_(>T91ESbm_70'G>JQ]b:6]Sj:
%K^lt-oPLSDQQZA[(%r\"4,]J?q3E-;[$`.$-3fq5Z)D%QP]$eW\243DqL$>O;A.5VGX[+`#QrDlAVQ8B'jqc?1V6'^CCpm6^s08s
%76)ISTe[d%!dlJ7^A1OspK,X3A]SQ`RGc1.LQi"!WW]c*Tm=/tL>B3Bf7_*5n%fn,)fR\a%l[CgA))O9=;Da(k]6n_D66bR[0""K
%6VaA#-KLV!4,;8(,u@lH$,MO:19-\Q\AIQ\coVnI%lpiZ2Me(,_=]Ee3(ADO73Y6h!a^Otn4O^(XCOXK?F,UulI(9M\_>H]$58m%
%h+q_[9RES16SljibQcSUY,'7>.8K!E9;)Y$BgDhF-@&%nac"r5/S#;b]Q=gcF\cT"c-on@BKQbt27-S#6E;C;ZrqfHq$Td$J'Akm
%00c,K"YsN;Tqh1<8+a$G5_UKhZrp\-iX:b0nMNBX^\lf7TDMs<e7(4PSPH:+k\)8FCR:]h6Ga8.OSYE<7j6mR8($_c#;m4&9:.31
%hdEH\I$m9[rahm=%IFdW(n0m_pue@88g+8$h5<omd4Sk-YSq&P:mbrnU\AUS>!ooT+,6pUI)FMELMtgBWCE5IUZ49Q7!Fj;a1Fo)
%._fedTVJ8Ra2.T8(?7Z/FGoZp=pGo$HUXiM0okb*_I5?9'b4TZNTJ(0>1'lI`)Y5L<B*`&7thtS-BBWB7k[mk>NmQIbs39iB:qVD
%NfL5`Ge>o&6$/a=3]^#GLBJW'qdD\oT$kn![`8o#(#<KC6&cTo&q64G_d9%,3dZRuQu\!(a.F*;/!P*iX)OGU>D6RJCSHU@\Y<#V
%_o1=\P`p?qE#@$X'KcfQ.lpbqiGQ6+_SHn!'m=\fo;`!7]i^tuSjq,PETlWM3#iQQFI\qWa4oN8M!j+i7n<%.OJ&B7"Pe]=S/<ar
%>`:!t7gF6NOo*r-N8AReo'^2IPB'YYhi_5_8(O".'jh^Y"]q#m'jh^Z^pPHhj6NG4i9IV@ilf1=\@+42E+-il%nXV7Vk3FR-'!4g
%M[Q,:*?KX&0YH"p08kP#D@=02(l%Lbile')q!KZH/0'1U98<Nim@Z'R7XVGH\qCpjiB+'_L]JUPM7SqE4YPT1I1Tdl5'g#<pKCp7
%/H)I>p&Q9.;O8<%r%IB401*Yc"p:k5O[W+^QZCrY:nIp2MMDt?/l^tjF^3)"XH:#L)7n="J\$p\j]o[!S2VnHh8ce[i=i-tS[i2M
%QZ=]/Ub77R_.@@Kg-TJ;Es[>#)c@JDZQT(c["ZpVk7[d&:Sob=QKbSsHZ^L>=AHckf^73XehXuIKsZQbdT/4&XU8d#Y[mn)$E4E<
%6-^eSh$T.T9O4NTq!8<g9/T`KgD(VF[CV;9n_)GpQZB,(2mf8iOZ*OY%fTA2n8Yh3Sgsd+]kgsWc;'L$86Z?P,IiKC<?Z4A3."pt
%+a'KgN)(Ak7YT>\jQtGhKsZQp15Tc@>8>R%RBtd!'N,a9K:GU0]+l7?%s8aNij/`u/k&e9Dc^V>>h*ENLsI.1\l;\k^S))gMqGup
%(+u\sOBiP50"89VrIR@<jI-6j#L8WPXEc[.L7"mGM$oJ^i#g_Bm^RYCo_W.sh9kF\NItB<H]<d2WRTr(JdQ,DL7M17,TsFI-Y$(D
%%2OG:Ib*H"pimAk<9S#2*b+Ih@Io'<@7Bo/=BJ8gI-`T)N;h!D"5U9\kuZWbq!et6W&=Gnpgdff<uWs0=rFh^B?""G&,;r\B'nWd
%Ap_l!hV,_VoBD@+]kVn\o@$t2(,>l#I"$)?S<X4pQETgX!UeX:#9_$;\<:eq'7f_>/KJe>i3a8?i(\%dThgUbj$Z2B'4n"u('#dK
%OuhaJ^Rn!:J5dj@LSkR'JuHF.&ChMti$WuiqDq,Lq8t6q,46"#>O0`S&tAib"<RR-5QCO$s7Z?A5QCN!n,LHVD,"tF!<ee)qV1K=
%nEJo`5Q(K;DniKRE1*k43fNjgJ$"4t20!<krtC06J#j.qKmrs;TnrJhHhaXkqr^1nWZ&rcb$Y.cTDh^`6`JDDR)*mN2Ohtd?JeY$
%QEU<sI&bhmoXr'OgA?@g_Nufo4:o\h'6Y<]8n#&OI:.+[`+2Ib.q@$Dk6K44Wqb2Hh9W=5]jt%82Hpi_[eR_;g:@^8AJe3IRAOK<
%o.0_W>VHE2Q7laJcb'"@g=fmhC&!dl"8H0rG!/k>0:?q^ckpe->CWDkrN@;lrHaF_jlc[7rTc]Iq8`O$ouI+&s*Xk$mje>6s-)?5
%-F5h3&eNBH_p_Z)85r/.-7\pU_-iMH_b]M`0#1?j9maYT5OdQc?iTi3s8:^1%%7XBBQX'_#hr6,o.5oeGV!_Cna0O=jE9Z]%K:Ib
%>9:r1\)oa4$^3?LM]JamHs0q@bL/i/;(X#WWQ=DP$lf-/JEo9<je[74%Z,j2!S-Q38[890s-rQP%QJ`dPKkeSn6ZgrSk5-TLC;%K
%QJPqsg2-;+KbmaOk3mTc=EF9&d17i;ccmCP?3$e>iUKplV,Hua&Ms<M*e\A!?,M<AJ:Z,,@r1f3C-h[@/6a<o_5h1OoDH:XPtM&O
%pj7>tWVkWXrq@l@?6%"#]RMguSJP3WMla5BMnr\f(X$2lrin12'#*J?p]XmZ_Vata>Z9+Y=F?5$cgHb_5j<T,9+G%73$3WJGOGp:
%^4j0XRi3*#g3@PdVg*RY>[)]QB)Nlk00Y(2.OMoA[iKphi:,fE8;g\r!L?(/md8PMD"dS^PJ][Si<`NS_I]`<p\)690@RQsZe6JD
%bI?Up,XTYd/p8Wp,tW$Y_NCC[<_'QV:o5GC[o_PAgH3PN>B:et+_>8(YH!$bD_II.N`=5p-a8OVSp\-aE"?p-jkl1#S*6@e"4c#H
%ntG@63VaXTCii"Vad*43n=?H.o4_O]r`#E"n?_Va8u(r]#i=3I[q,5Y-%<,[>J2LZ#O08`Ol$+MA)_F`0PYKN_pMYs(I(!nT5(P/
%R^(c2<m>d/\K2Qk\9OmU0eDFlicF2j2S[4BZN$@B^YNH#j_?E:oW9b4p680B;J^cfd*>]eq-aTeaOV/oAf!lgNg1GTs(0s]6]MoC
%;D[.6U))D>k6\:,RQ[SWYS?YOa/TK9*@jNCOsc#oF7n5s&mm#>e<*feFGU6l@l6G5]J\<G]^U,PGi<j./HNC3OXW=+f@j>J\1>R\
%GD64?QJsaP6p;&qD.(<0AN[qsg0C:Ld,]Ffol_V_T@mZ+CilC&,"e/+[4:#:\p12)nXZNp4"Sq,$GLb9OLdMY?;_;M1_=*")H?<_
%O7hpqm-ER;qMs&b=Mb4^r@qQ)7[FrK8KFcF;S`Ho4!1NlU1/C,T9H5D5\c79oP./ZeXNAr%:AGk+&H9OXQfe7T!5L3`J`cPIcNS.
%MI13,E@Jqg]J;DiOc^1D;^G,54Hq]\=^%.F&8:U)U=ll5d7\_3;j[k=^5l3$!d)%%Q++QD;i4?&Ed'LlINYhA`[Mb[AT<6m(c2ph
%mUbc!h;6q?pYSPpC(A+"bI1"$Yf;7Ic,>Ai)Aba;nB_oK5ZN\!Xk5"M5C/l$mWdVA=s0WVX(JD.+7\,LDFB=Qp"TY<LeBr?c^h58
%fV8&TmNL;'lhta,8`93Es'";Ehp.W`V'in2Ks5i@[)e@ga_f.<Lp2YFIkh8lbI7Ch4ESVd4S`d$^?d&W`RZ2t)9RW&b4o2b\irs%
%BR./PbMkIVT.hDaAQsXD+KF,K49^C"md9kZ&Q*ZZ\[AQS;7jQZEBg=`hh6Mca2;hV\@sLQoQ`b^guWV\5.cUYY`SB4YItaPe(Ege
%/km*&)*DN;2sKus`Wj*LSqQEn.f/CSOkjYI[_5cV0+cRlFg;!NM!O%=C<`%dH3MhC6B@#:MT-Gor98atbDGf?!3HTZ5a>F,I\3cH
%;6YP19<<:J/RqrC7(u_?i(g9>$Q*o-j=]m5l$Nh)QaIH8&`6!R[*9WjH)*OIMS$Np_Z:&]dGfbF^$]h98/2p/2)N))dQM^VF4d@?
%(Zph!_m8_O/F@CH34/m6)]A-e]bI7IbAN\7juH\W(G\Kl5;?j8lQMb%UQpcm\6#a3&Q]DR&pA^LR-OYQbWF"beV>D4K3)1Ulh<f'
%\$\7hcVVeR\:joAgfIX$8/Y\$OG_"N-N1'M5T(:2Kd]G6`5g[.T&V3pQsWu#>?mDiqN[aVCqIWd%+^]`n1FT2bXn95?tZ<]o"+$d
%??Ce=\?UgQ*l9la6s/:&FT/[Z#uM,ob7[[?'?W]TOk%\6b#kk<cV3RpIeQ9'nG@M&n!@j=d=&[k"H?Tpdd(MJ?a7!@BDI:2AJlau
%=a4d9`_GuG$kAD4>Ke+8p^)52?afVrp[Ou]1U_(S4"Wrqj*!;$gK*^N4VhCAgL?]-,e*&HF4eZcIHb6+;bO#]#0h(&eHlI6nndW&
%pD_htGa4srWOR:2WLO0;Q,UB0-JS*M6G(H%n%nhJ/Y$*,YTN?aX5AN#%!$3-j%<Z3o8Dd>8T`!=-TD0LEH=D/XrY/)2G?3W]""T@
%*=>q[^Wj$b;d5a3>(F1Dk+77Rd46?OnVlDu)*P9D%!^rFh\;+WP<oX^2@1LFXCug"ciZ!P`t>.YNU,\`0<lT2Ur.u+0Sm>,")]5.
%nm=SNb5H%l.8M'EiNc?\@Ebu<:Y1Je]7S6)%roPjbLM)"AVsogChF^M_u32^SCD$@'Vc3U8/u*1[:G;n)t&oc!%I,b\1/=7p8&3=
%7FRI,#XfH<$igP(!.D\#>`lk]8%crUE<A0AgcQf.8$4(Q.1%40?gWd>D"C$NR]GhMj,4j0Z-OI9EanRH2[.tc)@I*R%j6]]6S=2N
%LfS6K``YW5ou[;IB,D%g!i!`@fskGNh\02EDdkla;iC$bVecBTWb6T.q>(@N><'b*X9%@i+N9In(Q'HCE%d>"(Ur<hQHdB_a'Him
%fFdjVIq$dbCDCYUH3=4iLGuO/+t3SD^mYL5DAj!fd8Q;9:KRQ2\]`?PEFN^E:]nr^9:1MsW@]?dmT_?bmZ1EhmJJ-reHOKCN>UeE
%<#o&qf=r,Wr`_Fd`Q'ZD\Q%>n+(e%'UQ-k-6r%?aG-Fa5q[Ic$iOEd&XI_a]Lk_=k<Wbk%cT.;6Mt;j>99-&oAOtIE/W\2Km7d[Q
%QYl\0a0dbj&Ar>M4cV/GLE4tX;D.q*g9RNg0ZEK_S[u+]rojolI+d'e*S64s]?/W8%?HG6#@!Pj27OS17'.ouX%tHg]'JY)QUk\n
%gls5Dcc"BNf)cb:g;VXoV)6r<9]J(e<$Bl$9Q,(V8S<l3o7AO\VYi<i4Y+6`EB?L$'?.B(`B0R@&_FXt%f)&77oY:\p\F%?Hbuo9
%&K*[a=o:&0>46`D09g'i_"J'baWji-TX3i@H*30O7;38/I)r"f0T`UeEi9&&FEp3S+n#oWW1=Ne)GRNQNZA/E$:H^%LoIYj]ds5p
%W2md-;r;q!ZdFC@rm,RNa5O?!\lnH?;On"]?fQGr)b)C7:QK-^A#^`P5UMNlPca?\)_M>>\)^TK*VR)5MdQPsG(`-9%^lb@qt)>#
%[g@=J']nOa2!d('bFcg"!=1\dTa(,P42*>Us0Cs9GS2*A4lO;qfg_-E"<Tia(b%WD!<Pi_)\rHNXBUcaK=pQA)JJde%IQFe"Rb-0
%h)76V!6Wa;9>m)sfKq*4J/3FW4uJGD%&NtNf#$J%(F5[qTmfGOA#'5K^4MUPCD"*6*<Y5ZDrO:&7UC<K?r8j)Z76-P);F^V3Xga>
%CtG@)YF;^\k'n/a,7^k;Tf=W8oM\?d3DoK*ML@i>1hLOGd';7ZW-sLuH^,7:G*jTf,f.1]VS'kL2`eR_Pq5RL[4U4.I+0p8kY*s7
%L:p-a88oC-O0_RZ@3:_-4o%OfOd#0,I8DIH/_IjYh4%pseE%^r;>J;VK&BjfoY+`!O8>MOiqbgA[_<d"ZYmq_iaRYJLgNpW*,DT1
%K;VhcnP=C'l-$O7W"5o^\dT`@4F;i8q&&g9CmbL@nc5enb/A5H^4l7T5C&p,G[G%OE8E5[j:?L.%XFW'mF4_fF,+If1F&sZiIN35
%'K1U^%P%r2Y5,-)m'jNuF_7+#6J./>@MPcU<p!#VUV1)k]i;/\Km'0r8S-Qu9M`<"8h[Xe&H*A7Ul6e.Q`MkMF7JbiKQ4XZbl5OE
%C9s4NM2Js'VRC^GI6(bskZNNC6[Jo*=X%DoLg=IGI57;V&f^0lBS\_72\O84jAi\hf6gG=-pI!U,*Wq35[.LnE.gM99KC%k72d<>
%VCg@a5_tn+&;P@MKHOu@%JBshl=9`gU^Vg9Sqo^L_;&V?odFK?8us&I]<b!A1oJP3i>kZ6a'I)o',IT0]D0btHVm)mAub.bGt[lF
%d.3lN$'5pgR*8Y4)30@;3H;oQ3kW`mc`O&Q%5&]QcsUWT'=S`VFgPA7-kS%tolLLA5m$TjOaNKt>Is4e<AX?hHr6uT]Y9TE@i;lB
%%+4WcF876Sg\RYDfE]H<PBlbVq6pSs6^WlQm1G<@g[9>*)p5Iuplh1IAr8?X-QgK1;.f7%$;mAAm#*5pgt=I[TB_AA[e1(2U;cLY
%Z`Qkr:,d;b,Ef[(\KmtV%u:u3C>6nJTQh#4AWZ=Q[_>$me@I?ACLUT*3$@LET:&s(h*(U@IOY`hM#Z]+qIa4%)[&QC[r\it0^a[b
%._(YlgF_1>rs(.N9^\k(*bQBk\e+T+MlmY=Xm<F>#M`0E4t3ltie#2E+Cq.(UnruJ<:fo>eqV$62gaP4nHpL9MO7^)S5%bS&RAq^
%boNpM>FW`<Lt7ip:U#o@nmV/\p.?Gu:.l=24<aor5[TSHM/l`dU,,L*gW4jm8Ao&`nP<2.mrp9ZYS:<p416h;Mi&;?)b$(8!4^SN
%;3')XmRTt<'BtZ/IGmrC7q6c:b*9;t"`5-n%Z.%&dlYHo%#+h-AX1>m$\je2E:6Rg2?\5.<0ZV^qbFlTVZSLY8OmG:-O4Wm@V?Oq
%n1,_Kb:euf-QL@ms0=S0\.g%X7Qn2Idmuqs%WZfLNJe.Z(b`Ct5f,F";1W;p7"o<!TUgpse<-!a<\RAYAdoZ8A>0jdV\fOM[30$\
%ZjS?uTEt,06k'n?R!iM>(=45DH_[;:Lmo&W<$8,OTV=bTWmjk>U)'C1bs>0'$aRS\)Q9UnBL7l>$9g0bjD.^oE/n4c>Z;u[heTa7
%EDbm0oH=Gt+K<#eE5^uW6q%Qp5h?Oo]Mkc-DC`E6\8Q`>b&/2tW##-UPbqN.ec/FEW53P!pkDbtL&X,2;1H_u2eQ#c\IFT0/<`qL
%)bhpU=PRb5R_l3LEUmi8S(fKgHp:P6J!>m!DI](%-=AU/];YnEgG3+M#;tn,&)PC+ad)ZZk2dH3M.BTT)gC:.%V/NYro)lU!uVgV
%9LhTn"u9q=RRiq^)0M)?-3s73ga4d+i!gX,NJr`9Ob+^NiXq[99L]2ugEbFMi-k$=(OT2P#dVk'I+1EnoeRU'6QqQo)]prQd3[N6
%_++rc2pWj8l61W7UI+emP2N):Z"Y#-<"qa/oSJY:Qm`?%O@l_;]ca-1[HU#SOcYI:HaduAUr'dL;I#WO>$_ART-0pFKYHV;86rsb
%Q[Raq&Q3=Tnoc:SiinlZP)p#`JNe&uUuL^WPQN(o55?6&+VdNnGF&W8LY"6l;GeNU,Qo9u@+g2Y(o_0r<8g,6KdA0k.LE)N&abU+
%E'[#HmNjc&"XCDtL71i3U]t(@9"GC&C;@]`;G.rT21Pb4mt-a,&8-2332pT7_%*!b`RGuNA$LBBGF]E:$R2I"Vdj=6^n$j=$8E9+
%4n%`RlT6io"C`i]rFt6khg)3!n59inM.S[=085^LY`3!lW<aR86'?ea)BHj(-WV]<b2,joe62@s4P2]u:!?Q>V*YX40f'OQ92A7+
%K:*'WZYjBP,'4!?5\Hqq!R7i);c,AP@=jo)>-gdV1UY#FX>)hLVFEUnAHalt+?l5V1K2J8RI9\cRAgeT@1pN.!]X\B+JqW>9kp;g
%W=`qL]22EN0dr'7je/J;1VZ";9h!RYgGi,1QS7i>:\7]c<4M>3Koqu7(O\(@";4(`r)C2iT_&Zj<30QM2a$l7nCWq4V]NS\DJFqF
%1R0'i_B7!$eF+<h1tD7'.k[3g0JX[KPK[!RU2Ack2&5#3[dXfBWWX4t<J$4!g;/E1g;P/he?4M`VCmW&O<9@OiN1T.csI>CQ0^1H
%OSYAd;bqL&cfCsDPIjal^B$2L@a-sCl8plr'PaX_lX'uV'eW_a$PAW]+K1RUh[FWpH).<\GbCodZJX`!*Y[;.;/)e#:fH=@de,V[
%RgMYAR4r\\C&??>c;!E0'@]t^#\Ig=#@a\i%22YbG3QKL)b[i]^eCSjAd&A2dpYFuTNu3-8ingb<?d$_.P3<@W=ifTC9QZ*VKQMT
%B'Nk)YBchN@AZpr&Ree`9]^N+&^44m,(hh+R2SCd4<U&k#\(fu2J+F*J4soAR&Ler9Hu?Y@\b`<eC4PcrY>VoPp3Fb#\khX(uaII
%C+;Xr&]0d^<!laEa)BI,">pj(l9)#E'`4s_e4*/$PVc@RC87Y(0JuF:.Ks(j'@^""A`7;5eC;Ik+*0lUjRW/mr\'+s8n#:[TQ-m,
%SjQ5k.L^N8go7:9;c>,?kGNKOVl$%P9r7@NFAD*;6qsNI-_-?^RYlo5Y\p>8;YZGN;%M/U$C7QWRC\3'Rl=O6[Y^E0kTJ\0fpJ`q
%pj5;#7=E;%]Muh,bjGWf'k+itB1EjnQ(jm'c,<S=Q/_B*OdM$QDt[KK;\<WdjP(Zm<!5rTA1JLRW>(/I1G9L!SQq.D9VnC/141uh
%.RcQhS;F3Z.g=I4+Jr%1'qC%K9L[U!:/3ZU.`H$4AK@2<Mtt-SNII7_qE'g*rcaS_r[EXCnas#4rpf*BG`:SS98Vg$c^\_kQqTDF
%MJ28:-i!'8k9"'<Pk0jJ5O&++Mir74"Q,Df*cImNT')HR-Mb;d^"tHWlGIYO\S%Eslu:91s$g5M1X:J3>Mh6^Ilgll1X?$cK65Ui
%`qau$q891B?Oq#uH<,)$9tO#!aZMf(n&[_B\:.BMq8;rRGQ.F'k=liX8+c1/kQg"KAYC2N^N\e5fBd][fC,;YrgnN:Sp^O82"a$-
%r&slR:XH33ali-7k<G8[rlpIq84#PWDbiaHrnX*#^,gmJUnZK5lV6dONn$;mr&t)X4obH5oDP#V\`]UbG.,,p3kHe\nZD6TkO860
%^Hqkp97DebKt^#oY/it;,=ll&HM1IDa[NCIfO)+5?!:#"!Ie*NH@CdQo$Tb:>b.:SXaWu^qSO4DIejA!:PO15]1\01L9J]sYA!]Y
%)6L*<A?2?\\*'e^5p^#(_sboSc^'s)erT%Lo@C5`F67dtf.1mnCUWQpS%#s)pOr5>lEJ/h@Jq-^I8<uFm;.2H=T@c)I8<uFX,hN%
%pOr56K_8[[SSF#I)87G?I2-uqnp2q!Uot#N>lsoD(H$n0_cJ+gY6D+#A'ZHf7.q$rPKI5/D!uO'n+l8[45BGZ^X:X,r:Ssmf(]+8
%s&-!.^#uT6kHDY`YQ*,K_Tt#frE&r*-'(4,=(S]#U0$E]YB<Unll!J`TDdf.RaI_c.rs?b_'Q-F_sboeY?Ck<Y3\<>rB6SI4)B=@
%B)h77I8=JTm;.2HB)eompp'R(p@i+kh]S?c=8brAWBJ.#V6sql>a*gSQCLn.2u*?nmGT9>l0TA&,/HDY>Z0>fn@Ok=CZ^,U1O@A`
%0C3Z(D#X]<h_X#:4'USugOD:hh_X$E1Y^eCg]'pgD#[MU<69)d=$5*q\??LhGA"HN>25M.^4ojqa`Pj(hid;siN'9?o4MD#h(sFY
%`d>u.mrhCnC$lKngsb&ndFS%KpYX9IpGDX%cIV_HpV6QdDgG3#Int.c%Fa*^br&MLh(s@G_Y[O+h'qec3A'JY_q1]tIsb*,h_XV(
%5/Q-G_VW8V#m)Ug9#!4r=<T@u1+<f;$W%&o+:,%Pg#*oG"P.NKXc^C+IPRH8C]mdXQsGd^eq!@'28h*aXRer/Y<RB[HN1/Y45@1!
%^X:X,XS:Vtf(Z9?hp0gIXS9L+Ld-74H@O7es">Y`rRY<5,pdnR3+\&41fh*qoW]?pQ*N'^37D!ooC"ul=FkFs=Ji>E*lp`ZV*n.l
%R:rZm+D!kP4BAg.WqN*j;@Y"k<(@iWngukBbQf%:-"\oqa%FIC64u[ejET[.(l58X&$"&T"d'OVU\9*P9NFb<[2ZqmV&WHX@^7W+
%J%&3X'@m*1l)\:eR$g'UVmDs]B;P5MF7R^?Sb3[X/*.nBR)=,+lR?XN9!)Z:;u]b:XE1-4QL(TB58gu4Pgp(QQ:EPXjaco>ij-jm
%hr`50$.t_2ARr3#cO+!UY?C1ZcO+3hDW\8LJ43Tf)kRj91.gt<.BQM`-MX[,"NmO.c\bCkZ,ZF'cPl'CQ5+dJ8t';]b\*ad9.nJ:
%<od`DP+]-Z\gA@!SX%Va`I6mT;A(Ci&6^Me<'62;8'W4<rU'f^Pql.g3"oJ^0CWP^o[^+p,t%Rm!sWs=YZd0J4p8uBL$&p]d)9\<
%nqN[QK@P;/\j&0Va6s,*[=a(W9&LHfT+tP>7S$6r0u>Rtn6(*!qLQuHo@>":<giHK#d"^NKN8Be6>M>e6>Nda@'k)_#"IofqY*%I
%8)Ds,3hqu,TObD.3AXi7oL[A>ZuVAB'3`-OTiK@bIODLo6>0A9rC\<@/ii5^G;ojpAp$:+<d$cBQ0Hm(TllLr-EhM_aPJa'D:AkY
%.m-G8K;UG-iH6I\Ak"<<AX_BlXY%s!6"h!`i3P=`TX.8>0V((14+H"sZ,A^4I+Fm@Ic.R+>kJ>o<SEl:X:c+m<bZiqB9b1B=aM.o
%T=$1*n6$S!J'B:Q/Y@1-eD>fVAF%NR7=6k8,P\>`e>rp#T,"'E\Cnl776$B3&I4qn6DA2VZVp]XVO>e7i6qXW+LG%"ece?QV241"
%AjS":-P=uN$*=o]`$1id=qU$nPZ78tZr0T)104XQ'bSqlH*2bG8tjf]$*=o%ohH'%&\!H!4qUs7qnLl=XVkr)l%E(Ei(]o*4/)<e
%67^Vq\=2GQBK`!78eF0M[HfoJob9_C"fA2m<kfbDl]T)u`@"BaDC2_g@$JrG%tmsjUSaI*\qkg)CH?*@s*VVBDQ7N#<Z:nLTX1B,
%A7d_MU.&\gK$B1'i/V:oNQk(8;3tlU.n*<T5Pdo`78Psj0BfJC^h.V)%QZ+,WZ+hbN-&)-;9#$KMXF4\7\d:f\.ctT)kE8RU*7g(
%<f3W'OYP3c.G>,D7&.(4+A7Kn)P*-;[tqeZI+H:7?Zo.^`+T&)-/YU91Cq8"2h1\qT,sa"L<KK.rVu9DYON_6T:u;`rXV7f`I@j%
%n_8OE5Q/o[rUYZp*raX+J,A]h_]SoQr:+]`A=V!j2?;BuT&T?`6J_^9_umr,.B?(f6n=]]2>rL,&j/@1Qt;<-`%u;3_QJ?%FWeSV
%UNl;QnL.K\TZ@b'bK^[M-NBHW)A\;>p&e!=*a;mp-g.aE_9rcAS5U`C2XktlMjg4j0UCgCZjT-q(=?3.Yd1jgO=FC;4t]YC.hKOF
%*[Kt5<+19%=eQ!>fM4(J:f)4K-3n6K'ceeU/MA45n9<BJT#/it2JT@gXo=M(5H+\CT=G8K6goUJ?aQ-mpnG/RTLs!HHr8X&J[H96
%6In'hpnG2X7DD#k\!<`BqMG>Xq]"JMej_*TE%-NA:g5+NBl.k*7CsN">f)cKeQ.Mn>.Ybnd0<)S?bk:9h``rQD&jQg/S+u4XkI<q
%;%L/CdcN<YUSSb/D*+t$r[I67N;`ZA+%5Lc##WSfP[DEu\q#nq>SegN+^ET.,,k#;',fk,`5U7`SUs8\Te[9YC)U>%.NUtb,J&N=
%MsJ_e09pB&f']%]]SXN,L60*MpOH)K/(bp0YL1:jn,'\T-KVS6Af:)^)s6\P,Goa6q1s%K*aEWTa-T$``k#eI[T*_i'M'rrIitAu
%XI107=mWq?K<IeS'pTka)goYt]E-!R1tm?c7Fu\E7i0K>E\uE8K`gt8;86>Q_eAQd'8>ks6HF3QN&WpE+XHdB*:jdpNYp&`0GIuM
%^d.k%G];]!G<t1nDX9e7C:/c>cWUa#%8EW0.#C$FlhE$aYk#a>0C)p?;NWrB:t*:Bq_.kTE3*"6\2Z*0T9Sc:22H.9*mYAbj[3r$
%/V[igUnF#+1aUXL2BkQ:5huTS2nJc!DPCWOF%cQ6R+RRXNCHMV"N^$?`L:lk,BkX]'JfWiG&X0N,"P<_gA9*fjo?usR]h"O10kWP
%)"8;tn?=&\=l<_q;HbMX.kOmPOQcheWiZMKQ+3fE!nm\,]I#77es,^gomD4F6F4lh-n?EfFOIaZe:<k9V"T,Bd4p)eZf?#rRi3@F
%n8$M5Yj0s;%X`/C4OCa?!V3"(C4_L"H6Ztub%CGDnpuNt#LoS!14EeEI!k`\F6%?7g'0QtZNrM@ERm8Mp@;\7[NVt.;)>soH"5#"
%-67Yqa",`kG6jVn"m=bUo9D5frb)jcb8pC#r9tj(q:+9*9P,>fnO-agE-)_(Dkg57FE96hFD)7coZ/,S5^obmkq-NK^%-\g\`pNb
%ao[rt??hm\WUCDhV=@t`M;efC%J@Aa,:Jf<\4or)"1s70"GdSRS`>$IAmXf=H5,dS:ls`UFk.XJ2Oc_RSbLBL*/%4ZYV?E>"u4$t
%Jf>d'8-Tt,A]e5f!HLt,cG4!Q>$TIf0kJPZ8_fQU]lR:bBH,j._r'0ulIOs[9o/OOY%gA;flCpcih>nbL;ZHp[7uJm?Q2qOjO0P.
%$dT9>nS=WD&R`2Q;=S8bFj4Y<`1hB92_Q^p&Br%XhmUpiAWJ:*+cr$H[^6`VY5!eR/u$TEW8\]CfgSj&&U"Ors"<[Jqo"Pl9U7.Q
%XPGY&je)o<o-_G=eM2pnI(+Af`Ns^#q2%U1mq="3TVGDWZj=Vef7NI@nG1rWi8=HfnFH&IoZ-,Zr9s*(r69-enG"qlpq-"pmiVT!
%5<aMqj'V`Ln,D8Vs6KQ;5Q'bA#jHd;pZ50]J+r!ts6u)!rpfl@J,"Nnr6IW)W"jQ)r-*Yhn,MBKru^^9ISg~>
%AI9_PrivateDataEnd
